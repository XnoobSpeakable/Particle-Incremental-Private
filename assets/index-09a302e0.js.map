{"version":3,"file":"index-09a302e0.js","sources":["../../node_modules/break_eternity.js/dist/break_eternity.esm.js","../../src/util.ts","../../src/player.ts","../../src/music.ts","../../src/upgrades.ts","../../src/achievements.ts","../../src/features.ts","../../src/main.ts"],"sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\n/**\r\n * A LRU cache intended for caching pure functions.\r\n */\nvar LRUCache = /*#__PURE__*/function () {\n  /**\r\n   * @param maxSize The maximum size for this cache. We recommend setting this\r\n   * to be one less than a power of 2, as most hashtables - including V8's\r\n   * Object hashtable (https://crsrc.org/c/v8/src/objects/ordered-hash-table.cc)\r\n   * - uses powers of two for hashtable sizes. It can't exactly be a power of\r\n   * two, as a .set() call could temporarily set the size of the map to be\r\n   * maxSize + 1.\r\n   */\n  function LRUCache(maxSize) {\n    _classCallCheck(this, LRUCache);\n\n    this.map = new Map(); // Invariant: Exactly one of the below is true before and after calling a\n    // LRUCache method:\n    // - first and last are both undefined, and map.size() is 0.\n    // - first and last are the same object, and map.size() is 1.\n    // - first and last are different objects, and map.size() is greater than 1.\n\n    this.first = undefined;\n    this.last = undefined;\n    this.maxSize = maxSize;\n  }\n\n  _createClass(LRUCache, [{\n    key: \"size\",\n    get: function get() {\n      return this.map.size;\n    }\n    /**\r\n     * Gets the specified key from the cache, or undefined if it is not in the\r\n     * cache.\r\n     * @param key The key to get.\r\n     * @returns The cached value, or undefined if key is not in the cache.\r\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var node = this.map.get(key);\n\n      if (node === undefined) {\n        return undefined;\n      } // It is guaranteed that there is at least one item in the cache.\n      // Therefore, first and last are guaranteed to be a ListNode...\n      // but if there is only one item, they might be the same.\n      // Update the order of the list to make this node the first node in the\n      // list.\n      // This isn't needed if this node is already the first node in the list.\n\n\n      if (node !== this.first) {\n        // As this node is DIFFERENT from the first node, it is guaranteed that\n        // there are at least two items in the cache.\n        // However, this node could possibly be the last item.\n        if (node === this.last) {\n          // This node IS the last node.\n          this.last = node.prev; // From the invariants, there must be at least two items in the cache,\n          // so node - which is the original \"last node\" - must have a defined\n          // previous node. Therefore, this.last - set above - must be defined\n          // here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          this.last.next = undefined;\n        } else {\n          // This node is somewhere in the middle of the list, so there must be at\n          // least THREE items in the list, and this node's prev and next must be\n          // defined here.\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          node.prev.next = node.next; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n          node.next.prev = node.prev;\n        }\n\n        node.next = this.first; // From the invariants, there must be at least two items in the cache, so\n        // this.first must be a valid ListNode.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      return node.value;\n    }\n    /**\r\n     * Sets an entry in the cache.\r\n     *\r\n     * @param key The key of the entry.\r\n     * @param value The value of the entry.\r\n     * @throws Error, if the map already contains the key.\r\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      // Ensure that this.maxSize >= 1.\n      if (this.maxSize < 1) {\n        return;\n      }\n\n      if (this.map.has(key)) {\n        throw new Error(\"Cannot update existing keys in the cache\");\n      }\n\n      var node = new ListNode(key, value); // Move node to the front of the list.\n\n      if (this.first === undefined) {\n        // If the first is undefined, the last is undefined too.\n        // Therefore, this cache has no items in it.\n        this.first = node;\n        this.last = node;\n      } else {\n        // This cache has at least one item in it.\n        node.next = this.first;\n        this.first.prev = node;\n        this.first = node;\n      }\n\n      this.map.set(key, node);\n\n      while (this.map.size > this.maxSize) {\n        // We are guaranteed that this.maxSize >= 1,\n        // so this.map.size is guaranteed to be >= 2,\n        // so this.first and this.last must be different valid ListNodes,\n        // and this.last.prev must also be a valid ListNode (possibly this.first).\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        var last = this.last;\n        this.map[\"delete\"](last.key);\n        this.last = last.prev; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.last.next = undefined;\n      }\n    }\n  }]);\n\n  return LRUCache;\n}();\n/**\r\n * A node in a doubly linked list.\r\n */\n\nvar ListNode = /*#__PURE__*/_createClass(function ListNode(key, value) {\n  _classCallCheck(this, ListNode);\n\n  this.next = undefined;\n  this.prev = undefined;\n  this.key = key;\n  this.value = value;\n});\n\nvar MAX_SIGNIFICANT_DIGITS = 17; //Maximum number of digits of precision to assume in Number\n\nvar EXP_LIMIT = 9e15; //If we're ABOVE this value, increase a layer. (9e15 is close to the largest integer that can fit in a Number.)\n\nvar LAYER_DOWN = Math.log10(9e15);\nvar FIRST_NEG_LAYER = 1 / 9e15; //At layer 0, smaller non-zero numbers than this become layer 1 numbers with negative mag. After that the pattern continues as normal.\n\nvar NUMBER_EXP_MAX = 308; //The largest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar NUMBER_EXP_MIN = -324; //The smallest exponent that can appear in a Number, though not all mantissas are valid here.\n\nvar MAX_ES_IN_A_ROW = 5; //For default toString behaviour, when to swap from eee... to (e^n) syntax.\n\nvar DEFAULT_FROM_STRING_CACHE_SIZE = (1 << 10) - 1; // The default size of the LRU cache used to cache Decimal.fromString.\n\nvar powerOf10 = function () {\n  // We need this lookup table because Math.pow(10, exponent)\n  // when exponent's absolute value is large is slightly inaccurate.\n  // You can fix it with the power of math... or just make a lookup table.\n  // Faster AND simpler\n  var powersOf10 = [];\n\n  for (var i = NUMBER_EXP_MIN + 1; i <= NUMBER_EXP_MAX; i++) {\n    powersOf10.push(Number(\"1e\" + i));\n  }\n\n  var indexOf0InPowersOf10 = 323;\n  return function (power) {\n    return powersOf10[power + indexOf0InPowersOf10];\n  };\n}(); //tetration/slog to real height stuff\n//background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n\nvar critical_headers = [2, Math.E, 3, 4, 5, 6, 7, 8, 9, 10];\nvar critical_tetr_values = [[// Base 2 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.0891180521811202527, 1.1789767925673958433, 1.2701455431742086633, 1.3632090180450091941, 1.4587818160364217007, 1.5575237916251418333, 1.6601571006859253673, 1.7674858188369780435, 1.8804192098842727359, 2], [// Base E (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1121114330934078681, 1.2310389249316089299, 1.3583836963111376089, 1.4960519303993531879, 1.6463542337511945810, 1.8121385357018724464, 1.9969713246183068478, 2.2053895545527544330, 2.4432574483385252544, Math.E //1.0\n], [// Base 3\n1, 1.1187738849693603, 1.2464963939368214, 1.38527004705667, 1.5376664685821402, 1.7068895236551784, 1.897001227148399, 2.1132403089001035, 2.362480153784171, 2.6539010333870774, 3], [// Base 4\n1, 1.1367350847096405, 1.2889510672956703, 1.4606478703324786, 1.6570295196661111, 1.8850062585672889, 2.1539465047453485, 2.476829779693097, 2.872061932789197, 3.3664204535587183, 4], [// Base 5\n1, 1.1494592900767588, 1.319708228183931, 1.5166291280087583, 1.748171114438024, 2.0253263297298045, 2.3636668498288547, 2.7858359149579424, 3.3257226212448145, 4.035730287722532, 5], [// Base 6\n1, 1.159225940787673, 1.343712473580932, 1.5611293155111927, 1.8221199554561318, 2.14183924486326, 2.542468319282638, 3.0574682501653316, 3.7390572020926873, 4.6719550537360774, 6], [// Base 7\n1, 1.1670905356972596, 1.3632807444991446, 1.5979222279405536, 1.8842640123816674, 2.2416069644878687, 2.69893426559423, 3.3012632110403577, 4.121250340630164, 5.281493033448316, 7], [// Base 8\n1, 1.1736630594087796, 1.379783782386201, 1.6292821855668218, 1.9378971836180754, 2.3289975651071977, 2.8384347394720835, 3.5232708454565906, 4.478242031114584, 5.868592169644505, 8], [// Base 9\n1, 1.1793017514670474, 1.394054150657457, 1.65664127441059, 1.985170999970283, 2.4069682290577457, 2.9647310119960752, 3.7278665320924946, 4.814462547283592, 6.436522247411611, 9], [// Base 10 (using http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html )\n1, 1.1840100246247336579, 1.4061375836156954169, 1.6802272208863963918, 2.026757028388618927, 2.4770056063449647580, 3.0805252717554819987, 3.9191964192627283911, 5.1351528408331864230, 6.9899611795347148455, 10]];\nvar critical_slog_values = [[// Base 2\n-1, -0.9194161097107025, -0.8335625019330468, -0.7425599821143978, -0.6466611521029437, -0.5462617907227869, -0.4419033816638769, -0.3342645487554494, -0.224140440909962, -0.11241087890006762, 0], [// Base E\n-1, -0.90603157029014, -0.80786507256596, -0.7064666939634, -0.60294836853664, -0.49849837513117, -0.39430303318768, -0.29147201034755, -0.19097820800866, -0.09361896280296, 0 //1.0\n], [// Base 3\n-1, -0.9021579584316141, -0.8005762598234203, -0.6964780623319391, -0.5911906810998454, -0.486050182576545, -0.3823089430815083, -0.28106046722897615, -0.1831906535795894, -0.08935809204418144, 0], [// Base 4\n-1, -0.8917227442365535, -0.781258746326964, -0.6705130326902455, -0.5612813129406509, -0.4551067709033134, -0.35319256652135966, -0.2563741554088552, -0.1651412821106526, -0.0796919581982668, 0], [// Base 5\n-1, -0.8843387974366064, -0.7678744063886243, -0.6529563724510552, -0.5415870994657841, -0.4352842206588936, -0.33504449124791424, -0.24138853420685147, -0.15445285440944467, -0.07409659641336663, 0], [// Base 6\n-1, -0.8786709358426346, -0.7577735191184886, -0.6399546189952064, -0.527284921869926, -0.4211627631006314, -0.3223479611761232, -0.23107655627789858, -0.1472057700818259, -0.07035171210706326, 0], [// Base 7\n-1, -0.8740862815291583, -0.7497032990976209, -0.6297119746181752, -0.5161838335958787, -0.41036238255751956, -0.31277212146489963, -0.2233976621705518, -0.1418697367979619, -0.06762117662323441, 0], [// Base 8\n-1, -0.8702632331800649, -0.7430366914122081, -0.6213373075161548, -0.5072025698095242, -0.40171437727184167, -0.30517930701410456, -0.21736343968190863, -0.137710238299109, -0.06550774483471955, 0], [// Base 9\n-1, -0.8670016295947213, -0.7373984232432306, -0.6143173985094293, -0.49973884395492807, -0.394584953527678, -0.2989649949848695, -0.21245647317021688, -0.13434688362382652, -0.0638072667348083, 0], [// Base 10\n-1, -0.8641642839543857, -0.732534623168535, -0.6083127477059322, -0.4934049257184696, -0.3885773075899922, -0.29376029055315767, -0.2083678561173622, -0.13155653399373268, -0.062401588652553186, 0]];\n\nvar D = function D(value) {\n  return Decimal.fromValue_noAlloc(value);\n};\n\nvar FC = function FC(sign, layer, mag) {\n  return Decimal.fromComponents(sign, layer, mag);\n};\n\nvar FC_NN = function FC_NN(sign, layer, mag) {\n  return Decimal.fromComponents_noNormalize(sign, layer, mag);\n}; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nvar decimalPlaces = function decimalPlaces(value, places) {\n  var len = places + 1;\n  var numDigits = Math.ceil(Math.log10(Math.abs(value)));\n  var rounded = Math.round(value * Math.pow(10, len - numDigits)) * Math.pow(10, numDigits - len);\n  return parseFloat(rounded.toFixed(Math.max(len - numDigits, 0)));\n};\n\nvar f_maglog10 = function f_maglog10(n) {\n  return Math.sign(n) * Math.log10(Math.abs(n));\n}; //from HyperCalc source code\n\n\nvar f_gamma = function f_gamma(n) {\n  if (!isFinite(n)) {\n    return n;\n  }\n\n  if (n < -50) {\n    if (n === Math.trunc(n)) {\n      return Number.NEGATIVE_INFINITY;\n    }\n\n    return 0;\n  }\n\n  var scal1 = 1;\n\n  while (n < 10) {\n    scal1 = scal1 * n;\n    ++n;\n  }\n\n  n -= 1;\n  var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n  l = l + (n + 0.5) * Math.log(n);\n  l = l - n;\n  var n2 = n * n;\n  var np = n;\n  l = l + 1 / (12 * np);\n  np = np * n2;\n  l = l + 1 / (360 * np);\n  np = np * n2;\n  l = l + 1 / (1260 * np);\n  np = np * n2;\n  l = l + 1 / (1680 * np);\n  np = np * n2;\n  l = l + 1 / (1188 * np);\n  np = np * n2;\n  l = l + 691 / (360360 * np);\n  np = np * n2;\n  l = l + 7 / (1092 * np);\n  np = np * n2;\n  l = l + 3617 / (122400 * np);\n  return Math.exp(l) / scal1;\n};\n\nvar OMEGA = 0.56714329040978387299997; // W(1, 0)\n//from https://math.stackexchange.com/a/465183\n// The evaluation can become inaccurate very close to the branch point\n\nvar f_lambertw = function f_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var wn;\n\n  if (!Number.isFinite(z)) {\n    return z;\n  }\n\n  if (z === 0) {\n    return z;\n  }\n\n  if (z === 1) {\n    return OMEGA;\n  }\n\n  if (z < 10) {\n    w = 0;\n  } else {\n    w = Math.log(z) - Math.log(Math.log(z));\n  }\n\n  for (var i = 0; i < 100; ++i) {\n    wn = (z * Math.exp(-w) + w * w) / (w + 1);\n\n    if (Math.abs(wn - w) < tol * Math.abs(wn)) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Number.NaN;\n}; //from https://github.com/scipy/scipy/blob/8dba340293fe20e62e173bdf2c10ae208286692f/scipy/special/lambertw.pxd\n// The evaluation can become inaccurate very close to the branch point\n// at ``-1/e``. In some corner cases, `lambertw` might currently\n// fail to converge, or can end up on the wrong branch.\n\n\nfunction d_lambertw(z) {\n  var tol = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1e-10;\n  var w;\n  var ew, wewz, wn;\n\n  if (!Number.isFinite(z.mag)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dZero)) {\n    return z;\n  }\n\n  if (z.eq(Decimal.dOne)) {\n    //Split out this case because the asymptotic series blows up\n    return Decimal.fromNumber(OMEGA);\n  } //Get an initial guess for Halley's method\n\n\n  w = Decimal.ln(z); //Halley's method; see 5.9 in [1]\n\n  for (var i = 0; i < 100; ++i) {\n    ew = w.neg().exp();\n    wewz = w.sub(z.mul(ew));\n    wn = w.sub(wewz.div(w.add(1).sub(w.add(2).mul(wewz).div(Decimal.mul(2, w).add(2)))));\n\n    if (Decimal.abs(wn.sub(w)).lt(Decimal.abs(wn).mul(tol))) {\n      return wn;\n    } else {\n      w = wn;\n    }\n  }\n\n  throw Error(\"Iteration failed to converge: \".concat(z.toString())); //return Decimal.dNaN;\n}\n/**\r\n * The Decimal's value is simply mantissa * 10^exponent.\r\n */\n\n\nvar Decimal = /*#__PURE__*/function () {\n  function Decimal(value) {\n    _classCallCheck(this, Decimal);\n\n    this.sign = 0;\n    this.mag = 0;\n    this.layer = 0;\n\n    if (value instanceof Decimal) {\n      this.fromDecimal(value);\n    } else if (typeof value === \"number\") {\n      this.fromNumber(value);\n    } else if (typeof value === \"string\") {\n      this.fromString(value);\n    }\n  }\n\n  _createClass(Decimal, [{\n    key: \"m\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        var exp = Math.floor(Math.log10(this.mag)); //handle special case 5e-324\n\n        var man;\n\n        if (this.mag === 5e-324) {\n          man = 5;\n        } else {\n          man = this.mag / powerOf10(exp);\n        }\n\n        return this.sign * man;\n      } else if (this.layer === 1) {\n        var residue = this.mag - Math.floor(this.mag);\n        return this.sign * Math.pow(10, residue);\n      } else {\n        //mantissa stops being relevant past 1e9e15 / ee15.954\n        return this.sign;\n      }\n    },\n    set: function set(value) {\n      if (this.layer <= 2) {\n        this.fromMantissaExponent(value, this.e);\n      } else {\n        //don't even pretend mantissa is meaningful\n        this.sign = Math.sign(value);\n\n        if (this.sign === 0) {\n          this.layer = 0;\n          this.exponent = 0;\n        }\n      }\n    }\n  }, {\n    key: \"e\",\n    get: function get() {\n      if (this.sign === 0) {\n        return 0;\n      } else if (this.layer === 0) {\n        return Math.floor(Math.log10(this.mag));\n      } else if (this.layer === 1) {\n        return Math.floor(this.mag);\n      } else if (this.layer === 2) {\n        return Math.floor(Math.sign(this.mag) * Math.pow(10, Math.abs(this.mag)));\n      } else {\n        return this.mag * Number.POSITIVE_INFINITY;\n      }\n    },\n    set: function set(value) {\n      this.fromMantissaExponent(this.m, value);\n    }\n  }, {\n    key: \"s\",\n    get: function get() {\n      return this.sign;\n    },\n    set: function set(value) {\n      if (value === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n      } else {\n        this.sign = value;\n      }\n    } // Object.defineProperty(Decimal.prototype, \"mantissa\", {\n\n  }, {\n    key: \"mantissa\",\n    get: function get() {\n      return this.m;\n    },\n    set: function set(value) {\n      this.m = value;\n    }\n  }, {\n    key: \"exponent\",\n    get: function get() {\n      return this.e;\n    },\n    set: function set(value) {\n      this.e = value;\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize() {\n      /*\r\n      PSEUDOCODE:\r\n      Whenever we are partially 0 (sign is 0 or mag and layer is 0), make it fully 0.\r\n      Whenever we are at or hit layer 0, extract sign from negative mag.\r\n      If layer === 0 and mag < FIRST_NEG_LAYER (1/9e15), shift to 'first negative layer' (add layer, log10 mag).\r\n      While abs(mag) > EXP_LIMIT (9e15), layer += 1, mag = maglog10(mag).\r\n      While abs(mag) < LAYER_DOWN (15.954) and layer > 0, layer -= 1, mag = pow(10, mag).\r\n            When we're done, all of the following should be true OR one of the numbers is not IsFinite OR layer is not IsInteger (error state):\r\n      Any 0 is totally zero (0, 0, 0).\r\n      Anything layer 0 has mag 0 OR mag > 1/9e15 and < 9e15.\r\n      Anything layer 1 or higher has abs(mag) >= 15.954 and < 9e15.\r\n      We will assume in calculations that all Decimals are either erroneous or satisfy these criteria. (Otherwise: Garbage in, garbage out.)\r\n      */\n      if (this.sign === 0 || this.mag === 0 && this.layer === 0) {\n        this.sign = 0;\n        this.mag = 0;\n        this.layer = 0;\n        return this;\n      }\n\n      if (this.layer === 0 && this.mag < 0) {\n        //extract sign from negative mag at layer 0\n        this.mag = -this.mag;\n        this.sign = -this.sign;\n      } //Handle shifting from layer 0 to negative layers.\n\n\n      if (this.layer === 0 && this.mag < FIRST_NEG_LAYER) {\n        this.layer += 1;\n        this.mag = Math.log10(this.mag);\n        return this;\n      }\n\n      var absmag = Math.abs(this.mag);\n      var signmag = Math.sign(this.mag);\n\n      if (absmag >= EXP_LIMIT) {\n        this.layer += 1;\n        this.mag = signmag * Math.log10(absmag);\n        return this;\n      } else {\n        while (absmag < LAYER_DOWN && this.layer > 0) {\n          this.layer -= 1;\n\n          if (this.layer === 0) {\n            this.mag = Math.pow(10, this.mag);\n          } else {\n            this.mag = signmag * Math.pow(10, absmag);\n            absmag = Math.abs(this.mag);\n            signmag = Math.sign(this.mag);\n          }\n        }\n\n        if (this.layer === 0) {\n          if (this.mag < 0) {\n            //extract sign from negative mag at layer 0\n            this.mag = -this.mag;\n            this.sign = -this.sign;\n          } else if (this.mag === 0) {\n            //excessive rounding can give us all zeroes\n            this.sign = 0;\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      this.sign = sign;\n      this.layer = layer;\n      this.mag = mag;\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      this.layer = 1;\n      this.sign = Math.sign(mantissa);\n      mantissa = Math.abs(mantissa);\n      this.mag = exponent + Math.log10(mantissa);\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      //The idea of 'normalizing' a break_infinity.js style Decimal doesn't really apply. So just do the same thing.\n      this.fromMantissaExponent(mantissa, exponent);\n      return this;\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      this.sign = value.sign;\n      this.layer = value.layer;\n      this.mag = value.mag;\n      return this;\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      this.mag = Math.abs(value);\n      this.sign = Math.sign(value);\n      this.layer = 0;\n      this.normalize();\n      return this;\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      var originalValue = value;\n      var cached = Decimal.fromStringCache.get(originalValue);\n\n      if (cached !== undefined) {\n        return this.fromDecimal(cached);\n      }\n\n      {\n        value = value.replace(\",\", \"\");\n      } //Handle x^^^y format.\n\n\n      var pentationparts = value.split(\"^^^\");\n\n      if (pentationparts.length === 2) {\n        var _base = parseFloat(pentationparts[0]);\n\n        var _height = parseFloat(pentationparts[1]);\n\n        var heightparts = pentationparts[1].split(\";\");\n        var payload = 1;\n\n        if (heightparts.length === 2) {\n          payload = parseFloat(heightparts[1]);\n\n          if (!isFinite(payload)) {\n            payload = 1;\n          }\n        }\n\n        if (isFinite(_base) && isFinite(_height)) {\n          var result = Decimal.pentate(_base, _height, payload);\n          this.sign = result.sign;\n          this.layer = result.layer;\n          this.mag = result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^^y format.\n\n\n      var tetrationparts = value.split(\"^^\");\n\n      if (tetrationparts.length === 2) {\n        var _base2 = parseFloat(tetrationparts[0]);\n\n        var _height2 = parseFloat(tetrationparts[1]);\n\n        var _heightparts = tetrationparts[1].split(\";\");\n\n        var _payload = 1;\n\n        if (_heightparts.length === 2) {\n          _payload = parseFloat(_heightparts[1]);\n\n          if (!isFinite(_payload)) {\n            _payload = 1;\n          }\n        }\n\n        if (isFinite(_base2) && isFinite(_height2)) {\n          var _result = Decimal.tetrate(_base2, _height2, _payload);\n\n          this.sign = _result.sign;\n          this.layer = _result.layer;\n          this.mag = _result.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle x^y format.\n\n\n      var powparts = value.split(\"^\");\n\n      if (powparts.length === 2) {\n        var _base3 = parseFloat(powparts[0]);\n\n        var _exponent = parseFloat(powparts[1]);\n\n        if (isFinite(_base3) && isFinite(_exponent)) {\n          var _result2 = Decimal.pow(_base3, _exponent);\n\n          this.sign = _result2.sign;\n          this.layer = _result2.layer;\n          this.mag = _result2.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle various cases involving it being a Big Number.\n\n\n      value = value.trim().toLowerCase(); //handle X PT Y format.\n\n      var base;\n      var height;\n      var ptparts = value.split(\"pt\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload2 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload2)) {\n          _payload2 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result3 = Decimal.tetrate(base, height, _payload2);\n\n          this.sign = _result3.sign;\n          this.layer = _result3.layer;\n          this.mag = _result3.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //handle XpY format (it's the same thing just with p).\n\n\n      ptparts = value.split(\"p\");\n\n      if (ptparts.length === 2) {\n        base = 10;\n        height = parseFloat(ptparts[0]);\n        ptparts[1] = ptparts[1].replace(\"(\", \"\");\n        ptparts[1] = ptparts[1].replace(\")\", \"\");\n\n        var _payload3 = parseFloat(ptparts[1]);\n\n        if (!isFinite(_payload3)) {\n          _payload3 = 1;\n        }\n\n        if (isFinite(base) && isFinite(height)) {\n          var _result4 = Decimal.tetrate(base, height, _payload3);\n\n          this.sign = _result4.sign;\n          this.layer = _result4.layer;\n          this.mag = _result4.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      }\n\n      var parts = value.split(\"e\");\n      var ecount = parts.length - 1; //Handle numbers that are exactly floats (0 or 1 es).\n\n      if (ecount === 0) {\n        var numberAttempt = parseFloat(value);\n\n        if (isFinite(numberAttempt)) {\n          this.fromNumber(numberAttempt);\n\n          if (Decimal.fromStringCache.size >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } else if (ecount === 1) {\n        //Very small numbers (\"2e-3000\" and so on) may look like valid floats but round to 0.\n        var _numberAttempt = parseFloat(value);\n\n        if (isFinite(_numberAttempt) && _numberAttempt !== 0) {\n          this.fromNumber(_numberAttempt);\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        }\n      } //Handle new (e^N)X format.\n\n\n      var newparts = value.split(\"e^\");\n\n      if (newparts.length === 2) {\n        this.sign = 1;\n\n        if (newparts[0].charAt(0) == \"-\") {\n          this.sign = -1;\n        }\n\n        var layerstring = \"\";\n\n        for (var i = 0; i < newparts[1].length; ++i) {\n          var chrcode = newparts[1].charCodeAt(i);\n\n          if (chrcode >= 43 && chrcode <= 57 || chrcode === 101) {\n            //is \"0\" to \"9\" or \"+\" or \"-\" or \".\" or \"e\" (or \",\" or \"/\")\n            layerstring += newparts[1].charAt(i);\n          } //we found the end of the layer count\n          else {\n            this.layer = parseFloat(layerstring);\n            this.mag = parseFloat(newparts[1].substr(i + 1));\n            this.normalize();\n\n            if (Decimal.fromStringCache.maxSize >= 1) {\n              Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n            }\n\n            return this;\n          }\n        }\n      }\n\n      if (ecount < 1) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var mantissa = parseFloat(parts[0]);\n\n      if (mantissa === 0) {\n        this.sign = 0;\n        this.layer = 0;\n        this.mag = 0;\n\n        if (Decimal.fromStringCache.maxSize >= 1) {\n          Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n        }\n\n        return this;\n      }\n\n      var exponent = parseFloat(parts[parts.length - 1]); //handle numbers like AeBeC and AeeeeBeC\n\n      if (ecount >= 2) {\n        var me = parseFloat(parts[parts.length - 2]);\n\n        if (isFinite(me)) {\n          exponent *= Math.sign(me);\n          exponent += f_maglog10(me);\n        }\n      } //Handle numbers written like eee... (N es) X\n\n\n      if (!isFinite(mantissa)) {\n        this.sign = parts[0] === \"-\" ? -1 : 1;\n        this.layer = ecount;\n        this.mag = exponent;\n      } //Handle numbers written like XeY\n      else if (ecount === 1) {\n        this.sign = Math.sign(mantissa);\n        this.layer = 1; //Example: 2e10 is equal to 10^log10(2e10) which is equal to 10^(10+log10(2))\n\n        this.mag = exponent + Math.log10(Math.abs(mantissa));\n      } //Handle numbers written like Xeee... (N es) Y\n      else {\n        this.sign = Math.sign(mantissa);\n        this.layer = ecount;\n\n        if (ecount === 2) {\n          var _result5 = Decimal.mul(FC(1, 2, exponent), D(mantissa));\n\n          this.sign = _result5.sign;\n          this.layer = _result5.layer;\n          this.mag = _result5.mag;\n\n          if (Decimal.fromStringCache.maxSize >= 1) {\n            Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n          }\n\n          return this;\n        } else {\n          //at eee and above, mantissa is too small to be recognizable!\n          this.mag = exponent;\n        }\n      }\n\n      this.normalize();\n\n      if (Decimal.fromStringCache.maxSize >= 1) {\n        Decimal.fromStringCache.set(originalValue, Decimal.fromDecimal(this));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      if (value instanceof Decimal) {\n        return this.fromDecimal(value);\n      }\n\n      if (typeof value === \"number\") {\n        return this.fromNumber(value);\n      }\n\n      if (typeof value === \"string\") {\n        return this.fromString(value);\n      }\n\n      this.sign = 0;\n      this.layer = 0;\n      this.mag = 0;\n      return this;\n    }\n  }, {\n    key: \"toNumber\",\n    value: function toNumber() {\n      if (!Number.isFinite(this.layer)) {\n        return Number.NaN;\n      }\n\n      if (this.layer === 0) {\n        return this.sign * this.mag;\n      } else if (this.layer === 1) {\n        return this.sign * Math.pow(10, this.mag);\n      } //overflow for any normalized Decimal\n      else {\n        return this.mag > 0 ? this.sign > 0 ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY : 0;\n      }\n    }\n  }, {\n    key: \"mantissaWithDecimalPlaces\",\n    value: function mantissaWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.m)) {\n        return Number.NaN;\n      }\n\n      if (this.m === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.m, places);\n    }\n  }, {\n    key: \"magnitudeWithDecimalPlaces\",\n    value: function magnitudeWithDecimalPlaces(places) {\n      // https://stackoverflow.com/a/37425022\n      if (isNaN(this.mag)) {\n        return Number.NaN;\n      }\n\n      if (this.mag === 0) {\n        return 0;\n      }\n\n      return decimalPlaces(this.mag, places);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (isNaN(this.layer) || isNaN(this.sign) || isNaN(this.mag)) {\n        return \"NaN\";\n      }\n\n      if (this.mag === Number.POSITIVE_INFINITY || this.layer === Number.POSITIVE_INFINITY) {\n        return this.sign === 1 ? \"Infinity\" : \"-Infinity\";\n      }\n\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toString();\n        }\n\n        return this.m + \"e\" + this.e;\n      } else if (this.layer === 1) {\n        return this.m + \"e\" + this.e;\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + this.mag;\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + this.mag;\n        }\n      }\n    }\n  }, {\n    key: \"toExponential\",\n    value: function toExponential(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toExponential(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toFixed\",\n    value: function toFixed(places) {\n      if (this.layer === 0) {\n        return (this.sign * this.mag).toFixed(places);\n      }\n\n      return this.toStringWithDecimalPlaces(places);\n    }\n  }, {\n    key: \"toPrecision\",\n    value: function toPrecision(places) {\n      if (this.e <= -7) {\n        return this.toExponential(places - 1);\n      }\n\n      if (places > this.e) {\n        return this.toFixed(places - this.exponent - 1);\n      }\n\n      return this.toExponential(places - 1);\n    }\n  }, {\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.toString();\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toString();\n    }\n  }, {\n    key: \"toStringWithDecimalPlaces\",\n    value: function toStringWithDecimalPlaces(places) {\n      if (this.layer === 0) {\n        if (this.mag < 1e21 && this.mag > 1e-7 || this.mag === 0) {\n          return (this.sign * this.mag).toFixed(places);\n        }\n\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else if (this.layer === 1) {\n        return decimalPlaces(this.m, places) + \"e\" + decimalPlaces(this.e, places);\n      } else {\n        //layer 2+\n        if (this.layer <= MAX_ES_IN_A_ROW) {\n          return (this.sign === -1 ? \"-\" : \"\") + \"e\".repeat(this.layer) + decimalPlaces(this.mag, places);\n        } else {\n          return (this.sign === -1 ? \"-\" : \"\") + \"(e^\" + this.layer + \")\" + decimalPlaces(this.mag, places);\n        }\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs() {\n      return FC_NN(this.sign === 0 ? 0 : 1, this.layer, this.mag);\n    }\n  }, {\n    key: \"neg\",\n    value: function neg() {\n      return FC_NN(-this.sign, this.layer, this.mag);\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      return this.neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated() {\n      return this.neg();\n    } // public sign () {\n    //     return this.sign;\n    //   }\n\n  }, {\n    key: \"sgn\",\n    value: function sgn() {\n      return this.sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.round(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"floor\",\n    value: function floor() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.floor(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.ceil(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc() {\n      if (this.mag < 0) {\n        return Decimal.dZero;\n      }\n\n      if (this.layer === 0) {\n        return FC(this.sign, 0, Math.trunc(this.mag));\n      }\n\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return the other number.\n\n\n      if (this.sign === 0) {\n        return decimal;\n      }\n\n      if (decimal.sign === 0) {\n        return this;\n      } //Special case - Adding a number to its negation produces 0, no matter how large.\n\n\n      if (this.sign === -decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var a;\n      var b; //Special case: If one of the numbers is layer 2 or higher, just take the bigger number.\n\n      if (this.layer >= 2 || decimal.layer >= 2) {\n        return this.maxabs(decimal);\n      }\n\n      if (Decimal.cmpabs(this, decimal) > 0) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * a.mag + b.sign * b.mag);\n      }\n\n      var layera = a.layer * Math.sign(a.mag);\n      var layerb = b.layer * Math.sign(b.mag); //If one of the numbers is 2+ layers higher than the other, just take the bigger number.\n\n      if (layera - layerb >= 2) {\n        return a;\n      }\n\n      if (layera === 0 && layerb === -1) {\n        if (Math.abs(b.mag - Math.log10(a.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var magdiff = Math.pow(10, Math.log10(a.mag) - b.mag);\n          var mantissa = b.sign + a.sign * magdiff;\n          return FC(Math.sign(mantissa), 1, b.mag + Math.log10(Math.abs(mantissa)));\n        }\n      }\n\n      if (layera === 1 && layerb === 0) {\n        if (Math.abs(a.mag - Math.log10(b.mag)) > MAX_SIGNIFICANT_DIGITS) {\n          return a;\n        } else {\n          var _magdiff = Math.pow(10, a.mag - Math.log10(b.mag));\n\n          var _mantissa = b.sign + a.sign * _magdiff;\n\n          return FC(Math.sign(_mantissa), 1, Math.log10(b.mag) + Math.log10(Math.abs(_mantissa)));\n        }\n      }\n\n      if (Math.abs(a.mag - b.mag) > MAX_SIGNIFICANT_DIGITS) {\n        return a;\n      } else {\n        var _magdiff2 = Math.pow(10, a.mag - b.mag);\n\n        var _mantissa2 = b.sign + a.sign * _magdiff2;\n\n        return FC(Math.sign(_mantissa2), 1, b.mag + Math.log10(Math.abs(_mantissa2)));\n      }\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value) {\n      return this.add(value);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value) {\n      return this.add(D(value).neg());\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value) {\n      return this.sub(value);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value) {\n      var decimal = D(value); //inf/nan check\n\n      if (!Number.isFinite(this.layer)) {\n        return this;\n      }\n\n      if (!Number.isFinite(decimal.layer)) {\n        return decimal;\n      } //Special case - if one of the numbers is 0, return 0.\n\n\n      if (this.sign === 0 || decimal.sign === 0) {\n        return FC_NN(0, 0, 0);\n      } //Special case - Multiplying a number by its own reciprocal yields +/- 1, no matter how large.\n\n\n      if (this.layer === decimal.layer && this.mag === -decimal.mag) {\n        return FC_NN(this.sign * decimal.sign, 0, 1);\n      }\n\n      var a;\n      var b; //Which number is bigger in terms of its multiplicative distance from 1?\n\n      if (this.layer > decimal.layer || this.layer == decimal.layer && Math.abs(this.mag) > Math.abs(decimal.mag)) {\n        a = this;\n        b = decimal;\n      } else {\n        a = decimal;\n        b = this;\n      }\n\n      if (a.layer === 0 && b.layer === 0) {\n        return Decimal.fromNumber(a.sign * b.sign * a.mag * b.mag);\n      } //Special case: If one of the numbers is layer 3 or higher or one of the numbers is 2+ layers bigger than the other, just take the bigger number.\n\n\n      if (a.layer >= 3 || a.layer - b.layer >= 2) {\n        return FC(a.sign * b.sign, a.layer, a.mag);\n      }\n\n      if (a.layer === 1 && b.layer === 0) {\n        return FC(a.sign * b.sign, 1, a.mag + Math.log10(b.mag));\n      }\n\n      if (a.layer === 1 && b.layer === 1) {\n        return FC(a.sign * b.sign, 1, a.mag + b.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 1) {\n        var newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n        return FC(a.sign * b.sign, newmag.layer + 1, newmag.sign * newmag.mag);\n      }\n\n      if (a.layer === 2 && b.layer === 2) {\n        var _newmag = FC(Math.sign(a.mag), a.layer - 1, Math.abs(a.mag)).add(FC(Math.sign(b.mag), b.layer - 1, Math.abs(b.mag)));\n\n        return FC(a.sign * b.sign, _newmag.layer + 1, _newmag.sign * _newmag.mag);\n      }\n\n      throw Error(\"Bad arguments to mul: \" + this + \", \" + value);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value) {\n      return this.mul(value);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value) {\n      var decimal = D(value);\n      return this.mul(decimal.recip());\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"divideBy\",\n    value: function divideBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"dividedBy\",\n    value: function dividedBy(value) {\n      return this.div(value);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip() {\n      if (this.mag === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, 1 / this.mag);\n      } else {\n        return FC(this.sign, this.layer, -this.mag);\n      }\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal() {\n      return this.recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate() {\n      return this.recip();\n    }\n    /**\r\n     * -1 for less than value, 0 for equals value, 1 for greater than value\r\n     */\n\n  }, {\n    key: \"cmp\",\n    value: function cmp(value) {\n      var decimal = D(value);\n\n      if (this.sign > decimal.sign) {\n        return 1;\n      }\n\n      if (this.sign < decimal.sign) {\n        return -1;\n      }\n\n      return this.sign * this.cmpabs(value);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value) {\n      var decimal = D(value);\n      var layera = this.mag > 0 ? this.layer : -this.layer;\n      var layerb = decimal.mag > 0 ? decimal.layer : -decimal.layer;\n\n      if (layera > layerb) {\n        return 1;\n      }\n\n      if (layera < layerb) {\n        return -1;\n      }\n\n      if (this.mag > decimal.mag) {\n        return 1;\n      }\n\n      if (this.mag < decimal.mag) {\n        return -1;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value) {\n      return this.cmp(value);\n    }\n  }, {\n    key: \"isNan\",\n    value: function isNan() {\n      return isNaN(this.sign) || isNaN(this.layer) || isNaN(this.mag);\n    }\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite2) {\n      function isFinite() {\n        return _isFinite2.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite2.toString();\n      };\n\n      return isFinite;\n    }(function () {\n      return isFinite(this.sign) && isFinite(this.layer) && isFinite(this.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value) {\n      var decimal = D(value);\n      return this.sign === decimal.sign && this.layer === decimal.layer && this.mag === decimal.mag;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value) {\n      return this.eq(value);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value) {\n      return !this.eq(value);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value) {\n      return this.neq(value);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value) {\n      return this.cmp(value) === -1;\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value) {\n      return !this.gt(value);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value) {\n      return this.cmp(value) === 1;\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value) {\n      return !this.lt(value);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value) {\n      var decimal = D(value);\n      return this.lt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"min\",\n    value: function min(value) {\n      var decimal = D(value);\n      return this.gt(decimal) ? decimal : this;\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) < 0 ? decimal : this;\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value) {\n      var decimal = D(value);\n      return this.cmpabs(decimal) > 0 ? decimal : this;\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(min, max) {\n      return this.max(min).min(max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(min) {\n      return this.max(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(max) {\n      return this.min(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) ? 0 : this.cmp(decimal);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, tolerance) {\n      return this.cmp_tolerance(value, tolerance);\n    }\n    /**\r\n     * Tolerance is a relative tolerance, multiplied by the greater of the magnitudes of the two arguments.\r\n     * For example, if you put in 1e-9, then any number closer to the\r\n     * larger number than (larger number)*1e-9 will be considered equal.\r\n     */\n\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, tolerance) {\n      var decimal = D(value); // https://stackoverflow.com/a/33024979\n\n      if (tolerance == null) {\n        tolerance = 1e-7;\n      } //Numbers that are too far away are never close.\n\n\n      if (this.sign !== decimal.sign) {\n        return false;\n      }\n\n      if (Math.abs(this.layer - decimal.layer) > 1) {\n        return false;\n      } // return abs(a-b) <= tolerance * max(abs(a), abs(b))\n\n\n      var magA = this.mag;\n      var magB = decimal.mag;\n\n      if (this.layer > decimal.layer) {\n        magB = f_maglog10(magB);\n      }\n\n      if (this.layer < decimal.layer) {\n        magA = f_maglog10(magA);\n      }\n\n      return Math.abs(magA - magB) <= tolerance * Math.max(Math.abs(magA), Math.abs(magB));\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, tolerance) {\n      return this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, tolerance) {\n      return !this.eq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, tolerance) {\n      return this.neq_tolerance(value, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.lt(decimal);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.lt(decimal);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return !this.eq_tolerance(decimal, tolerance) && this.gt(decimal);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, tolerance) {\n      var decimal = D(value);\n      return this.eq_tolerance(decimal, tolerance) || this.gt(decimal);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10() {\n      if (this.lt(Decimal.dZero)) {\n        return Decimal.dZero;\n      }\n\n      return this.log10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10() {\n      if (this.sign === 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(1, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log10\",\n    value: function log10() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer > 0) {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      } else {\n        return FC(this.sign, 0, Math.log10(this.mag));\n      }\n    }\n  }, {\n    key: \"log\",\n    value: function log(base) {\n      base = D(base);\n\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign <= 0) {\n        return Decimal.dNaN;\n      }\n\n      if (base.sign === 1 && base.layer === 0 && base.mag === 1) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0 && base.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag) / Math.log(base.mag));\n      }\n\n      return Decimal.div(this.log10(), base.log10());\n    }\n  }, {\n    key: \"log2\",\n    value: function log2() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log2(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 3.321928094887362); //log2(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.5213902276543247); //-log10(log10(2))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"ln\",\n    value: function ln() {\n      if (this.sign <= 0) {\n        return Decimal.dNaN;\n      } else if (this.layer === 0) {\n        return FC(this.sign, 0, Math.log(this.mag));\n      } else if (this.layer === 1) {\n        return FC(Math.sign(this.mag), 0, Math.abs(this.mag) * 2.302585092994046); //ln(10)\n      } else if (this.layer === 2) {\n        return FC(Math.sign(this.mag), 1, Math.abs(this.mag) + 0.36221568869946325); //log10(log10(e))\n      } else {\n        return FC(Math.sign(this.mag), this.layer - 1, Math.abs(this.mag));\n      }\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(base) {\n      return this.log(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value) {\n      var decimal = D(value);\n      var a = this;\n      var b = decimal; //special case: if a is 0, then return 0 (UNLESS b is 0, then return 1)\n\n      if (a.sign === 0) {\n        return b.eq(0) ? FC_NN(1, 0, 1) : a;\n      } //special case: if a is 1, then return 1\n\n\n      if (a.sign === 1 && a.layer === 0 && a.mag === 1) {\n        return a;\n      } //special case: if b is 0, then return 1\n\n\n      if (b.sign === 0) {\n        return FC_NN(1, 0, 1);\n      } //special case: if b is 1, then return a\n\n\n      if (b.sign === 1 && b.layer === 0 && b.mag === 1) {\n        return a;\n      }\n\n      var result = a.absLog10().mul(b).pow10();\n\n      if (this.sign === -1) {\n        if (Math.abs(b.toNumber() % 2) % 2 === 1) {\n          return result.neg();\n        } else if (Math.abs(b.toNumber() % 2) % 2 === 0) {\n          return result;\n        }\n\n        return Decimal.dNaN;\n      }\n\n      return result;\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10() {\n      /*\r\n      There are four cases we need to consider:\r\n      1) positive sign, positive mag (e15, ee15): +1 layer (e.g. 10^15 becomes e15, 10^e15 becomes ee15)\r\n      2) negative sign, positive mag (-e15, -ee15): +1 layer but sign and mag sign are flipped (e.g. 10^-15 becomes e-15, 10^-e15 becomes ee-15)\r\n      3) positive sign, negative mag (e-15, ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      4) negative sign, negative mag (-e-15, -ee-15): layer 0 case would have been handled in the Math.pow check, so just return 1\r\n      */\n      if (!Number.isFinite(this.layer) || !Number.isFinite(this.mag)) {\n        return Decimal.dNaN;\n      }\n\n      var a = this; //handle layer 0 case - if no precision is lost just use Math.pow, else promote one layer\n\n      if (a.layer === 0) {\n        var newmag = Math.pow(10, a.sign * a.mag);\n\n        if (Number.isFinite(newmag) && Math.abs(newmag) >= 0.1) {\n          return FC(1, 0, newmag);\n        } else {\n          if (a.sign === 0) {\n            return Decimal.dOne;\n          } else {\n            a = FC_NN(a.sign, a.layer + 1, Math.log10(a.mag));\n          }\n        }\n      } //handle all 4 layer 1+ cases individually\n\n\n      if (a.sign > 0 && a.mag >= 0) {\n        return FC(a.sign, a.layer + 1, a.mag);\n      }\n\n      if (a.sign < 0 && a.mag >= 0) {\n        return FC(-a.sign, a.layer + 1, -a.mag);\n      } //both the negative mag cases are identical: one +/- rounding error\n\n\n      return Decimal.dOne;\n    }\n  }, {\n    key: \"pow_base\",\n    value: function pow_base(value) {\n      return D(value).pow(this);\n    }\n  }, {\n    key: \"root\",\n    value: function root(value) {\n      var decimal = D(value);\n      return this.pow(decimal.recip());\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial() {\n      if (this.mag < 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 0) {\n        return this.add(1).gamma();\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    } //from HyperCalc source code\n\n  }, {\n    key: \"gamma\",\n    value: function gamma() {\n      if (this.mag < 0) {\n        return this.recip();\n      } else if (this.layer === 0) {\n        if (this.lt(FC_NN(1, 0, 24))) {\n          return Decimal.fromNumber(f_gamma(this.sign * this.mag));\n        }\n\n        var t = this.mag - 1;\n        var l = 0.9189385332046727; //0.5*Math.log(2*Math.PI)\n\n        l = l + (t + 0.5) * Math.log(t);\n        l = l - t;\n        var n2 = t * t;\n        var np = t;\n        var lm = 12 * np;\n        var adj = 1 / lm;\n        var l2 = l + adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 360 * np;\n        adj = 1 / lm;\n        l2 = l - adj;\n\n        if (l2 === l) {\n          return Decimal.exp(l);\n        }\n\n        l = l2;\n        np = np * n2;\n        lm = 1260 * np;\n        var lt = 1 / lm;\n        l = l + lt;\n        np = np * n2;\n        lm = 1680 * np;\n        lt = 1 / lm;\n        l = l - lt;\n        return Decimal.exp(l);\n      } else if (this.layer === 1) {\n        return Decimal.exp(Decimal.mul(this, Decimal.ln(this).sub(1)));\n      } else {\n        return Decimal.exp(this);\n      }\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma() {\n      return this.gamma().ln();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0 && this.mag <= 709.7) {\n        return Decimal.fromNumber(Math.exp(this.sign * this.mag));\n      } else if (this.layer === 0) {\n        return FC(1, 1, this.sign * Math.log10(Math.E) * this.mag);\n      } else if (this.layer === 1) {\n        return FC(1, 2, this.sign * (Math.log10(0.4342944819032518) + this.mag));\n      } else {\n        return FC(1, this.layer + 1, this.sign * this.mag);\n      }\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr() {\n      return this.pow(2);\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt() {\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sqrt(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return FC(1, 2, Math.log10(this.mag) - 0.3010299956639812);\n      } else {\n        var result = Decimal.div(FC_NN(this.sign, this.layer - 1, this.mag), FC_NN(1, 0, 2));\n        result.layer += 1;\n        result.normalize();\n        return result;\n      }\n    }\n  }, {\n    key: \"cube\",\n    value: function cube() {\n      return this.pow(3);\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt() {\n      return this.pow(1 / 3);\n    } //Tetration/tetrate: The result of exponentiating 'this' to 'this' 'height' times in a row.  https://en.wikipedia.org/wiki/Tetration\n    //If payload != 1, then this is 'iterated exponentiation', the result of exping (payload) to base (this) (height) times. https://andydude.github.io/tetration/archives/tetration2/ident.html\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"tetrate\",\n    value: function tetrate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n\n      //x^^1 == x\n      if (height === 1) {\n        return Decimal.pow(this, payload);\n      } //x^^0 == 1\n\n\n      if (height === 0) {\n        return new Decimal(payload);\n      } //1^^x == 1\n\n\n      if (this.eq(Decimal.dOne)) {\n        return Decimal.dOne;\n      } //-1^^x == -1\n\n\n      if (this.eq(-1)) {\n        return Decimal.pow(this, payload);\n      }\n\n      if (height === Number.POSITIVE_INFINITY) {\n        var this_num = this.toNumber(); //within the convergence range?\n\n        if (this_num <= 1.44466786100976613366 && this_num >= 0.06598803584531253708) {\n          //hotfix for the very edge of the number range not being handled properly\n          if (this_num > 1.444667861009099) {\n            return Decimal.fromNumber(Math.E);\n          } //Formula for infinite height power tower.\n\n\n          var negln = Decimal.ln(this).neg();\n          return negln.lambertw().div(negln);\n        } else if (this_num > 1.44466786100976613366) {\n          //explodes to infinity\n          // TODO: replace this with Decimal.dInf\n          return Decimal.fromNumber(Number.POSITIVE_INFINITY);\n        } else {\n          //0.06598803584531253708 > this_num >= 0: never converges\n          //this_num < 0: quickly becomes a complex number\n          return Decimal.dNaN;\n        }\n      } //0^^x oscillates if we define 0^0 == 1 (which in javascript land we do), since then 0^^1 is 0, 0^^2 is 1, 0^^3 is 0, etc. payload is ignored\n      //using the linear approximation for height (TODO: don't know a better way to calculate it ATM, but it wouldn't surprise me if it's just NaN)\n\n\n      if (this.eq(Decimal.dZero)) {\n        var result = Math.abs((height + 1) % 2);\n\n        if (result > 1) {\n          result = 2 - result;\n        }\n\n        return Decimal.fromNumber(result);\n      }\n\n      if (height < 0) {\n        return Decimal.iteratedlog(payload, this, -height);\n      }\n\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height;\n\n      if (this.gt(Decimal.dZero) && this.lte(1.44466786100976613366)) {\n        //similar to 0^^n, flip-flops between two values, converging slowly (or if it's below 0.06598803584531253708, never. so once again, the fractional part at the end will be a linear approximation (TODO: again pending knowledge of how to approximate better, although tbh I think it should in reality just be NaN)\n        height = Math.min(10000, height);\n\n        for (var i = 0; i < height; ++i) {\n          var old_payload = payload;\n          payload = this.pow(payload); //stop early if we converge\n\n          if (old_payload.eq(payload)) {\n            return payload;\n          }\n        }\n\n        if (fracheight != 0) {\n          var next_payload = this.pow(payload);\n          return payload.mul(1 - fracheight).add(next_payload.mul(fracheight));\n        }\n\n        return payload;\n      } //TODO: base < 0, but it's hard for me to reason about (probably all non-integer heights are NaN automatically?)\n\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n          if (this.gt(10)) {\n            payload = this.pow(fracheight);\n          } else {\n            payload = Decimal.fromNumber(Decimal.tetrate_critical(this.toNumber(), fracheight)); //TODO: until the critical section grid can handle numbers below 2, scale them to the base\n            //TODO: maybe once the critical section grid has very large bases, this math can be appropriate for them too? I'll think about it\n\n            if (this.lt(2)) {\n              payload = payload.sub(1).mul(this.minus(1)).plus(1);\n            }\n          }\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var _i = 0; _i < height; ++_i) {\n        payload = this.pow(payload); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //shortcut\n\n\n        if (payload.layer - this.layer > 3) {\n          return FC_NN(payload.sign, payload.layer + (height - _i - 1), payload.mag);\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (_i > 10000) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } //iteratedexp/iterated exponentiation: - all cases handled in tetrate, so just call it\n\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      return this.tetrate(height, payload);\n    } //iterated log/repeated log: The result of applying log(base) 'times' times in a row. Approximately equal to subtracting (times) from the number's slog representation. Equivalent to tetrating to a negative height.\n    //Works with negative and positive real heights.\n\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n      if (times < 0) {\n        return Decimal.tetrate(base, -times, this);\n      }\n\n      base = D(base);\n      var result = Decimal.fromDecimal(this);\n      var fulltimes = times;\n      times = Math.trunc(times);\n      var fraction = fulltimes - times;\n\n      if (result.layer - base.layer > 3) {\n        var layerloss = Math.min(times, result.layer - base.layer - 3);\n        times -= layerloss;\n        result.layer -= layerloss;\n      }\n\n      for (var i = 0; i < times; ++i) {\n        result = result.log(base); //bail if we're NaN\n\n        if (!isFinite(result.layer) || !isFinite(result.mag)) {\n          return result.normalize();\n        } //give up after 10000 iterations if nothing is happening\n\n\n        if (i > 10000) {\n          return result;\n        }\n      } //handle fractional part\n\n\n      if (fraction > 0 && fraction < 1) {\n        if (base.eq(10)) {\n          result = result.layeradd10(-fraction);\n        } else {\n          result = result.layeradd(-fraction, base);\n        }\n      }\n\n      return result;\n    } //Super-logarithm, one of tetration's inverses, tells you what size power tower you'd have to tetrate base to to get number. By definition, will never be higher than 1.8e308 in break_eternity.js, since a power tower 1.8e308 numbers tall is the largest representable number.\n    // https://en.wikipedia.org/wiki/Super-logarithm\n    // NEW: Accept a number of iterations, and use binary search to, after making an initial guess, hone in on the true value, assuming tetration as the ground truth.\n\n  }, {\n    key: \"slog\",\n    value: function slog() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      var iterations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 43;\n      var step_size = 0.001;\n      var has_changed_directions_once = false;\n      var previously_rose = false;\n      var result = this.slog_internal(base).toNumber();\n\n      for (var i = 1; i < iterations; ++i) {\n        var new_decimal = new Decimal(base).tetrate(result);\n        var currently_rose = new_decimal.gt(this);\n\n        if (iterations > 1) {\n          if (previously_rose != currently_rose) {\n            has_changed_directions_once = true;\n          }\n        }\n\n        previously_rose = currently_rose;\n\n        if (has_changed_directions_once) {\n          step_size /= 2;\n        }\n\n        step_size = Math.abs(step_size) * (currently_rose ? -1 : 1);\n        result += step_size;\n      }\n\n      return Decimal.fromNumber(result);\n    }\n  }, {\n    key: \"slog_internal\",\n    value: function slog_internal() {\n      var base = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      base = D(base); //special cases:\n      //slog base 0 or lower is NaN\n\n      if (base.lte(Decimal.dZero)) {\n        return Decimal.dNaN;\n      } //slog base 1 is NaN\n\n\n      if (base.eq(Decimal.dOne)) {\n        return Decimal.dNaN;\n      } //need to handle these small, wobbling bases specially\n\n\n      if (base.lt(Decimal.dOne)) {\n        if (this.eq(Decimal.dOne)) {\n          return Decimal.dZero;\n        }\n\n        if (this.eq(Decimal.dZero)) {\n          return Decimal.dNegOne;\n        } //0 < this < 1: ambiguous (happens multiple times)\n        //this < 0: impossible (as far as I can tell)\n        //this > 1: partially complex (http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html base 0.25 for proof)\n\n\n        return Decimal.dNaN;\n      } //slog_n(0) is -1\n\n\n      if (this.mag < 0 || this.eq(Decimal.dZero)) {\n        return Decimal.dNegOne;\n      }\n\n      var result = 0;\n      var copy = Decimal.fromDecimal(this);\n\n      if (copy.layer - base.layer > 3) {\n        var layerloss = copy.layer - base.layer - 3;\n        result += layerloss;\n        copy.layer -= layerloss;\n      }\n\n      for (var i = 0; i < 100; ++i) {\n        if (copy.lt(Decimal.dZero)) {\n          copy = Decimal.pow(base, copy);\n          result -= 1;\n        } else if (copy.lte(Decimal.dOne)) {\n          return Decimal.fromNumber(result + Decimal.slog_critical(base.toNumber(), copy.toNumber()));\n        } else {\n          result += 1;\n          copy = Decimal.log(copy, base);\n        }\n      }\n\n      return Decimal.fromNumber(result);\n    } //background info and tables of values for critical functions taken here: https://github.com/Patashu/break_eternity.js/issues/22\n\n  }, {\n    key: \"layeradd10\",\n    value: //Function for adding/removing layers from a Decimal, even fractional layers (e.g. its slog10 representation).\n    //Moved this over to use the same critical section as tetrate/slog.\n    function layeradd10(diff) {\n      diff = Decimal.fromValue_noAlloc(diff).toNumber();\n      var result = Decimal.fromDecimal(this);\n\n      if (diff >= 1) {\n        //bug fix: if result is very smol (mag < 0, layer > 0) turn it into 0 first\n        if (result.mag < 0 && result.layer > 0) {\n          result.sign = 0;\n          result.mag = 0;\n          result.layer = 0;\n        } else if (result.sign === -1 && result.layer == 0) {\n          //bug fix - for stuff like -3.layeradd10(1) we need to move the sign to the mag\n          result.sign = 1;\n          result.mag = -result.mag;\n        }\n\n        var layeradd = Math.trunc(diff);\n        diff -= layeradd;\n        result.layer += layeradd;\n      }\n\n      if (diff <= -1) {\n        var _layeradd = Math.trunc(diff);\n\n        diff -= _layeradd;\n        result.layer += _layeradd;\n\n        if (result.layer < 0) {\n          for (var i = 0; i < 100; ++i) {\n            result.layer++;\n            result.mag = Math.log10(result.mag);\n\n            if (!isFinite(result.mag)) {\n              //another bugfix: if we hit -Infinity mag, then we should return negative infinity, not 0. 0.layeradd10(-1) h its this\n              if (result.sign === 0) {\n                result.sign = 1;\n              } //also this, for 0.layeradd10(-2)\n\n\n              if (result.layer < 0) {\n                result.layer = 0;\n              }\n\n              return result.normalize();\n            }\n\n            if (result.layer >= 0) {\n              break;\n            }\n          }\n        }\n      }\n\n      while (result.layer < 0) {\n        result.layer++;\n        result.mag = Math.log10(result.mag);\n      } //bugfix: before we normalize: if we started with 0, we now need to manually fix a layer ourselves!\n\n\n      if (result.sign === 0) {\n        result.sign = 1;\n\n        if (result.mag === 0 && result.layer >= 1) {\n          result.layer -= 1;\n          result.mag = 1;\n        }\n      }\n\n      result.normalize(); //layeradd10: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 10 and iterated log base 10. Also equivalent to adding a fractional amount to the number's layer in its break_eternity.js representation.\n\n      if (diff !== 0) {\n        return result.layeradd(diff, 10); //safe, only calls positive height 1 payload tetration, slog and log\n      }\n\n      return result;\n    } //layeradd: like adding 'diff' to the number's slog(base) representation. Very similar to tetrate base 'base' and iterated log base 'base'.\n\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(diff, base) {\n      var slogthis = this.slog(base).toNumber();\n      var slogdest = slogthis + diff;\n\n      if (slogdest >= 0) {\n        return Decimal.tetrate(base, slogdest);\n      } else if (!Number.isFinite(slogdest)) {\n        return Decimal.dNaN;\n      } else if (slogdest >= -1) {\n        return Decimal.log(Decimal.tetrate(base, slogdest + 1), base);\n      } else {\n        return Decimal.log(Decimal.log(Decimal.tetrate(base, slogdest + 2), base), base);\n      }\n    } //The Lambert W function, also called the omega function or product logarithm, is the solution W(x) === x*e^x.\n    // https://en.wikipedia.org/wiki/Lambert_W_function\n    //Some special values, for testing: https://en.wikipedia.org/wiki/Lambert_W_function#Special_values\n\n  }, {\n    key: \"lambertw\",\n    value: function lambertw() {\n      if (this.lt(-0.3678794411710499)) {\n        throw Error(\"lambertw is unimplemented for results less than -1, sorry!\");\n      } else if (this.mag < 0) {\n        return Decimal.fromNumber(f_lambertw(this.toNumber()));\n      } else if (this.layer === 0) {\n        return Decimal.fromNumber(f_lambertw(this.sign * this.mag));\n      } else if (this.layer === 1) {\n        return d_lambertw(this);\n      } else if (this.layer === 2) {\n        return d_lambertw(this);\n      }\n\n      if (this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      throw \"Unhandled behavior in lambertw()\";\n    } //The super square-root function - what number, tetrated to height 2, equals this?\n    //Other sroots are possible to calculate probably through guess and check methods, this one is easy though.\n    // https://en.wikipedia.org/wiki/Tetration#Super-root\n\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt() {\n      if (this.sign == 1 && this.layer >= 3) {\n        return FC_NN(this.sign, this.layer - 1, this.mag);\n      }\n\n      var lnx = this.ln();\n      return lnx.div(lnx.lambertw());\n    }\n    /*\r\n      Unit tests for tetrate/iteratedexp/iteratedlog/layeradd10/layeradd/slog:\r\n    (note: these won't be exactly precise with the new slog implementation, but that's okay)\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(10).layeradd10(first).layeradd10(-both).slog();\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    var expected = first+both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.random()*100;\r\n    var both = Math.random()*100;\r\n    var base = Math.random()*8+2;\r\n    first += both;\r\n    var expected = first-both+1;\r\n    var result = new Decimal(base).layeradd(first, base).layeradd(-both, base).slog(base);\r\n    if (Number.isFinite(result.mag) && !Decimal.eq_tolerance(expected, result))\r\n    {\r\n        console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var tetrateonly = Decimal.tetrate(10, first);\r\n    var tetrateandlog = Decimal.tetrate(10, first+both).iteratedlog(10, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var first = Math.round((Math.random()*30))/10;\r\n    var both = Math.round((Math.random()*30))/10;\r\n    var base = Math.random()*8+2;\r\n    var tetrateonly = Decimal.tetrate(base, first, base);\r\n    var tetrateandlog = Decimal.tetrate(base, first+both, base).iteratedlog(base, both);\r\n    if (!Decimal.eq_tolerance(tetrateonly, tetrateandlog))\r\n    {\r\n    console.log(first + \", \" + both);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.random()*100);\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var xex = new Decimal(-0.3678794411710499+Math.exp(Math.random()*100));\r\n    var x = Decimal.lambertw(xex);\r\n    if (!Decimal.eq_tolerance(xex, x.mul(Decimal.exp(x))))\r\n    {\r\n        console.log(xex);\r\n    }\r\n    }\r\n      for (var i = 0; i < 1000; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    var b = Decimal.randomDecimalForTesting(Math.random() > 0.5 ? 0 : 1);\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.add(b).toNumber();\r\n    if (Number.isFinite(c) && !Decimal.eq_tolerance(c, a.toNumber()+b.toNumber()))\r\n    {\r\n        console.log(a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 100; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5) { a = a.recip(); }\r\n    if (Math.random() > 0.5) { b = b.recip(); }\r\n    var c = a.mul(b).toNumber();\r\n    if (Number.isFinite(c) && Number.isFinite(a.toNumber()) && Number.isFinite(b.toNumber()) && a.toNumber() != 0 && b.toNumber() != 0 && c != 0 && !Decimal.eq_tolerance(c, a.toNumber()*b.toNumber()))\r\n    {\r\n        console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    else if (!Decimal.mul(a.recip(), b.recip()).eq_tolerance(Decimal.mul(a, b).recip()))\r\n    {\r\n        console.log(\"Test 3: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    var b = Decimal.randomDecimalForTesting(Math.round(Math.random()*4));\r\n    if (Math.random() > 0.5 && a.sign !== 0) { a = a.recip(); }\r\n    if (Math.random() > 0.5 && b.sign !== 0) { b = b.recip(); }\r\n    var c = a.pow(b);\r\n    var d = a.root(b.recip());\r\n    var e = a.pow(b.recip());\r\n    var f = a.root(b);\r\n        if (!c.eq_tolerance(d) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 1: \" + a + \", \" + b);\r\n    }\r\n    if (!e.eq_tolerance(f) && a.sign !== 0 && b.sign !== 0)\r\n    {\r\n      console.log(\"Test 2: \" + a + \", \" + b);\r\n    }\r\n    }\r\n      for (var i = 0; i < 10; ++i)\r\n    {\r\n    var a = Math.round(Math.random()*18-9);\r\n    var b = Math.round(Math.random()*100-50);\r\n    var c = Math.round(Math.random()*18-9);\r\n    var d = Math.round(Math.random()*100-50);\r\n    console.log(\"Decimal.pow(Decimal.fromMantissaExponent(\" + a + \", \" + b + \"), Decimal.fromMantissaExponent(\" + c + \", \" + d + \")).toString()\");\r\n    }\r\n      */\n    //Pentation/pentate: The result of tetrating 'height' times in a row. An absurdly strong operator - Decimal.pentate(2, 4.28) and Decimal.pentate(10, 2.37) are already too huge for break_eternity.js!\n    // https://en.wikipedia.org/wiki/Pentation\n\n  }, {\n    key: \"pentate\",\n    value: function pentate() {\n      var height = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FC_NN(1, 0, 1);\n      payload = D(payload);\n      var oldheight = height;\n      height = Math.trunc(height);\n      var fracheight = oldheight - height; //I have no idea if this is a meaningful approximation for pentation to continuous heights, but it is monotonic and continuous.\n\n      if (fracheight !== 0) {\n        if (payload.eq(Decimal.dOne)) {\n          ++height;\n          payload = Decimal.fromNumber(fracheight);\n        } else {\n          if (this.eq(10)) {\n            payload = payload.layeradd10(fracheight);\n          } else {\n            payload = payload.layeradd(fracheight, this);\n          }\n        }\n      }\n\n      for (var i = 0; i < height; ++i) {\n        payload = this.tetrate(payload.toNumber()); //bail if we're NaN\n\n        if (!isFinite(payload.layer) || !isFinite(payload.mag)) {\n          return payload.normalize();\n        } //give up after 10 iterations if nothing is happening\n\n\n        if (i > 10) {\n          return payload;\n        }\n      }\n\n      return payload;\n    } // trig functions!\n\n  }, {\n    key: \"sin\",\n    value: function sin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.sin(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"cos\",\n    value: function cos() {\n      if (this.mag < 0) {\n        return Decimal.dOne;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.cos(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"tan\",\n    value: function tan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.tan(this.sign * this.mag));\n      }\n\n      return FC_NN(0, 0, 0);\n    }\n  }, {\n    key: \"asin\",\n    value: function asin() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.asin(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"acos\",\n    value: function acos() {\n      if (this.mag < 0) {\n        return Decimal.fromNumber(Math.acos(this.toNumber()));\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.acos(this.sign * this.mag));\n      }\n\n      return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n    }\n  }, {\n    key: \"atan\",\n    value: function atan() {\n      if (this.mag < 0) {\n        return this;\n      }\n\n      if (this.layer === 0) {\n        return Decimal.fromNumber(Math.atan(this.sign * this.mag));\n      }\n\n      return Decimal.fromNumber(Math.atan(this.sign * 1.8e308));\n    }\n  }, {\n    key: \"sinh\",\n    value: function sinh() {\n      return this.exp().sub(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"cosh\",\n    value: function cosh() {\n      return this.exp().add(this.negate().exp()).div(2);\n    }\n  }, {\n    key: \"tanh\",\n    value: function tanh() {\n      return this.sinh().div(this.cosh());\n    }\n  }, {\n    key: \"asinh\",\n    value: function asinh() {\n      return Decimal.ln(this.add(this.sqr().add(1).sqrt()));\n    }\n  }, {\n    key: \"acosh\",\n    value: function acosh() {\n      return Decimal.ln(this.add(this.sqr().sub(1).sqrt()));\n    }\n  }, {\n    key: \"atanh\",\n    value: function atanh() {\n      if (this.abs().gte(1)) {\n        return FC_NN(Number.NaN, Number.NaN, Number.NaN);\n      }\n\n      return Decimal.ln(this.add(1).div(Decimal.fromNumber(1).sub(this))).div(2);\n    }\n    /**\r\n     * Joke function from Realm Grinder\r\n     */\n\n  }, {\n    key: \"ascensionPenalty\",\n    value: function ascensionPenalty(ascensions) {\n      if (ascensions === 0) {\n        return this;\n      }\n\n      return this.root(Decimal.pow(10, ascensions));\n    }\n    /**\r\n     * Joke function from Cookie Clicker. It's 'egg'\r\n     */\n\n  }, {\n    key: \"egg\",\n    value: function egg() {\n      return this.add(9);\n    }\n  }, {\n    key: \"lessThanOrEqualTo\",\n    value: function lessThanOrEqualTo(other) {\n      return this.cmp(other) < 1;\n    }\n  }, {\n    key: \"lessThan\",\n    value: function lessThan(other) {\n      return this.cmp(other) < 0;\n    }\n  }, {\n    key: \"greaterThanOrEqualTo\",\n    value: function greaterThanOrEqualTo(other) {\n      return this.cmp(other) > -1;\n    }\n  }, {\n    key: \"greaterThan\",\n    value: function greaterThan(other) {\n      return this.cmp(other) > 0;\n    }\n  }], [{\n    key: \"fromComponents\",\n    value: function fromComponents(sign, layer, mag) {\n      return new Decimal().fromComponents(sign, layer, mag);\n    }\n  }, {\n    key: \"fromComponents_noNormalize\",\n    value: function fromComponents_noNormalize(sign, layer, mag) {\n      return new Decimal().fromComponents_noNormalize(sign, layer, mag);\n    }\n  }, {\n    key: \"fromMantissaExponent\",\n    value: function fromMantissaExponent(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent(mantissa, exponent);\n    }\n  }, {\n    key: \"fromMantissaExponent_noNormalize\",\n    value: function fromMantissaExponent_noNormalize(mantissa, exponent) {\n      return new Decimal().fromMantissaExponent_noNormalize(mantissa, exponent);\n    }\n  }, {\n    key: \"fromDecimal\",\n    value: function fromDecimal(value) {\n      return new Decimal().fromDecimal(value);\n    }\n  }, {\n    key: \"fromNumber\",\n    value: function fromNumber(value) {\n      return new Decimal().fromNumber(value);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(value) {\n      return new Decimal().fromString(value);\n    }\n  }, {\n    key: \"fromValue\",\n    value: function fromValue(value) {\n      return new Decimal().fromValue(value);\n    }\n    /**\r\n     * Converts a DecimalSource to a Decimal, without constructing a new Decimal\r\n     * if the provided value is already a Decimal.\r\n     *\r\n     * As the return value could be the provided value itself, this function\r\n     * returns a read-only Decimal to prevent accidental mutations of the value.\r\n     * Use `new Decimal(value)` to explicitly create a writeable copy if mutation\r\n     * is required.\r\n     */\n\n  }, {\n    key: \"fromValue_noAlloc\",\n    value: function fromValue_noAlloc(value) {\n      if (value instanceof Decimal) {\n        return value;\n      } else if (typeof value === \"string\") {\n        var cached = Decimal.fromStringCache.get(value);\n\n        if (cached !== undefined) {\n          return cached;\n        }\n\n        return Decimal.fromString(value);\n      } else if (typeof value === \"number\") {\n        return Decimal.fromNumber(value);\n      } else {\n        // This should never happen... but some users like Prestige Tree Rewritten\n        // pass undefined values in as DecimalSources, so we should handle this\n        // case to not break them.\n        return Decimal.dZero;\n      }\n    }\n  }, {\n    key: \"abs\",\n    value: function abs(value) {\n      return D(value).abs();\n    }\n  }, {\n    key: \"neg\",\n    value: function neg(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negate\",\n    value: function negate(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"negated\",\n    value: function negated(value) {\n      return D(value).neg();\n    }\n  }, {\n    key: \"sign\",\n    value: function sign(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"sgn\",\n    value: function sgn(value) {\n      return D(value).sign;\n    }\n  }, {\n    key: \"round\",\n    value: function round(value) {\n      return D(value).round();\n    }\n  }, {\n    key: \"floor\",\n    value: function floor(value) {\n      return D(value).floor();\n    }\n  }, {\n    key: \"ceil\",\n    value: function ceil(value) {\n      return D(value).ceil();\n    }\n  }, {\n    key: \"trunc\",\n    value: function trunc(value) {\n      return D(value).trunc();\n    }\n  }, {\n    key: \"add\",\n    value: function add(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"plus\",\n    value: function plus(value, other) {\n      return D(value).add(other);\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"subtract\",\n    value: function subtract(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"minus\",\n    value: function minus(value, other) {\n      return D(value).sub(other);\n    }\n  }, {\n    key: \"mul\",\n    value: function mul(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"times\",\n    value: function times(value, other) {\n      return D(value).mul(other);\n    }\n  }, {\n    key: \"div\",\n    value: function div(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"divide\",\n    value: function divide(value, other) {\n      return D(value).div(other);\n    }\n  }, {\n    key: \"recip\",\n    value: function recip(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocal\",\n    value: function reciprocal(value) {\n      return D(value).recip();\n    }\n  }, {\n    key: \"reciprocate\",\n    value: function reciprocate(value) {\n      return D(value).reciprocate();\n    }\n  }, {\n    key: \"cmp\",\n    value: function cmp(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"cmpabs\",\n    value: function cmpabs(value, other) {\n      return D(value).cmpabs(other);\n    }\n  }, {\n    key: \"compare\",\n    value: function compare(value, other) {\n      return D(value).cmp(other);\n    }\n  }, {\n    key: \"isNaN\",\n    value: function (_isNaN) {\n      function isNaN(_x) {\n        return _isNaN.apply(this, arguments);\n      }\n\n      isNaN.toString = function () {\n        return _isNaN.toString();\n      };\n\n      return isNaN;\n    }(function (value) {\n      value = D(value);\n      return isNaN(value.sign) || isNaN(value.layer) || isNaN(value.mag);\n    })\n  }, {\n    key: \"isFinite\",\n    value: function (_isFinite) {\n      function isFinite(_x2) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      value = D(value);\n      return isFinite(value.sign) && isFinite(value.layer) && isFinite(value.mag);\n    })\n  }, {\n    key: \"eq\",\n    value: function eq(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(value, other) {\n      return D(value).eq(other);\n    }\n  }, {\n    key: \"neq\",\n    value: function neq(value, other) {\n      return D(value).neq(other);\n    }\n  }, {\n    key: \"notEquals\",\n    value: function notEquals(value, other) {\n      return D(value).notEquals(other);\n    }\n  }, {\n    key: \"lt\",\n    value: function lt(value, other) {\n      return D(value).lt(other);\n    }\n  }, {\n    key: \"lte\",\n    value: function lte(value, other) {\n      return D(value).lte(other);\n    }\n  }, {\n    key: \"gt\",\n    value: function gt(value, other) {\n      return D(value).gt(other);\n    }\n  }, {\n    key: \"gte\",\n    value: function gte(value, other) {\n      return D(value).gte(other);\n    }\n  }, {\n    key: \"max\",\n    value: function max(value, other) {\n      return D(value).max(other);\n    }\n  }, {\n    key: \"min\",\n    value: function min(value, other) {\n      return D(value).min(other);\n    }\n  }, {\n    key: \"minabs\",\n    value: function minabs(value, other) {\n      return D(value).minabs(other);\n    }\n  }, {\n    key: \"maxabs\",\n    value: function maxabs(value, other) {\n      return D(value).maxabs(other);\n    }\n  }, {\n    key: \"clamp\",\n    value: function clamp(value, min, max) {\n      return D(value).clamp(min, max);\n    }\n  }, {\n    key: \"clampMin\",\n    value: function clampMin(value, min) {\n      return D(value).clampMin(min);\n    }\n  }, {\n    key: \"clampMax\",\n    value: function clampMax(value, max) {\n      return D(value).clampMax(max);\n    }\n  }, {\n    key: \"cmp_tolerance\",\n    value: function cmp_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"compare_tolerance\",\n    value: function compare_tolerance(value, other, tolerance) {\n      return D(value).cmp_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"eq_tolerance\",\n    value: function eq_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"equals_tolerance\",\n    value: function equals_tolerance(value, other, tolerance) {\n      return D(value).eq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"neq_tolerance\",\n    value: function neq_tolerance(value, other, tolerance) {\n      return D(value).neq_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"notEquals_tolerance\",\n    value: function notEquals_tolerance(value, other, tolerance) {\n      return D(value).notEquals_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lt_tolerance\",\n    value: function lt_tolerance(value, other, tolerance) {\n      return D(value).lt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"lte_tolerance\",\n    value: function lte_tolerance(value, other, tolerance) {\n      return D(value).lte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gt_tolerance\",\n    value: function gt_tolerance(value, other, tolerance) {\n      return D(value).gt_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"gte_tolerance\",\n    value: function gte_tolerance(value, other, tolerance) {\n      return D(value).gte_tolerance(other, tolerance);\n    }\n  }, {\n    key: \"pLog10\",\n    value: function pLog10(value) {\n      return D(value).pLog10();\n    }\n  }, {\n    key: \"absLog10\",\n    value: function absLog10(value) {\n      return D(value).absLog10();\n    }\n  }, {\n    key: \"log10\",\n    value: function log10(value) {\n      return D(value).log10();\n    }\n  }, {\n    key: \"log\",\n    value: function log(value, base) {\n      return D(value).log(base);\n    }\n  }, {\n    key: \"log2\",\n    value: function log2(value) {\n      return D(value).log2();\n    }\n  }, {\n    key: \"ln\",\n    value: function ln(value) {\n      return D(value).ln();\n    }\n  }, {\n    key: \"logarithm\",\n    value: function logarithm(value, base) {\n      return D(value).logarithm(base);\n    }\n  }, {\n    key: \"pow\",\n    value: function pow(value, other) {\n      return D(value).pow(other);\n    }\n  }, {\n    key: \"pow10\",\n    value: function pow10(value) {\n      return D(value).pow10();\n    }\n  }, {\n    key: \"root\",\n    value: function root(value, other) {\n      return D(value).root(other);\n    }\n  }, {\n    key: \"factorial\",\n    value: function factorial(value, _other) {\n      return D(value).factorial();\n    }\n  }, {\n    key: \"gamma\",\n    value: function gamma(value, _other) {\n      return D(value).gamma();\n    }\n  }, {\n    key: \"lngamma\",\n    value: function lngamma(value, _other) {\n      return D(value).lngamma();\n    }\n  }, {\n    key: \"exp\",\n    value: function exp(value) {\n      return D(value).exp();\n    }\n  }, {\n    key: \"sqr\",\n    value: function sqr(value) {\n      return D(value).sqr();\n    }\n  }, {\n    key: \"sqrt\",\n    value: function sqrt(value) {\n      return D(value).sqrt();\n    }\n  }, {\n    key: \"cube\",\n    value: function cube(value) {\n      return D(value).cube();\n    }\n  }, {\n    key: \"cbrt\",\n    value: function cbrt(value) {\n      return D(value).cbrt();\n    }\n  }, {\n    key: \"tetrate\",\n    value: function tetrate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).tetrate(height, payload);\n    }\n  }, {\n    key: \"iteratedexp\",\n    value: function iteratedexp(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).iteratedexp(height, payload);\n    }\n  }, {\n    key: \"iteratedlog\",\n    value: function iteratedlog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      var times = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      return D(value).iteratedlog(base, times);\n    }\n  }, {\n    key: \"layeradd10\",\n    value: function layeradd10(value, diff) {\n      return D(value).layeradd10(diff);\n    }\n  }, {\n    key: \"layeradd\",\n    value: function layeradd(value, diff) {\n      var base = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      return D(value).layeradd(diff, base);\n    }\n  }, {\n    key: \"slog\",\n    value: function slog(value) {\n      var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n      return D(value).slog(base);\n    }\n  }, {\n    key: \"lambertw\",\n    value: function lambertw(value) {\n      return D(value).lambertw();\n    }\n  }, {\n    key: \"ssqrt\",\n    value: function ssqrt(value) {\n      return D(value).ssqrt();\n    }\n  }, {\n    key: \"pentate\",\n    value: function pentate(value) {\n      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var payload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : FC_NN(1, 0, 1);\n      return D(value).pentate(height, payload);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something\r\n     * with exponentially increasing cost each purchase (start at priceStart,\r\n     * multiply by priceRatio, already own currentOwned), how much of it can you buy?\r\n     * Adapted from Trimps source code.\r\n     */\n\n  }, {\n    key: \"affordGeometricSeries\",\n    value: function affordGeometricSeries(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      return this.affordGeometricSeries_core(D(resourcesAvailable), D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it multiplies by priceRatio each purchase?\r\n     */\n\n  }, {\n    key: \"sumGeometricSeries\",\n    value: function sumGeometricSeries(numItems, priceStart, priceRatio, currentOwned) {\n      return this.sumGeometricSeries_core(numItems, D(priceStart), D(priceRatio), currentOwned);\n    }\n    /**\r\n     * If you're willing to spend 'resourcesAvailable' and want to buy something with additively\r\n     * increasing cost each purchase (start at priceStart, add by priceAdd, already own currentOwned),\r\n     * how much of it can you buy?\r\n     */\n\n  }, {\n    key: \"affordArithmeticSeries\",\n    value: function affordArithmeticSeries(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      return this.affordArithmeticSeries_core(D(resourcesAvailable), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * How much resource would it cost to buy (numItems) items if you already have currentOwned,\r\n     * the initial price is priceStart and it adds priceAdd each purchase?\r\n     * Adapted from http://www.mathwords.com/a/arithmetic_series.htm\r\n     */\n\n  }, {\n    key: \"sumArithmeticSeries\",\n    value: function sumArithmeticSeries(numItems, priceStart, priceAdd, currentOwned) {\n      return this.sumArithmeticSeries_core(D(numItems), D(priceStart), D(priceAdd), D(currentOwned));\n    }\n    /**\r\n     * When comparing two purchases that cost (resource) and increase your resource/sec by (deltaRpS),\r\n     * the lowest efficiency score is the better one to purchase.\r\n     * From Frozen Cookies:\r\n     * http://cookieclicker.wikia.com/wiki/Frozen_Cookies_(JavaScript_Add-on)#Efficiency.3F_What.27s_that.3F\r\n     */\n\n  }, {\n    key: \"efficiencyOfPurchase\",\n    value: function efficiencyOfPurchase(cost, currentRpS, deltaRpS) {\n      return this.efficiencyOfPurchase_core(D(cost), D(currentRpS), D(deltaRpS));\n    }\n  }, {\n    key: \"randomDecimalForTesting\",\n    value: function randomDecimalForTesting(maxLayers) {\n      // NOTE: This doesn't follow any kind of sane random distribution, so use this for testing purposes only.\n      //5% of the time, return 0\n      if (Math.random() * 20 < 1) {\n        return FC_NN(0, 0, 0);\n      }\n\n      var randomsign = Math.random() > 0.5 ? 1 : -1; //5% of the time, return 1 or -1\n\n      if (Math.random() * 20 < 1) {\n        return FC_NN(randomsign, 0, 1);\n      } //pick a random layer\n\n\n      var layer = Math.floor(Math.random() * (maxLayers + 1));\n      var randomexp = layer === 0 ? Math.random() * 616 - 308 : Math.random() * 16; //10% of the time, make it a simple power of 10\n\n      if (Math.random() > 0.9) {\n        randomexp = Math.trunc(randomexp);\n      }\n\n      var randommag = Math.pow(10, randomexp); //10% of the time, trunc mag\n\n      if (Math.random() > 0.9) {\n        randommag = Math.trunc(randommag);\n      }\n\n      return FC(randomsign, layer, randommag);\n    }\n  }, {\n    key: \"affordGeometricSeries_core\",\n    value: function affordGeometricSeries_core(resourcesAvailable, priceStart, priceRatio, currentOwned) {\n      var actualStart = priceStart.mul(priceRatio.pow(currentOwned));\n      return Decimal.floor(resourcesAvailable.div(actualStart).mul(priceRatio.sub(1)).add(1).log10().div(priceRatio.log10()));\n    }\n  }, {\n    key: \"sumGeometricSeries_core\",\n    value: function sumGeometricSeries_core(numItems, priceStart, priceRatio, currentOwned) {\n      return priceStart.mul(priceRatio.pow(currentOwned)).mul(Decimal.sub(1, priceRatio.pow(numItems))).div(Decimal.sub(1, priceRatio));\n    }\n  }, {\n    key: \"affordArithmeticSeries_core\",\n    value: function affordArithmeticSeries_core(resourcesAvailable, priceStart, priceAdd, currentOwned) {\n      // n = (-(a-d/2) + sqrt((a-d/2)^2+2dS))/d\n      // where a is actualStart, d is priceAdd and S is resourcesAvailable\n      // then floor it and you're done!\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd));\n      var b = actualStart.sub(priceAdd.div(2));\n      var b2 = b.pow(2);\n      return b.neg().add(b2.add(priceAdd.mul(resourcesAvailable).mul(2)).sqrt()).div(priceAdd).floor();\n    }\n  }, {\n    key: \"sumArithmeticSeries_core\",\n    value: function sumArithmeticSeries_core(numItems, priceStart, priceAdd, currentOwned) {\n      var actualStart = priceStart.add(currentOwned.mul(priceAdd)); // (n/2)*(2*a+(n-1)*d)\n\n      return numItems.div(2).mul(actualStart.mul(2).plus(numItems.sub(1).mul(priceAdd)));\n    }\n  }, {\n    key: \"efficiencyOfPurchase_core\",\n    value: function efficiencyOfPurchase_core(cost, currentRpS, deltaRpS) {\n      return cost.div(currentRpS).add(cost.div(deltaRpS));\n    }\n  }, {\n    key: \"slog_critical\",\n    value: function slog_critical(base, height) {\n      //TODO: for bases above 10, revert to old linear approximation until I can think of something better\n      if (base > 10) {\n        return height - 1;\n      }\n\n      return Decimal.critical_section(base, height, critical_slog_values);\n    }\n  }, {\n    key: \"tetrate_critical\",\n    value: function tetrate_critical(base, height) {\n      return Decimal.critical_section(base, height, critical_tetr_values);\n    }\n  }, {\n    key: \"critical_section\",\n    value: function critical_section(base, height, grid) {\n      //this part is simple at least, since it's just 0.1 to 0.9\n      height *= 10;\n\n      if (height < 0) {\n        height = 0;\n      }\n\n      if (height > 10) {\n        height = 10;\n      } //have to do this complicated song and dance since one of the critical_headers is Math.E, and in the future I'd like 1.5 as well\n\n\n      if (base < 2) {\n        base = 2;\n      }\n\n      if (base > 10) {\n        base = 10;\n      }\n\n      var lower = 0;\n      var upper = 0; //basically, if we're between bases, we interpolate each bases' relevant values together\n      //then we interpolate based on what the fractional height is.\n      //accuracy could be improved by doing a non-linear interpolation (maybe), by adding more bases and heights (definitely) but this is AFAIK the best you can get without running some pari.gp or mathematica program to calculate exact values\n      //however, do note http://myweb.astate.edu/wpaulsen/tetcalc/tetcalc.html can do it for arbitrary heights but not for arbitrary bases (2, e, 10 present)\n\n      for (var i = 0; i < critical_headers.length; ++i) {\n        if (critical_headers[i] == base) {\n          // exact match\n          lower = grid[i][Math.floor(height)];\n          upper = grid[i][Math.ceil(height)];\n          break;\n        } else if (critical_headers[i] < base && critical_headers[i + 1] > base) {\n          // interpolate between this and the next\n          var basefrac = (base - critical_headers[i]) / (critical_headers[i + 1] - critical_headers[i]);\n          lower = grid[i][Math.floor(height)] * (1 - basefrac) + grid[i + 1][Math.floor(height)] * basefrac;\n          upper = grid[i][Math.ceil(height)] * (1 - basefrac) + grid[i + 1][Math.ceil(height)] * basefrac;\n          break;\n        }\n      }\n\n      var frac = height - Math.floor(height); //improvement - you get more accuracy (especially around 0.9-1.0) by doing log, then frac, then powing the result\n      //(we could pre-log the lookup table, but then fractional bases would get Weird)\n\n      var result = Math.pow(base, Math.log(lower) / Math.log(base) * (1 - frac) + Math.log(upper) / Math.log(base) * frac);\n      return result;\n    }\n  }]);\n\n  return Decimal;\n}();\nDecimal.dZero = FC_NN(0, 0, 0);\nDecimal.dOne = FC_NN(1, 0, 1);\nDecimal.dNegOne = FC_NN(-1, 0, 1);\nDecimal.dTwo = FC_NN(1, 0, 2);\nDecimal.dTen = FC_NN(1, 0, 10);\nDecimal.dNaN = FC_NN(Number.NaN, Number.NaN, Number.NaN);\nDecimal.dInf = FC_NN(1, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY);\nDecimal.dNegInf = FC_NN(-1, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY);\nDecimal.dNumberMax = FC(1, 0, Number.MAX_VALUE);\nDecimal.dNumberMin = FC(1, 0, Number.MIN_VALUE);\nDecimal.fromStringCache = new LRUCache(DEFAULT_FROM_STRING_CACHE_SIZE); // return Decimal;\n// Optimise Decimal aliases.\n// We can't do this optimisation before Decimal is assigned.\n\nD = Decimal.fromValue_noAlloc;\nFC = Decimal.fromComponents;\nFC_NN = Decimal.fromComponents_noNormalize; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nDecimal.fromMantissaExponent_noNormalize;\n\nexport { Decimal as default };\n","import {\n    getUpgradeTimesBought,\n    isUpgradeName,\n    player,\n    playerSettings\n} from \"./player\";\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n    interface Window {\n        changeCheatMode?: VoidFunction;\n        cheat?: VoidFunction;\n        clearls: VoidFunction;\n    }\n}\n\nfunction decimalPlaces(\n    value: number,\n    places: number,\n    trunc = (x: number) => x\n): number {\n    const length = places + 1;\n    const digitsCount = Math.ceil(Math.log10(Math.abs(value)));\n    const rounded =\n        Math.round(value * 10 ** (length - digitsCount)) *\n        10 ** (digitsCount - length);\n    return trunc(Number(rounded.toFixed(Math.max(length - digitsCount, 0))));\n}\n\nexport function formatDecimal(d: Decimal, places = 3, ePlaces = 99): string {\n    if (d.layer === 0) {\n        if ((d.mag < 1e4 && d.mag > 1e-7) || d.mag === 0) {\n            return (d.sign * d.mag).toFixed(places);\n        }\n        return `${decimalPlaces(d.m, places)}e${decimalPlaces(\n            d.e,\n            ePlaces,\n            Math.round\n        )}`;\n    } else if (d.layer === 1) {\n        return `${decimalPlaces(d.m, places)}e${decimalPlaces(\n            d.e,\n            ePlaces,\n            Math.round\n        )}`;\n    } else {\n        if (d.layer <= 5) {\n            return `${d.sign === -1 ? \"-\" : \"\"}${\"e\".repeat(d.layer)}\n        ${decimalPlaces(d.mag, ePlaces, Math.round)}`;\n        } else {\n            return `${d.sign === -1 ? \"-\" : \"\"}(e^${d.layer})${decimalPlaces(\n                d.mag,\n                ePlaces,\n                Math.round\n            )}`;\n        }\n    }\n}\n\nexport function format(n: number): string {\n    return Math.log10(n) >= 6\n        ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n        : n.toFixed(0);\n}\n\nexport function formatBig(n: Decimal): string {\n    return n.absLog10().toNumber() >= 6\n        ? formatDecimal(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n        : n.toFixed(0);\n}\n\nexport function formatSpecific(n: number): string {\n    return Math.log10(n) >= 6\n        ? n.toExponential(2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n        : n.toFixed(3).replace(\".000\", \"\");\n}\n\nexport function formatBigSpecific(n: Decimal): string {\n    return n.absLog10().toNumber() >= 6\n        ? formatDecimal(n, 2).replace(\"e+\", \"e\").replace(\".00\", \"\")\n        : n.toFixed(3).replace(\".000\", \"\");\n}\n\nfunction assertElementType<T extends keyof HTMLElementTagNameMap>(\n    element: HTMLElement,\n    type: T\n): asserts element is HTMLElementTagNameMap[T] {\n    if (element.tagName !== type.toUpperCase()) {\n        throw new TypeError(`element isn't a <${type}> HTML element`);\n    }\n}\n\n/**\n * @param id Id of the element to get.\n * @returns The HTML element with the given id.\n */\nexport function getElement(id: string): HTMLElement;\n/**\n * @param id Id of the element to get.\n * @param type The expected tag name of the element.\n * @returns The HTML element with the given id.\n */\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\n    id: string,\n    type: T\n): HTMLElementTagNameMap[T];\nexport function getElement<T extends keyof HTMLElementTagNameMap>(\n    id: string,\n    type?: T\n): HTMLElement | HTMLElementTagNameMap[T] {\n    const element = document.getElementById(id);\n    if (element === null) {\n        throw new Error(`Element with id ${id} dosen't exist`);\n    }\n\n    if (type !== undefined) {\n        assertElementType(element, type);\n    }\n    return element;\n}\n\ntype D2Arg<T> = T | Decimal | Operator | D2Arg<T>[];\n\nconst operatorMap = {\n    \"+\": \"plus\",\n    \"*\": \"times\",\n    \"/\": \"div\",\n    \"^\": \"pow\"\n} as const;\n\ntype Operator = keyof typeof operatorMap;\n\nfunction isOperator(x: unknown): x is Operator {\n    return typeof x === \"string\" && x in operatorMap;\n}\n\nexport function onDecimal<T = string>(\n    is: (x: unknown) => x is T,\n    lookup: (key: T) => Decimal\n) {\n    const fn = function (\n        start: T | Decimal | D2Arg<T>[],\n        ...terms: D2Arg<T>[]\n    ): Decimal {\n        let result: Decimal | ((x: D2Arg<T>) => Decimal);\n        if (Array.isArray(start)) {\n            const [first, rest] = splitArgs(start);\n            result = fn(first, ...rest);\n        } else {\n            result = start instanceof Decimal ? start : lookup(start);\n        }\n\n        terms.forEach(token => {\n            if (typeof result === \"function\") {\n                if (isOperator(token)) {\n                    throw new Error(\"two operations in a row\");\n                }\n                if (Array.isArray(token)) {\n                    const [first, rest] = splitArgs(token);\n                    result = result(fn(first, ...rest));\n                } else {\n                    const operand = is(token) ? lookup(token) : token;\n                    result = result(operand);\n                }\n            } else {\n                if (token instanceof Decimal) {\n                    result = result.times(token);\n                } else if (is(token)) {\n                    result = result.times(lookup(token));\n                } else if (Array.isArray(token)) {\n                    const [first, args] = splitArgs(token);\n                    result = result.times(fn(first, ...args));\n                } else {\n                    const left = result;\n                    const method = (d: Decimal) =>\n                        Decimal[operatorMap[token]](left, d); //ERROR HERE AND IN LINE BELOW\n                    result = x => {\n                        if (x instanceof Decimal) {\n                            return method(x);\n                        }\n                        if (Decimal[x as never]) {\n                            throw new Error(\n                                \"cannot have two operations in a row\"\n                            );\n                        }\n\n                        return method(lookup(x as T));\n                    };\n                }\n            }\n        });\n        return result;\n    };\n\n    function splitArgs(args: D2Arg<T>[]): [T | Decimal, D2Arg<T>[]] {\n        const arr = [...args];\n        const head = arr.shift();\n        if (head === undefined) {\n            throw new Error(\"arr is empty\");\n        }\n        if (isOperator(head)) {\n            throw new Error(\"first token cannot be an operator\");\n        }\n        if (Array.isArray(head)) {\n            const [first, rest] = splitArgs(head);\n            return [fn(first, ...rest), arr];\n        }\n        return [head, arr];\n    }\n    return fn;\n}\n\nexport const onBought = onDecimal(isUpgradeName, key =>\n    getUpgradeTimesBought(key)\n);\n\nexport const onBoughtInc = onDecimal(isUpgradeName, key =>\n    getUpgradeTimesBought(key).plus(Decimal.dOne)\n);\n\n// dev only\nif (import.meta.env.DEV)\n    window.cheat = function (): void {\n        switch (playerSettings.cheatMode) {\n            case 0:\n                player.num = player.num.times(Decimal.dTwo);\n                break;\n            case 1:\n                player.alphaNum = player.alphaNum.times(Decimal.dTwo);\n                break;\n            case 2:\n                player.num = player.num.times(Decimal.dTwo);\n                player.alphaNum = player.alphaNum.times(Decimal.dTwo);\n                break;\n            case 3:\n                player.alphaNum = player.alphaNum\n                    .plus(Decimal.dOne)\n                    .times(Decimal.dTwo);\n                break;\n            case 4:\n                player.num = player.num.times(Decimal.dTwo);\n                player.alphaNum = player.alphaNum\n                    .plus(Decimal.dOne)\n                    .times(Decimal.dTwo);\n                break;\n            case 5:\n                player.betaNum = player.betaNum\n                    .plus(Decimal.dOne)\n                    .times(Decimal.dTwo);\n                break;\n        }\n\n        window.changeCheatMode = function (): void {\n            playerSettings.cheatMode = (playerSettings.cheatMode + 1) % 6;\n            getElement(\"cheatmodediv\").textContent =\n                playerSettings.cheatMode.toString();\n        };\n    };\nelse {\n    getElement(\"cheat\").style.display = \"none\";\n    getElement(\"devtoggle\").style.display = \"none\";\n}\n\nwindow.clearls = function (): void {\n    localStorage.clear();\n    location.reload();\n};\n","import { getElement } from \"./util\";\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n    interface Window {\n        loadbackup: VoidFunction;\n        player?: typeof player;\n        playerSettings?: typeof playerSettings;\n        Decimal?: typeof Decimal;\n    }\n}\n\n/**\n * The player save data object.\n */\nexport const player = {\n    /**\n     * All the upgrades.\n     */\n    upgrades: {\n        gen: {\n            cost: Decimal.dZero,\n            timesBought: Decimal.dZero\n        },\n        biggerbatches: {\n            cost: new Decimal(2000),\n            timesBought: Decimal.dZero\n        },\n        speed: {\n            cost: new Decimal(50),\n            timesBought: Decimal.dZero\n        },\n        mbup: {\n            cost: new Decimal(100),\n            timesBought: Decimal.dZero\n        },\n        mbmult: {\n            cost: new Decimal(1000),\n            timesBought: Decimal.dZero\n        },\n        unlockgenboost: {\n            cost: new Decimal(5000),\n            timesBought: Decimal.dZero\n        },\n        genboostuptime: {\n            cost: new Decimal(100),\n            timesBought: Decimal.dZero\n        },\n        genboostupmult: {\n            cost: new Decimal(10000),\n            timesBought: Decimal.dZero\n        },\n        nuclearbuy: {\n            cost: new Decimal(1e8),\n            timesBought: Decimal.dZero\n        },\n        speedparticle: {\n            cost: new Decimal(5e4),\n            timesBought: Decimal.dZero\n        },\n        machine: {\n            cost: new Decimal(2e4),\n            timesBought: Decimal.dZero\n        },\n        nuclearalphabuy: {\n            cost: new Decimal(1e6),\n            timesBought: Decimal.dZero\n        },\n        alphaacc: {\n            cost: new Decimal(1e10),\n            timesBought: Decimal.dZero\n        },\n        threeboost: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        perbang: {\n            cost: new Decimal(4),\n            timesBought: Decimal.dZero\n        },\n        bangspeed: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        unlockpca: {\n            cost: new Decimal(20),\n            timesBought: Decimal.dZero\n        },\n        upgradepca: {\n            cost: Decimal.dTwo,\n            timesBought: Decimal.dZero\n        },\n        boosterup: {\n            cost: new Decimal(100),\n            timesBought: Decimal.dZero\n        },\n        boosteruppercent: {\n            cost: new Decimal(100),\n            timesBought: Decimal.dZero\n        },\n        genboostdouble: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        alphamachinedouble: {\n            cost: new Decimal(1000),\n            timesBought: Decimal.dZero\n        },\n        bangautobuyerunlock: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        upgradebangautobuyer: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        boostsacrifice: {\n            cost: new Decimal(1e5),\n            timesBought: Decimal.dZero\n        },\n        betaacc: {\n            cost: new Decimal(1e10),\n            timesBought: Decimal.dZero\n        },\n        unlockabgb: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        abgbefficiency: {\n            cost: new Decimal(3),\n            timesBought: Decimal.dZero\n        },\n        permerge: {\n            cost: new Decimal(4),\n            timesBought: Decimal.dZero\n        },\n        mergespeed: {\n            cost: Decimal.dOne,\n            timesBought: Decimal.dZero\n        },\n        GnBBAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        GBUAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        MBUAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        NPAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        AAccAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        SAunlock: {\n            cost: new Decimal(0.5),\n            timesBought: Decimal.dZero\n        },\n        unlocknpboost: {\n            cost: Decimal.dTwo,\n            timesBought: Decimal.dZero\n        },\n        upgradenpboost: {\n            cost: Decimal.dTwo,\n            timesBought: Decimal.dZero\n        },\n        reactorupmult: {\n            cost: new Decimal(1500),\n            timesBought: Decimal.dZero\n        },\n        reactoruptime: {\n            cost: new Decimal(1250),\n            timesBought: Decimal.dZero\n        },\n        unlocknapboost: {\n            cost: new Decimal(15),\n            timesBought: Decimal.dZero\n        },\n        upgradenapboost: {\n            cost: new Decimal(15),\n            timesBought: Decimal.dZero\n        },\n        reactorUnlockNAP: {\n            cost: new Decimal(3e4),\n            timesBought: Decimal.dZero\n        },\n        reactorUnlockBP: {\n            cost: new Decimal(8e6),\n            timesBought: Decimal.dZero\n        },\n        reactorUnlockMB: {\n            cost: new Decimal(8000),\n            timesBought: Decimal.dZero\n        },\n        reactorUnlockGB: {\n            cost: new Decimal(2.5e5),\n            timesBought: Decimal.dZero\n        },\n        reactorupMB: {\n            cost: new Decimal(3000),\n            timesBought: Decimal.dZero\n        },\n        doublebeta: {\n            cost: new Decimal(0.2),\n            timesBought: Decimal.dZero\n        },\n        unlockaga: {\n            cost: new Decimal(0.25),\n            timesBought: Decimal.dZero\n        },\n        upgradeaga: {\n            cost: new Decimal(0.25),\n            timesBought: Decimal.dZero\n        },\n        mergeautobuyerunlock: {\n            cost: new Decimal(0.25),\n            timesBought: Decimal.dZero\n        },\n        upgrademergeautobuyer: {\n            cost: new Decimal(0.25),\n            timesBought: Decimal.dZero\n        },\n        buyreturngenerator: {\n            cost: new Decimal(1e5),\n            timesBought: Decimal.dZero\n        },\n        rpup: {\n            cost: new Decimal(2.5e5),\n            timesBought: Decimal.dZero\n        },\n        rpmult: {\n            cost: new Decimal(4e5),\n            timesBought: Decimal.dZero\n        },\n        omegabooster: {\n            cost: new Decimal(12),\n            timesBought: Decimal.dZero\n        }\n    },\n    num: Decimal.dZero,\n    alphaNum: Decimal.dZero,\n    betaNum: Decimal.dZero,\n    gammaNum: Decimal.dZero,\n    deltaNum: Decimal.dZero,\n    omegaNum: Decimal.dZero,\n    genBoostTimeLeft: Decimal.dZero,\n    genBoostTimeLeftCon: Decimal.dTen,\n    genBoostMult: Decimal.dOne,\n    pChunks: Decimal.dZero,\n    bangTime: 300,\n    bangTimeLeft: 1e300,\n    pcaToggle: true,\n    pcaTime: 160,\n    chunkAutobuyerTimeLeft: 0,\n    boosterParticles: Decimal.dZero,\n    untilBoost: 1,\n    omegaBase: Decimal.dZero,\n    omegaBaseCost: new Decimal(1e10),\n    omegaAlpha: Decimal.dZero,\n    omegaAlphaCost: new Decimal(1e12),\n    bangAutobuyerToggle: true,\n    bangAutobuyerTime: 160,\n    bangAutobuyerTimeLeft: 0,\n    clickerParticles: Decimal.dZero,\n    machineWear: 10,\n    aGroups: Decimal.dZero,\n    mergeTime: 300,\n    mergeTimeLeft: 1e300,\n    fuel: Decimal.dZero,\n    superfuel: Decimal.dZero,\n    hyperfuel: Decimal.dZero,\n    instantAutobuyers: {\n        genAutobuyerToggle: false,\n        bbAutobuyerToggle: false,\n        genBoostTimeAutobuyerToggle: false,\n        genBoostMultAutobuyerToggle: false,\n        manBoost1perClickAutobuyerToggle: false,\n        manBoost1xperClickAutobuyerToggle: false,\n        nuclearParticlesAutobuyerToggle: false,\n        nuclearAlphaParticlesAutobuyerToggle: false,\n        AlphaAccAutobuyerToggle: false,\n        SpeedAutobuyerToggle: false\n    },\n    mergeAutobuyerToggle: true,\n    mergeAutobuyerTime: 160,\n    mergeAutobuyerTimeLeft: 0,\n    agaToggle: true,\n    agaTime: 160,\n    groupAutobuyerTimeLeft: 0,\n    returnParticles: Decimal.dZero\n};\n\n/**\n * The player settings object.\n */\nexport const playerSettings = {\n    /**\n     * Current version of the game.\n     */\n    version: \"b2.3.0.0\",\n    /**\n     * The number of seconds every which the game gets automatically saved.\n     */\n    autoSaveDelay: 50,\n    autoSaveMode: 4,\n    autoSaveSet: 50,\n    /**\n     * Number of the currently active theme.\n     */\n    themeNumber: 0,\n    useExperimental: false,\n    /**\n     * Whether or not you're in development mode.\n     */\n    devToggled: false,\n    /**\n     * The current cheat mode, changes which resource you will gain from\n     * cheating.\n     */\n    cheatMode: 0,\n    /**\n     * Whether or not the music is enabled.\n     */\n    playMusic: false\n};\n\nif (import.meta.env.DEV) {\n    window.player = player;\n    window.playerSettings = playerSettings;\n    window.Decimal = Decimal;\n}\n\n/**\n * This function is run when the game loads. Use this to perform any\n * save migrations.\n */\nfunction updateGame(): void {\n    // TODO: NEVER forget to change this when updating the game\n    playerSettings.version = \"b2.3.0.0\";\n    if (\"eSetting\" in playerSettings) delete playerSettings.eSetting;\n}\n\n/**\n * Loads the player settings from localStorage.\n */\nexport function loadSettings(): void {\n    const settings = localStorage.getItem(location.pathname + \"settings\");\n    if (settings !== null) {\n        const decodedSettings = settings.startsWith(\"{\")\n            ? settings\n            : atob(settings);\n        deepMerge(playerSettings, JSON.parse(decodedSettings));\n    }\n    updateGame();\n\n    if (playerSettings.useExperimental) {\n        getElement(\"tabopengamma\").style.display = \"inline\";\n        getElement(\"tabopendelta\").style.display = \"inline\";\n        getElement(\"tabopenomegaomega\").style.display = \"inline\";\n        getElement(\"tabopenstats\").style.display = \"inline\";\n        getElement(\"tabopenachievements\").style.display = \"inline\";\n    } else {\n        getElement(\"tabopengamma\").style.display = \"none\";\n        getElement(\"tabopendelta\").style.display = \"none\";\n        getElement(\"tabopenomegaomega\").style.display = \"none\";\n        getElement(\"tabopenstats\").style.display = \"inline\";\n        getElement(\"tabopenachievements\").style.display = \"none\";\n    }\n    getElement(\"experimentoggle\").textContent =\n        playerSettings.useExperimental.toString();\n}\n\nDecimal.prototype.toJSON = function (): string {\n    return \"D#\" + this.toString();\n};\n\n/**\n * A utility function used when deserializing the player object, used to\n * handle Decimal values.\n */\nfunction saveRevive(_key: string, value: unknown): unknown {\n    return typeof value === \"string\" && value.startsWith(\"D#\")\n        ? new Decimal(value.slice(2))\n        : value;\n}\n\n/**\n * Recursively merge two objects.\n * @param source The object to which copy the property values from the\n * other object.\n * @param data The object from which to copy property values.\n */\nfunction deepMerge<T extends object>(source: T, data: T): void {\n    for (const key in data) {\n        const value = data[key];\n        if (\n            typeof value === \"object\" &&\n            value !== null &&\n            !(value instanceof Decimal)\n        ) {\n            const newSource = source[key];\n            if (!(key in source)) {\n                // @ts-expect-error uhh how do I convince TS this is fine?\n                source[key] = Array.isArray(value) ? [] : {};\n            }\n            if (typeof newSource === \"object\" && newSource !== null) {\n                deepMerge(newSource, value);\n            }\n        } else source[key] = value;\n    }\n}\n\n/**\n * Loads the player save from localStorage, if one exists.\n */\nexport function load(): void {\n    const save = localStorage.getItem(location.pathname);\n    if (save === null) return;\n    deepMerge(\n        player,\n        JSON.parse(save.startsWith(\"{\") ? save : atob(save), saveRevive)\n    );\n}\n\n/**\n * Loads the backup save from localStorage, if one exists.\n */\nwindow.loadbackup = function (): void {\n    const backup = localStorage.getItem(`${location.pathname}backupsave`);\n    if (backup === null) return;\n    localStorage.setItem(location.pathname, backup);\n    location.reload();\n};\n\nexport type InstantAutobuyerName = keyof typeof player.instantAutobuyers;\n\n/**\n * @returns Whether or not the given value is the name of one of the\n * autobuyers.\n */\nexport function isAutobuyerName(x: string): x is InstantAutobuyerName {\n    return x in player.instantAutobuyers;\n}\n\nexport type UpgradeName = keyof typeof player.upgrades;\nexport const UpgradeNames = Object.keys(player.upgrades) as UpgradeName[];\n\n/**\n * @returns Whether or not the given value is the name of one of the\n * upgrades.\n */\nexport function isUpgradeName(x: unknown): x is UpgradeName {\n    return typeof x === \"string\" && x in player.upgrades;\n}\n\n/**\n * A utility function to get the current cost of an upgrade.\n * @param upgradeName The name of the upgrade.\n * @returns The cost of the given upgrade.\n */\nexport function getUpgradeCost(upgradeName: UpgradeName): Decimal {\n    return player.upgrades[upgradeName].cost;\n}\n\n/**\n * A utility function to change the cost of an upgade.\n * @param upgradeName The name of the upgrade.\n * @param newCost The new cost of the given upgrade.\n */\nexport function setUpgradeCost(\n    upgradeName: UpgradeName,\n    newCost: Decimal\n): void {\n    player.upgrades[upgradeName].cost = newCost;\n}\n\n/**\n * A utility function to get the current level of an upgrade.\n * @param upgradeName The name of the upgrade.\n * @returns The current level of the given upgrade.\n */\nexport function getUpgradeTimesBought(upgradeName: UpgradeName): Decimal {\n    return player.upgrades[upgradeName].timesBought;\n}\n","import { playerSettings } from \"./player\";\nimport { getElement } from \"./util\";\n\ndeclare global {\n    interface Window {\n        musicSwitch: () => Promise<void>;\n    }\n}\n\nconst music = getElement(\"audio\", \"audio\");\nconst musicState = getElement(\"musicState\");\n\nasync function startMusic(): Promise<void> {\n    musicState.textContent = playerSettings.playMusic ? \"On\" : \"Off\";\n    if (!playerSettings.playMusic) return;\n    try {\n        await music.play();\n    } catch {\n        setTimeout(startMusic, 100);\n    }\n}\n\nawait startMusic();\n\nwindow.musicSwitch = async function (): Promise<void> {\n    playerSettings.playMusic = !playerSettings.playMusic;\n    playerSettings.playMusic ? await music.play() : music.pause();\n    musicState.textContent = playerSettings.playMusic ? \"On\" : \"Off\";\n};\n","import {\n    player,\n    getUpgradeTimesBought,\n    getUpgradeCost,\n    setUpgradeCost,\n    type UpgradeName\n} from \"./player\";\nimport { formatBig, getElement, onBought, formatDecimal } from \"./util\";\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n    interface Window {\n        buyUpgrade: (upgrade: UpgradeName) => void;\n        buyFiftySpeed: VoidFunction;\n    }\n}\n\nexport const currencyName = {\n    num: \"\",\n    alphaNum: \" Alpha\",\n    boosterParticles: \" Booster Particles\",\n    omegaBase: \" \",\n    betaNum: \" Beta\",\n    omegaAlpha: \" \"\n};\n\nexport type CurrencyName = keyof typeof currencyName;\n\nexport function UpdateCostDisplay(\n    elementID: string,\n    variable: Decimal,\n    currency: CurrencyName = \"num\",\n    precision = 0\n) {\n    if (precision === 0) {\n        getElement(elementID).textContent =\n            \"Cost: \" + formatBig(variable) + currencyName[currency];\n    } else {\n        getElement(elementID).textContent =\n            \"Cost: \" +\n            formatDecimal(variable, precision) +\n            currencyName[currency];\n    }\n}\n\ninterface Upgrade {\n    cost: Decimal;\n    currency: CurrencyName;\n    costDiv: string;\n    costFunction?: ((upgradeAmount: Decimal) => Decimal) | null;\n    scaleFunction: (upgradeName: UpgradeName) => void;\n    extra?: VoidFunction;\n    costRounding?: number;\n}\n\nexport const upgrades = {\n    gen: {\n        cost: Decimal.dInf,\n        costFunction(upgradeAmount) {\n            // 1000 * 4 ^ amount\n            return upgradeAmount.pow_base(4).times(1000);\n        },\n        scaleFunction: scaleGen,\n        costDiv: \"divgencost\",\n        currency: \"num\"\n    },\n    biggerbatches: {\n        cost: Decimal.dInf,\n        costFunction(upgradeAmount) {\n            // 2000 * 2 ^ amount\n            return upgradeAmount.pow_base(Decimal.dTwo).times(2000);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\n        costDiv: \"divbbcost\",\n        currency: \"num\"\n    },\n    speed: {\n        cost: new Decimal(50),\n        costFunction(upgradeAmount) {\n            /* (amount === 0 ? 50 : 100) + 10 * min(amount, 10) +\n\t\t\tmin(max(amount - 10, 0), 1000) * 40 +\n\t\t\t1.1 ^ (max(amount - 1000, 0))*/\n            return new Decimal(upgradeAmount.eq(Decimal.dZero) ? 50 : 100)\n                .plus(Decimal.dTen.times(upgradeAmount.min(Decimal.dTen)))\n                .plus(\n                    upgradeAmount\n                        .minus(Decimal.dTen)\n                        .max(Decimal.dZero)\n                        .min(1000)\n                        .times(40)\n                )\n                .plus(\n                    upgradeAmount.minus(1000).max(Decimal.dZero).pow_base(1.1)\n                );\n        },\n        scaleFunction: scaleSpeed,\n        costDiv: \"divspeedcost\",\n        currency: \"num\"\n    },\n    mbup: {\n        cost: new Decimal(100),\n        costFunction(upgradeAmount) {\n            //TODO: finish this; jakub is implementing actual upgrade formulas into the upgrade object instead of what i was donig before\n            // 100 * 1.5 ^ amount\n            return upgradeAmount.pow_base(1.5).times(100);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(1.5)),\n        costDiv: \"divmbupcost\",\n        currency: \"num\"\n    },\n    mbmult: {\n        cost: new Decimal(1000),\n        costFunction(upgradeAmount) {\n            // 1000 * 2 ^ amount\n            return Decimal.dTwo.pow(upgradeAmount).times(1000);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\n        costDiv: \"divmbmultcost\",\n        currency: \"num\"\n    },\n    unlockgenboost: {\n        cost: new Decimal(5000),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divgenunlockcost\",\n        currency: \"num\"\n    },\n    genboostuptime: {\n        cost: new Decimal(100),\n        costFunction(upgradeAmount) {\n            // 100 * 5 ^ amount\n            return upgradeAmount.pow_base(5).times(100);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(5)),\n        costDiv: \"divgbuptcost\",\n        currency: \"num\",\n        extra: GBTExtra\n    },\n    genboostupmult: {\n        cost: new Decimal(10000),\n        costFunction(upgradeAmount) {\n            // 1e4 * 5 ^ amount\n            return upgradeAmount.pow_base(5).times(1e4);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(5)),\n        costDiv: \"divgbupmcost\",\n        currency: \"num\",\n        extra: GBMExtra\n    },\n    nuclearbuy: {\n        cost: new Decimal(1e8),\n        costFunction(upgradeAmount) {\n            // 1e8 * 7 ^ amount\n            return upgradeAmount.pow_base(7).times(1e8);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(7)),\n        costDiv: \"divnuclearcost\",\n        currency: \"num\",\n        extra: NBExtra\n    },\n    speedparticle: {\n        cost: new Decimal(5e4),\n        costFunction(upgradeAmount) {\n            // 5e4 * 5 ^ amount\n            return upgradeAmount.pow_base(5).times(5e4);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(5)),\n        costDiv: \"divspeedparticlecost\",\n        currency: \"num\"\n    },\n    machine: {\n        cost: new Decimal(2e4),\n        costFunction(upgradeAmount) {\n            // 2e4 * 1.5 ^ amount\n            return upgradeAmount.pow_base(4).times(2e4);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(4)),\n        costDiv: \"divmachinecost\",\n        currency: \"num\",\n        extra: MachineExtra\n    },\n    alphaacc: {\n        cost: new Decimal(1e10),\n        costFunction(upgradeAmount) {\n            // 1e10 * 1000 ^ amount\n            return upgradeAmount.pow_base(1000).times(1e10);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(1000)),\n        costDiv: \"divalphaacceleratorcost\",\n        currency: \"num\"\n    },\n    threeboost: {\n        cost: Decimal.dOne,\n        costFunction(upgradeAmount) {\n            // 4 ^ amount\n            return upgradeAmount.pow_base(4);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(4)),\n        costDiv: \"divthreeboostcost\",\n        currency: \"alphaNum\"\n    },\n    perbang: {\n        cost: new Decimal(4),\n        costFunction(upgradeAmount) {\n            // 4 ^ (amount + 1)\n            return upgradeAmount.add(Decimal.dOne).pow_base(4);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(4)),\n        costDiv: \"divperbangcost\",\n        currency: \"alphaNum\"\n    },\n    bangspeed: {\n        cost: Decimal.dOne,\n        costFunction(upgradeAmount) {\n            /* 2 ^ min(amount, 2) +\n\t\t\t5 ^ (max(amount - 2, 0)) +\n\t\t\t2*/\n            return upgradeAmount\n                .min(Decimal.dTwo)\n                .pow_base(Decimal.dTwo)\n                .plus(\n                    upgradeAmount\n                        .sub(Decimal.dTwo)\n                        .max(Decimal.dZero)\n                        .pow_base(5)\n                )\n                .plus(Decimal.dTwo);\n        },\n        scaleFunction: scaleBangSpeed,\n        costDiv: \"divbangspeedcost\",\n        currency: \"alphaNum\"\n    },\n    unlockpca: {\n        cost: new Decimal(20),\n        costFunction: null,\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divunlockpca\",\n        currency: \"alphaNum\"\n    },\n    upgradepca: {\n        cost: Decimal.dTwo,\n        costFunction(upgradeAmount) {\n            // 2 * 3 ^ amount\n            return upgradeAmount.pow_base(3).times(Decimal.dTwo);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(3)),\n        costDiv: \"divupgradepcacost\",\n        currency: \"alphaNum\",\n        extra: PCAExtra\n    },\n    boosterup: {\n        cost: new Decimal(100),\n        costFunction(upgradeAmount) {\n            // 10 ^ (amount + 2)\n            return upgradeAmount.add(Decimal.dTwo).pow_base(Decimal.dTen);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTen),\n        costDiv: \"divboosterupcost\",\n        currency: \"alphaNum\"\n    },\n    boosteruppercent: {\n        cost: new Decimal(100),\n        costFunction(upgradeAmount) {\n            // 10 ^ (amount + 2)\n            return upgradeAmount.add(Decimal.dTwo).pow_base(Decimal.dTen);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTen),\n        costDiv: \"divboosteruppercentcost\",\n        currency: \"alphaNum\"\n    },\n    nuclearalphabuy: {\n        cost: new Decimal(1e6),\n        costFunction(upgradeAmount) {\n            // 1e6 * 7 ^ amount\n            return upgradeAmount.pow_base(7).times(1e6);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(7)),\n        costDiv: \"divnuclearalphacost\",\n        currency: \"alphaNum\",\n        extra: NABExtra\n    },\n    genboostdouble: {\n        cost: Decimal.dOne,\n        costFunction(upgradeAmount) {\n            // 2 ^ amount\n            return upgradeAmount.pow_base(Decimal.dTwo);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\n        costDiv: \"gboostdouble\",\n        currency: \"alphaNum\",\n        extra: GBDExtra\n    },\n    alphamachinedouble: {\n        cost: new Decimal(1000),\n        costFunction(upgradeAmount) {\n            // 1000 * 3 ^ amount\n            return upgradeAmount.pow_base(3).times(1000);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(3)),\n        costDiv: \"alphamachinedouble\",\n        currency: \"alphaNum\"\n    },\n    bangautobuyerunlock: {\n        cost: Decimal.dOne,\n        costFunction: null,\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divbau\",\n        currency: \"omegaBase\"\n    },\n    upgradebangautobuyer: {\n        cost: Decimal.dOne,\n        costFunction(upgradeAmount) {\n            // 1 + amount / 2\n            return upgradeAmount.div(Decimal.dTwo).plus(Decimal.dOne);\n        },\n        scaleFunction: scaleBA,\n        costDiv: \"divupgradeba\",\n        currency: \"omegaBase\",\n        extra: BAExtra,\n        costRounding: 1\n    },\n    boostsacrifice: {\n        cost: new Decimal(1e5),\n        costFunction(upgradeAmount) {\n            // 1e5 * 10 ^ amount\n            return upgradeAmount.pow_base(Decimal.dTen).times(1e5);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTen),\n        costDiv: \"divboostsacrificecost\",\n        currency: \"boosterParticles\",\n        extra: BSExtra\n    },\n    betaacc: {\n        cost: new Decimal(1e10),\n        costFunction(upgradeAmount) {\n            // 1e10 * 1000 ^ amount\n            return upgradeAmount.pow_base(1000).times(1e10);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(1000)),\n        costDiv: \"divbetaacceleratorcost\",\n        currency: \"alphaNum\"\n    },\n    unlockabgb: {\n        cost: Decimal.dOne,\n        costFunction: null,\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divabgbcost\",\n        currency: \"betaNum\"\n    },\n    abgbefficiency: {\n        cost: new Decimal(3),\n        costFunction(upgradeAmount) {\n            // 4 * (amount + 1)\n            return upgradeAmount.plus(Decimal.dOne).pow_base(Decimal.dTwo);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\n        costDiv: \"divabgbefficiencycost\",\n        currency: \"betaNum\"\n    },\n    permerge: {\n        cost: new Decimal(4),\n        costFunction(upgradeAmount) {\n            // 4 ^ (amount + 1)\n            return upgradeAmount.plus(Decimal.dOne).pow_base(Decimal.dTen);\n        },\n        scaleFunction: scaleMultiplier(new Decimal(4)),\n        costDiv: \"divpermergecost\",\n        currency: \"betaNum\"\n    },\n    mergespeed: {\n        cost: Decimal.dOne,\n        costFunction(upgradeAmount) {\n            /* 2 ^ min(amount, 2) +\n\t\t\t5 ^ (max(amount - 2, 0)) +\n\t\t\t2*/\n            return upgradeAmount\n                .min(Decimal.dTwo)\n                .pow_base(Decimal.dTwo)\n                .plus(\n                    upgradeAmount\n                        .sub(Decimal.dTwo)\n                        .max(Decimal.dZero)\n                        .pow_base(5)\n                )\n                .plus(Decimal.dTwo);\n        },\n        scaleFunction: scaleBangSpeed,\n        costDiv: \"divmergespeedcost\",\n        currency: \"betaNum\"\n    },\n    GnBBAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\n        currency: \"omegaAlpha\"\n    },\n    GBUAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\n        currency: \"omegaAlpha\"\n    },\n    MBUAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: woudlnt it be cool to remove these somehow?\n        currency: \"omegaAlpha\"\n    },\n    NPAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\", //TODO: costDiv: \"usewhencostdisplaynotneeded\"\n        currency: \"omegaAlpha\"\n    },\n    AAccAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\",\n        currency: \"omegaAlpha\"\n    },\n    SAunlock: {\n        cost: new Decimal(0.5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"usewhencostdisplaynotneeded\",\n        currency: \"omegaAlpha\"\n    },\n    unlocknpboost: {\n        cost: Decimal.dTwo,\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divnpboostcost\",\n        currency: \"betaNum\",\n        extra: NBExtra\n    },\n    upgradenpboost: {\n        cost: Decimal.dTwo,\n        costFunction(upgradeAmount) {\n            // 2 6 amount\n            return Decimal.dTwo.pow(upgradeAmount);\n        },\n        scaleFunction: scaleMultiplier(Decimal.dTwo),\n        costDiv: \"divnpboostupcost\",\n        currency: \"betaNum\",\n        extra: NBExtra\n    },\n    reactorupmult: {\n        cost: new Decimal(1500),\n        scaleFunction: scaleReactorUpMult,\n        costDiv: \"divreactorupmultcost\",\n        currency: \"betaNum\"\n    },\n    reactoruptime: {\n        cost: new Decimal(1250),\n        scaleFunction: scaleReactorUpTime,\n        costDiv: \"divreactoruptimecost\",\n        currency: \"betaNum\"\n    },\n    unlocknapboost: {\n        cost: new Decimal(15),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divnapboostcost\",\n        currency: \"betaNum\",\n        extra: NABExtra\n    },\n    upgradenapboost: {\n        cost: new Decimal(15),\n        scaleFunction: scaleMultiplier(new Decimal(4)),\n        costDiv: \"divnapboostupcost\",\n        currency: \"betaNum\",\n        extra: NABExtra\n    },\n    reactorUnlockNAP: {\n        cost: new Decimal(3e4),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divreactorunlockNAPcost\",\n        currency: \"betaNum\"\n    },\n    reactorUnlockBP: {\n        cost: new Decimal(8e6),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divreactorunlockBPcost\",\n        currency: \"betaNum\"\n    },\n    reactorUnlockMB: {\n        cost: new Decimal(8000),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divreactorunlockMBcost\",\n        currency: \"betaNum\"\n    },\n    reactorUnlockGB: {\n        cost: new Decimal(2.5e5),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divreactorunlockGBcost\",\n        currency: \"betaNum\"\n    },\n    reactorupMB: {\n        cost: new Decimal(3000),\n        scaleFunction: scaleMultiplier(new Decimal(1.75)),\n        costDiv: \"divreactorupMBcost\",\n        currency: \"betaNum\"\n    },\n    doublebeta: {\n        cost: new Decimal(0.2),\n        scaleFunction: scaleOmegaAlphaWeak,\n        costDiv: \"divdoublebetacost\",\n        currency: \"omegaAlpha\",\n        costRounding: 1\n    },\n    unlockaga: {\n        cost: new Decimal(0.25),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divunlockaga\",\n        currency: \"omegaAlpha\",\n        costRounding: 2\n    },\n    upgradeaga: {\n        cost: new Decimal(0.25),\n        scaleFunction: scaleOmegaAlpha,\n        costDiv: \"divupgradeagacost\",\n        currency: \"omegaAlpha\",\n        extra: AGAExtra,\n        costRounding: 2\n    },\n    mergeautobuyerunlock: {\n        cost: new Decimal(0.25),\n        scaleFunction: scaleMultiplier(Decimal.dInf),\n        costDiv: \"divmau\",\n        currency: \"omegaAlpha\",\n        costRounding: 2\n    },\n    upgrademergeautobuyer: {\n        cost: new Decimal(0.25),\n        scaleFunction: scaleOmegaAlpha,\n        costDiv: \"divupgradema\",\n        currency: \"omegaAlpha\",\n        extra: MAExtra,\n        costRounding: 2\n    },\n    buyreturngenerator: {\n        cost: new Decimal(1e5),\n        scaleFunction: scaleMultiplier(new Decimal(2)),\n        costDiv: \"divreturngeneratorcost\",\n        currency: \"betaNum\"\n    },\n    rpup: {\n        cost: new Decimal(2.5e5),\n        scaleFunction: scaleMultiplier(new Decimal(3)),\n        costDiv: \"divrpupcost\",\n        currency: \"betaNum\"\n    },\n    rpmult: {\n        cost: new Decimal(4e5),\n        scaleFunction: scaleMultiplier(new Decimal(20)),\n        costDiv: \"divrpmultcost\",\n        currency: \"betaNum\"\n    },\n    omegabooster: {\n        cost: new Decimal(12),\n        scaleFunction: scaleMultiplier(Decimal.dOne),  //TODO: ah yes, scaling by 1. I failed to make scaleFunction and costDiv optional\n        costDiv: \"usewhencostdisplaynotneeded\",\n        currency: \"omegaBase\",\n        extra: OBExtra\n    }\n} as const satisfies Record<string, Upgrade>; // will fix later\n\nexport function scaleMultiplier(\n    multiplier: Decimal\n): (upgradeName: UpgradeName) => void {\n    return function (upgradeName: UpgradeName): void {\n        setUpgradeCost(\n            upgradeName,\n            getUpgradeCost(upgradeName).times(multiplier)\n        );\n    };\n}\n\nexport function scaleBangSpeed(upgradeName: UpgradeName): void {\n    if (getUpgradeTimesBought(upgradeName).lte(Decimal.dTwo)) {\n        scaleMultiplier(Decimal.dTwo)(upgradeName);\n    } else {\n        scaleMultiplier(new Decimal(5))(upgradeName);\n    }\n}\n\nfunction scaleSpeed(upgradeName: UpgradeName): void {\n    const x = getUpgradeTimesBought(upgradeName);\n\n    if (x.lt(Decimal.dTen)) {\n        setUpgradeCost(upgradeName, Decimal.dTen.times(x).plus(100));\n    } else if (x.gte(Decimal.dTen) && x.lte(1000)) {\n        setUpgradeCost(upgradeName, x.times(40).minus(200));\n    } else {\n        scaleMultiplier(new Decimal(1.1))(upgradeName);\n    }\n}\n\nfunction scaleGen(upgradeName: UpgradeName): void {\n    if (getUpgradeCost(upgradeName).eq(Decimal.dZero)) {\n        setUpgradeCost(upgradeName, new Decimal(1000));\n    } else {\n        scaleMultiplier(new Decimal(4))(upgradeName);\n    }\n}\n\nfunction scaleBA(upgradeName: UpgradeName): void {\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.5));\n}\n\nfunction scaleOmegaAlpha(upgradeName: UpgradeName): void {\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.25));\n}\n\nfunction scaleOmegaAlphaWeak(upgradeName: UpgradeName): void {\n    setUpgradeCost(upgradeName, getUpgradeCost(upgradeName).plus(0.2));\n}\n\nfunction scaleReactorUpMult(upgradeName: UpgradeName): void {\n    if (getUpgradeTimesBought(upgradeName).lte(4)) {\n        scaleMultiplier(new Decimal(4))(upgradeName);\n    } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\n        scaleMultiplier(new Decimal(8))(upgradeName);\n    } else {\n        scaleMultiplier(new Decimal(64))(upgradeName);\n    }\n}\n\nfunction scaleReactorUpTime(upgradeName: UpgradeName): void {\n    if (getUpgradeTimesBought(upgradeName).lte(4)) {\n        scaleMultiplier(new Decimal(2.6))(upgradeName);\n    } else if (getUpgradeTimesBought(upgradeName).lte(8)) {\n        scaleMultiplier(new Decimal(4.3))(upgradeName);\n    } else {\n        scaleMultiplier(new Decimal(32))(upgradeName);\n    }\n}\n\nfunction GBTExtra(): void {\n    player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.plus(\n        Decimal.dTwo.pow(getUpgradeTimesBought(\"genboostdouble\")).times(20)\n    );\n    player.genBoostTimeLeft = Decimal.dZero;\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nfunction GBMExtra(): void {\n    player.genBoostTimeLeft = Decimal.dZero;\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nfunction GBDExtra(): void {\n    player.genBoostTimeLeftCon = player.genBoostTimeLeftCon.times(Decimal.dTwo);\n    player.genBoostTimeLeft = Decimal.dZero;\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n}\n\nfunction MachineExtra(): void {\n    player.machineWear = 10;\n}\n\nfunction NBExtra(): void {\n    let nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\n\n    if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\n        nuclearParticles = onBought([\n            \"nuclearbuy\",\n            \"*\",\n            [\n                Decimal.dOne,\n                \"+\",\n                [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\n            ]\n        ]);\n        getElement(\"divnp\").textContent =\n            \"Nuclear Particles: \" + formatDecimal(nuclearParticles, 1);\n    } else {\n        getElement(\"divnp\").textContent =\n            \"Nuclear Particles: \" +\n            formatBig(getUpgradeTimesBought(\"nuclearbuy\"));\n    }\n}\n\nfunction NABExtra(): void {\n    let nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\n\n    if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\n        nuclearAlphaParticles = onBought([\n            \"nuclearalphabuy\",\n            \"*\",\n            [\n                Decimal.dOne,\n                \"+\",\n                [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\n            ]\n        ]);\n        getElement(\"divnap\").textContent =\n            \"Nuclear Alpha Particles: \" +\n            formatDecimal(nuclearAlphaParticles, 1);\n    } else {\n        getElement(\"divnap\").textContent =\n            \"Nuclear Alpha Particles: \" +\n            formatBig(getUpgradeTimesBought(\"nuclearalphabuy\"));\n    }\n}\n\nfunction PCAExtra(): void {\n    if (getUpgradeTimesBought(\"upgradepca\").lte(4)) {\n        player.pcaTime = Math.ceil(player.pcaTime / 2);\n    } else {\n        player.pcaTime = Decimal.dTen\n            .div(getUpgradeTimesBought(\"upgradepca\").minus(3))\n            .ceil()\n            .toNumber();\n    }\n}\n\nfunction AGAExtra(): void {\n    if (getUpgradeTimesBought(\"upgradeaga\").lte(4)) {\n        player.agaTime = Math.ceil(player.agaTime / 2);\n    } else {\n        player.agaTime = Decimal.dTen\n            .div(getUpgradeTimesBought(\"upgradeaga\").minus(3))\n            .ceil()\n            .toNumber();\n    }\n}\n\nfunction BAExtra(): void {\n    if (getUpgradeTimesBought(\"upgradebangautobuyer\").lte(4)) {\n        player.bangAutobuyerTime = Math.ceil(player.bangAutobuyerTime / 2);\n    } else {\n        player.bangAutobuyerTime = Decimal.dTen\n            .div(getUpgradeTimesBought(\"upgradebangautobuyer\").minus(3))\n            .ceil()\n            .toNumber();\n    }\n}\n\nfunction MAExtra(): void {\n    if (getUpgradeTimesBought(\"upgrademergeautobuyer\").lte(4)) {\n        player.mergeAutobuyerTime = Math.ceil(player.mergeAutobuyerTime / 2);\n    } else {\n        player.mergeAutobuyerTime = Decimal.dTen\n            .div(getUpgradeTimesBought(\"upgrademergeautobuyer\").minus(3))\n            .ceil()\n            .toNumber();\n    }\n}\n\nfunction BSExtra(): void {\n    player.boosterParticles = Decimal.dZero;\n}\n\nfunction OBExtra(): void {\n    if (getUpgradeTimesBought(\"omegabooster\").lte(3)) {\n        player.omegaAlpha = player.omegaAlpha.plus(2);\n        getElement(\"divomegaboostersbought\").textContent =\n            `Bought: ${getUpgradeTimesBought(\"omegabooster\").toString()}/3`;\n        if (getUpgradeTimesBought(\"omegabooster\").gte(3)) {\n            getElement(\"omegaboosterbutton\").style.display = \"none\"\n        }\n    }\n}\n\nexport function buyUpgrade(upgradeName: UpgradeName): void {\n    const upgrade = upgrades[upgradeName];\n    const oldCost = getUpgradeCost(upgradeName);\n\n    if (player[upgrade.currency].gte(oldCost)) {\n        player.upgrades[upgradeName].timesBought = player.upgrades[\n            upgradeName\n        ].timesBought.plus(Decimal.dOne);\n        player[upgrade.currency] = player[upgrade.currency].minus(oldCost);\n        upgrade.scaleFunction(upgradeName);\n        if (\"extra\" in upgrade) {\n            upgrade.extra();\n        }\n\n        if (!(\"costRounding\" in upgrade)) {\n            UpdateCostDisplay(\n                upgrade.costDiv,\n                getUpgradeCost(upgradeName),\n                upgrade.currency\n            );\n        } else {\n            UpdateCostDisplay(\n                upgrade.costDiv,\n                getUpgradeCost(upgradeName),\n                upgrade.currency,\n                upgrade.costRounding\n            );\n        }\n    }\n}\nwindow.buyUpgrade = buyUpgrade;\n\nwindow.buyFiftySpeed = function (): void {\n    for (let i = 0; i < 50; i++) {\n        if (player.num.lt(getUpgradeCost(\"speed\"))) return;\n        buyUpgrade(\"speed\");\n    }\n};\n","import { getElement } from \"./util\";\n\nconst achievementContainer = getElement(\"achievementContainer\");\n\n// not implemented yet, we will make achievements later\nexport function createAchievementHTML(): void {\n    const newDiv = document.createElement(\"div\");\n    newDiv.textContent = \"stuff\";\n    achievementContainer.appendChild(newDiv);\n}\n","import { getElement, formatBig, formatBigSpecific } from \"./util\";\nimport { player } from \"./player\";\nimport { type CurrencyName, currencyName } from \"./upgrades\";\nimport Decimal from \"break_eternity.js\";\n\nconst features: Record<FeatureKey, Feature> = {\n    GB: {\n        displayName: \"Generator boost\",\n        unlocksAt: new Decimal(5000),\n        currency: \"num\",\n        next: \"Factory\"\n    },\n    Factory: {\n        displayName: \"Factory\",\n        unlocksAt: new Decimal(1e5),\n        currency: \"num\",\n        next: \"NP\"\n    },\n    NP: {\n        displayName: \"Nuclear Particles\",\n        unlocksAt: new Decimal(1e8),\n        currency: \"num\",\n        next: \"Bang\"\n    },\n    Bang: {\n        displayName: \"Bang\",\n        unlocksAt: new Decimal(1e9),\n        currency: \"num\",\n        next: \"BA\"\n    },\n    BA: {\n        displayName: \"Bang Autobuyer (in Omega tab)\",\n        unlocksAt: new Decimal(1e10),\n        currency: \"num\",\n        next: \"PCA\"\n    },\n    PCA: {\n        displayName: \"Particle Chunk Autobuyer\",\n        unlocksAt: new Decimal(20),\n        currency: \"alphaNum\",\n        next: \"BS\"\n    },\n    BS: {\n        displayName: \"Boost Sacrifice\",\n        unlocksAt: new Decimal(1e5),\n        currency: \"boosterParticles\",\n        next: \"NAP\"\n    },\n    NAP: {\n        displayName: \"Nuclear Alpha Particles\",\n        unlocksAt: new Decimal(1e6),\n        currency: \"alphaNum\",\n        next: \"Merge\"\n    },\n    Merge: {\n        displayName: \"Merge\",\n        unlocksAt: new Decimal(1e9),\n        currency: \"alphaNum\",\n        next: \"Reactor\"\n    },\n    Reactor: {\n        displayName: \"Reactor\",\n        unlocksAt: new Decimal(300),\n        currency: \"betaNum\",\n        next: \"Return\"\n    },\n    Return: {\n        displayName: \"Return\",\n        unlocksAt: new Decimal(1e5),\n        currency: \"betaNum\"\n    }\n};\n\ntype FeatureKey =\n    | \"GB\"\n    | \"Factory\"\n    | \"NP\"\n    | \"Bang\"\n    | \"BA\"\n    | \"PCA\"\n    | \"BS\"\n    | \"NAP\"\n    | \"Merge\"\n    | \"Reactor\"\n    | \"Return\";\n\ninterface Feature {\n    displayName: string;\n    unlocksAt: Decimal;\n    currency: CurrencyName;\n    next?: FeatureKey;\n}\n\nlet goal: FeatureKey | undefined = \"GB\";\n\nexport function nextFeatureHandler(): void {\n    if (goal === undefined) {\n        getElement(\"nextfeature\").textContent =\n            \"You have unlocked all the features.\";\n        return;\n    }\n\n    let feature = features[goal];\n    const featureCurrency = feature.currency;\n    const nextGoal = \"next\" in feature ? feature.next : undefined;\n\n    if (player[featureCurrency].gte(feature.unlocksAt)) {\n        goal = nextGoal;\n        if (goal === undefined) return;\n        feature = features[goal];\n    } else {\n        const percentage = player[featureCurrency]\n            .max(Decimal.dOne)\n            .log10()\n            .div(feature.unlocksAt.max(Decimal.dOne).log10())\n            .times(100)\n            .max(Decimal.dZero);\n\n        getElement(\"nextfeature\").textContent = `Reach\n            ${formatBig(feature.unlocksAt)}\n            ${currencyName[feature.currency]}\n            particles to unlock ${feature.displayName}\n            (${formatBigSpecific(percentage)}%)`;\n    }\n}\n","import \"./style.css\";\nimport \"./music\";\nimport {\n    load,\n    loadSettings,\n    getUpgradeTimesBought,\n    getUpgradeCost,\n    player,\n    playerSettings,\n    UpgradeNames,\n    type InstantAutobuyerName,\n    isAutobuyerName\n} from \"./player\";\nimport {\n    format,\n    formatBig,\n    getElement,\n    onBought,\n    onBoughtInc,\n    formatBigSpecific,\n    formatDecimal\n} from \"./util\";\nimport { UpdateCostDisplay, upgrades, buyUpgrade } from \"./upgrades\";\nimport { createAchievementHTML } from \"./achievements\";\nimport { nextFeatureHandler } from \"./features\";\nimport Decimal from \"break_eternity.js\";\n\ndeclare global {\n    interface Window {\n        theme: VoidFunction;\n        autosavesettings: VoidFunction;\n        openTab: (tab: string) => void;\n        saveExport: () => Promise<void>;\n        saveImport: VoidFunction;\n        saveImportConfirm: VoidFunction;\n        experimentalToggle: VoidFunction;\n        devToggle: VoidFunction;\n        mbman: VoidFunction;\n        gbboost: VoidFunction;\n        makechunk: VoidFunction;\n        bang: VoidFunction;\n        togglepca: VoidFunction;\n        toggleaga: VoidFunction;\n        buyomegabase: VoidFunction;\n        buyomegaalpha: VoidFunction;\n        buyomegabeta: VoidFunction;\n        buyomegagamma: VoidFunction;\n        buyomegadelta: VoidFunction;\n        toggleba: VoidFunction;\n        makegroup: VoidFunction;\n        merge: VoidFunction;\n        togglema: VoidFunction;\n        instantAutobuyerToggle: (\n            autobuyerVar: InstantAutobuyerName,\n            autobuyerDiv: string\n        ) => void;\n        buyFuel: (fuelType: Fuels) => void;\n        saveSettings: VoidFunction;\n        save: VoidFunction;\n        reset: VoidFunction;\n        Decimal?: typeof Decimal;\n    }\n}\n\nif (import.meta.env.DEV) window.Decimal = Decimal;\n\nloadSettings();\nload();\n\nconst divEntireBody = getElement(\"diventirebody\");\nconst whatTheme = getElement(\"whattheme\");\nconst tabOpenFactory = getElement(\"tabopenfactory\");\nconst tabOpenAlpha = getElement(\"tabopenalpha\");\nconst tabOpenBeta = getElement(\"tabopenbeta\");\nconst tabOpenGamma = getElement(\"tabopengamma\");\nconst tabOpenDelta = getElement(\"tabopendelta\");\nconst tabOpenOmega = getElement(\"tabopenomega\");\nconst tabOpenOmegaOmega = getElement(\"tabopenomegaomega\");\nconst tabOpenReactor = getElement(\"tabopenreactor\");\nconst tabOpenStats = getElement(\"tabopenstats\");\nconst tabOpenAchievements = getElement(\"tabopenachievements\");\nconst tabOpenDev = getElement(\"tabopendev\");\nconst devToggle = getElement(\"devtoggle\");\nconst autosaveElement = getElement(\"autosaving\");\nconst divTogglePcaElement = getElement(\"divtogglepca\");\nconst untilPcaElement = getElement(\"untilpca\");\nconst divToggleAgaElement = getElement(\"divtoggleaga\");\nconst untilAgaElement = getElement(\"untilaga\");\n\nconst delayArray = [600, 300, 150, 100, 50, 20, 10];\n\nconst themes = [\n    {\n        textColor: \"#EBEBEB\",\n        bgColor: \"#0e0e0e\",\n        buttonColor: \"\",\n        borderColor: \"\",\n        gradientColor: \"\",\n        themeName: \"Dark Rework v2\",\n        disableGradient: true\n    },\n    {\n        textColor: \"#EBEBEB\",\n        bgColor: \"rgb(34, 36, 34)\",\n        buttonColor: \"\",\n        borderColor: \"#BABABA\",\n        gradientColor: \"black\",\n        themeName: \"Dark Rework\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#D4D4D4\",\n        bgColor: \"rgb(14, 16, 14)\",\n        buttonColor: \"\",\n        borderColor: \"#000000\",\n        gradientColor: \"black\",\n        themeName: \"Darker Rework\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#000000\",\n        bgColor: \"#CCCCCC\",\n        buttonColor: \"\",\n        borderColor: \"#333333\",\n        gradientColor: \"white\",\n        buttonGradientOverride: true,\n        themeName: \"Light Rework\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#000000\",\n        bgColor: \"#CCCCCC\",\n        buttonColor: \"\",\n        borderColor: \"#DD1111\",\n        gradientColor: \"white\",\n        buttonGradientOverride: true,\n        themeName: \"Red Borders\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#CCCCCC\",\n        bgColor: \"#000000\",\n        buttonColor: \"#444444\",\n        borderColor: \"#CCCCCC\",\n        gradientColor: \"#444444\",\n        themeName: \"Black\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#000000\",\n        bgColor: \"#FF91AF\",\n        buttonColor: \"#FFA1BF\",\n        borderColor: \"#FFD1FF\",\n        gradientColor: \"#FFA1BF\",\n        themeName: \"Pink\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#3DD7DE\",\n        bgColor: \"#191970\",\n        buttonColor: \"#3DD7DE\",\n        borderColor: \"#3DD7DE\",\n        gradientColor: \"#7090FF\",\n        buttonGradientOverride: true,\n        themeName: \"Blue\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#000000\",\n        bgColor: \"#DEB2EF\",\n        buttonColor: \"#8A7AED\",\n        borderColor: \"#6A5ACD\",\n        gradientColor: \"#5A1C61\",\n        buttonGradientOverride: true,\n        themeName: \"Purple\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#EBEBEB\",\n        bgColor: \"#696969\",\n        buttonColor: \"#999999\",\n        borderColor: \"#000000\",\n        gradientColor: \"transparent\",\n        themeName: \"Classic\",\n        disableGradient: false\n    },\n    {\n        textColor: \"#EBEBEB\",\n        bgColor: \"#696969\",\n        buttonColor: \"#999999\",\n        borderColor: \"#000000\",\n        gradientColor: \"transparent\",\n        themeName: \"Classic Colors\",\n        disableGradient: false,\n    }\n];\n\nfunction themeExec(): void {\n    const theme = themes[playerSettings.themeNumber];\n    if (theme === undefined) {\n        throw new Error(\"theme dosen't exist!\");\n    }\n    const {\n        textColor,\n        bgColor,\n        buttonColor,\n        borderColor,\n        gradientColor,\n        buttonGradientOverride,\n        themeName,\n        disableGradient,\n    } = theme;\n\n    divEntireBody.style.opacity = \"1\";\n    divEntireBody.style.color = textColor;\n    getElement(\"Settings\").style.color = textColor;\n    getElement(\"Tutorial\").style.color = textColor;\n    getElement(\"Omega\").style.color = textColor;\n    document.body.style.backgroundColor = bgColor;\n    document.body.style.backgroundColor = bgColor;\n\n    const className = document.getElementsByClassName(\"button\");\n    for (const element of className) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`element is not an HTMLElement`);\n        }\n        element.style.backgroundColor = buttonColor;\n\n        if (themeName === \"Classic\") {\n            element.style.border = \"1px solid black\";\n            element.style.borderRadius = \"2px\";\n            element.style.background = buttonColor;\n            element.style.color = \"black\";\n            element.style.fontWeight = \"400\";\n        } else if (themeName === \"Classic Colors\") {\n            element.style.border = \"\";\n            element.style.borderRadius = \"8px\";\n            element.style.color = \"black\";\n            element.style.fontWeight = \"500\";\n        } else {\n            element.style.border = \"\";\n            element.style.borderRadius = \"8px\";\n            element.style.color = \"snow\";\n            element.style.fontWeight = \"500\";\n\n            if (buttonGradientOverride === undefined && disableGradient) {\n                element.style.background = `linear-gradient(45deg, ${gradientColor}, transparent)`;\n            } else if (disableGradient) {\n                element.style.background = `linear-gradient(45deg, black, transparent)`;\n            } else {\n                element.style.background = buttonColor;\n            }\n        }\n    }\n\n    const className2 = document.getElementsByClassName(\"withtheoutline\");\n    for (const element of className2) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`element is not an HTMLElement`);\n        }\n        element.style.border = `0.2em solid ${borderColor}`;\n    }\n\n    const className3 = document.getElementsByClassName(\"redb\");\n    for (const element of className3) {\n        if (!(element instanceof HTMLElement)) {\n            throw new Error(`element is not an HTMLElement`);\n        }\n        element.style.backgroundColor = buttonColor;\n    }\n\n    whatTheme.textContent = `Theme: ${themeName}`;\n}\n\nthemeExec();\n\nwindow.theme = function (): void {\n    playerSettings.themeNumber =\n        (playerSettings.themeNumber + 1) % themes.length;\n    themeExec();\n    saveSettings();\n};\n\nfunction prePUD(): void {\n    tabOpenFactory.style.display = \"none\";\n    tabOpenAlpha.style.display = \"none\";\n    tabOpenBeta.style.display = \"none\";\n    tabOpenReactor.style.display = \"none\";\n    tabOpenGamma.style.display = \"none\";\n    tabOpenDelta.style.display = \"none\";\n    tabOpenOmega.style.display = \"none\";\n    tabOpenStats.style.display = \"none\";\n    tabOpenOmegaOmega.style.display = \"none\";\n}\n\nfunction passiveUnlockDisplay(): void {\n    if (player.num.gte(1e5)) {\n        tabOpenFactory.style.display = \"inline\";\n    }\n    if (player.num.gte(1e9) || player.alphaNum.gt(Decimal.dZero)) {\n        tabOpenAlpha.style.display = \"inline\";\n        tabOpenOmega.style.display = \"inline\";\n    }\n    if (player.alphaNum.gte(1e9) || player.betaNum.gt(Decimal.dZero)) {\n        tabOpenBeta.style.display = \"inline\";\n    }\n    if (player.betaNum.gte(300)) {\n        tabOpenReactor.style.display = \"inline\";\n    }\n    if (playerSettings.useExperimental) {\n        // TODO: remove exprimental when you want\n        tabOpenGamma.style.display = \"inline\";\n        tabOpenDelta.style.display = \"inline\";\n        tabOpenOmegaOmega.style.display = \"inline\";\n        tabOpenStats.style.display = \"inline\";\n        tabOpenAchievements.style.display = \"inline\";\n    }\n}\n\nfunction devToolsVisibilityUpdate(): void {\n    tabOpenDev.style.display = playerSettings.devToggled ? \"inline\" : \"none\";\n    devToggle.textContent = playerSettings.devToggled.toString();\n}\n\nfunction autoSaveSet(): void {\n    const delay = delayArray[playerSettings.autoSaveMode];\n    playerSettings.autoSaveSet = playerSettings.autoSaveDelay = delay ?? 1e308;\n    autosaveElement.textContent =\n        delay !== undefined ? `On, delay: ${format(delay / 10)}s` : \"Off\";\n}\n\nwindow.autosavesettings = function (): void {\n    playerSettings.autoSaveMode =\n        (playerSettings.autoSaveMode + 1) % delayArray.length;\n    autoSaveSet();\n    saveSettings();\n};\n\nfunction pcaTestSingle(): void {\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\n        untilPcaElement.textContent =\n            format(player.chunkAutobuyerTimeLeft) + \" left until next autobuy\";\n        getElement(\"divtogglepca\").style.display = \"inline-block\";\n\n        divTogglePcaElement.textContent = player.pcaToggle ? \"on\" : \"off\";\n    }\n}\n\nfunction agaTestSingle(): void {\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\n        untilAgaElement.textContent =\n            format(player.chunkAutobuyerTimeLeft) + \" left until next autobuy\";\n        getElement(\"divtoggleaga\").style.display = \"inline-block\";\n\n        divToggleAgaElement.textContent = player.agaToggle ? \"On\" : \"Off\";\n    }\n}\n\nfunction baTestSingle() {\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\n        getElement(\"untilba\").textContent =\n            format(player.bangAutobuyerTimeLeft) + \" left until next autobuy\";\n        getElement(\"divtoggleba\").style.display = \"inline-block\";\n\n        getElement(\"divtoggleba\").textContent = player.bangAutobuyerToggle\n            ? \"On\"\n            : \"Off\";\n    }\n}\n\nfunction maTestSingle() {\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\n        getElement(\"untilma\").textContent =\n            format(player.mergeAutobuyerTimeLeft) + \" left until next autobuy\";\n        getElement(\"divtogglema\").style.display = \"inline-block\";\n\n        getElement(\"divtogglema\").textContent = player.mergeAutobuyerToggle\n            ? \"On\"\n            : \"Off\";\n    }\n}\n\nfunction fgbTestSingle() {\n    if (getUpgradeTimesBought(\"gen\").eq(Decimal.dZero)) {\n        getElement(\"divgencost\").textContent = \"Cost: Free\";\n    } else {\n        UpdateCostDisplay(\"divgencost\", getUpgradeCost(\"gen\"));\n    }\n}\n\nlet nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\nif (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\n    nuclearParticles = onBought([\n        \"nuclearbuy\",\n        \"*\",\n        [\n            Decimal.dOne,\n            \"+\",\n            [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\n        ]\n    ]);\n}\nlet nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\nif (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\n    nuclearAlphaParticles = onBought([\n        \"nuclearalphabuy\",\n        \"*\",\n        [\n            Decimal.dOne,\n            \"+\",\n            [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", Decimal.dTen]\n        ]\n    ]);\n}\n\nfunction instantAutobuyerState(\n    autobuyerVar: InstantAutobuyerName,\n    autobuyerDiv: string\n): void {\n    getElement(autobuyerDiv).textContent = player.instantAutobuyers[\n        autobuyerVar\n    ]\n        ? \"On\"\n        : \"Off\";\n}\n\nfunction amountUpdate() {\n    if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\n        getElement(\"divnp\").textContent =\n            \"Nuclear Particles: \" + formatDecimal(nuclearParticles, 1);\n    } else {\n        getElement(\"divnp\").textContent =\n            \"Nuclear Particles: \" +\n            formatBig(getUpgradeTimesBought(\"nuclearbuy\"));\n    }\n    if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\n        getElement(\"divnap\").textContent =\n            \"Nuclear Alpha Particles: \" +\n            formatDecimal(nuclearAlphaParticles, 1);\n    } else {\n        getElement(\"divnap\").textContent =\n            \"Nuclear Alpha Particles: \" +\n            formatBig(getUpgradeTimesBought(\"nuclearalphabuy\"));\n    }\n\n    getElement(\"chunkamount\").textContent =\n        \"Particle Chunks: \" + formatBig(player.pChunks);\n    getElement(\"groupamount\").textContent =\n        \"Particle Chunks: \" + formatBig(player.aGroups);\n\n    getElement(\"omegabasecost\").textContent =\n        \"Cost: \" + formatBig(player.omegaBaseCost);\n    getElement(\"divobase\").textContent =\n        \"You have \" + formatBig(player.omegaBase);\n    getElement(\"omegaalphacost\").textContent =\n        \"Cost: \" + formatBig(player.omegaAlphaCost);\n    getElement(\"divoalpha\").textContent =\n        \"You have \" + formatBig(player.omegaAlpha);\n\n    if (getUpgradeTimesBought(\"omegabooster\").lte(3)) {\n        getElement(\"divomegaboostersbought\").textContent =\n            `Bought: ${getUpgradeTimesBought(\"omegabooster\").toString()}/3`;\n        if (getUpgradeTimesBought(\"omegabooster\").gte(3)) {\n            getElement(\"omegaboosterbutton\").style.display = \"none\"\n        }\n    }\n\n    for (const autobuyerName in player.instantAutobuyers) {\n        const autobuyerDiv = `div${autobuyerName}`;\n\n        if (!isAutobuyerName(autobuyerName)) {\n            throw new Error(\n                \"autoBuyerName dosen't match InstantAutobuyerName type\"\n            );\n        }\n        instantAutobuyerState(autobuyerName, autobuyerDiv);\n    }\n}\n\nfunction loadMisc(): void {\n    for (const upgradeName of UpgradeNames) {\n        const upgrade = upgrades[upgradeName];\n        if (!(\"costRounding\" in upgrade)) {\n            UpdateCostDisplay(\n                upgrade.costDiv,\n                getUpgradeCost(upgradeName),\n                upgrade.currency\n            );\n        } else {\n            UpdateCostDisplay(\n                upgrade.costDiv,\n                getUpgradeCost(upgradeName),\n                upgrade.currency,\n                upgrade.costRounding\n            );\n        }\n    }\n\n    themeExec();\n\n    prePUD();\n    passiveUnlockDisplay();\n\n    autoSaveSet();\n\n    devToolsVisibilityUpdate();\n\n    pcaTestSingle();\n    agaTestSingle();\n    baTestSingle();\n    maTestSingle();\n    fgbTestSingle();\n\n    getElement(\"counter\").innerHTML =\n        \"<span style='color: #64ed93;'>\" +\n        formatBig(player.num) +\n        \"</span> particles\";\n    getElement(\"particlespersecond\").innerHTML =\n        \"You are getting <span style='color: #ed6464;'> 0 </span> particles/s\";\n\n    amountUpdate();\n}\n\nfunction makeElementMap(...names: string[]): Record<string, HTMLElement> {\n    return Object.fromEntries(names.map(x => [x, getElement(x)] as const));\n}\n\nconst tabElements = makeElementMap(\n    \"Base\",\n    \"Factory\",\n    \"Alpha\",\n    \"Beta\",\n    \"Reactor\",\n    \"Gamma\",\n    \"Delta\",\n    \"Omega\",\n    \"OmegaOmega\",\n    \"Achievements\",\n    \"Stats\",\n    \"Settings\",\n    \"Tutorial\",\n    \"Dev\"\n);\nconst tabOmegaElements = makeElementMap(\n    \"oBase\",\n    \"oAlpha\",\n    \"oBeta\",\n    \"oGamma\",\n    \"oDelta\"\n);\n\nfunction hideElements(elements: Record<string, HTMLElement>) {\n    for (const name in elements) {\n        const element = elements[name];\n        if (element === undefined) {\n            throw new Error(\"element dosen't exist\");\n        }\n        element.style.display = \"none\";\n    }\n}\n\nwindow.openTab = function (tab: string): void {\n    if (tab in tabOmegaElements) {\n        hideElements(tabOmegaElements);\n    } else {\n        hideElements(tabElements);\n    }\n    getElement(tab).style.display = \"block\";\n};\n\nloadMisc();\n\nwindow.saveExport = async function (): Promise<void> {\n    await navigator.clipboard.writeText(save());\n    alert(\"Copied to clipboard!\");\n};\n\nwindow.saveImport = function (): void {\n    getElement(\"importareaid\").style.display = \"block\";\n    getElement(\"saveimportconfirm\").style.display = \"block\";\n};\n\nwindow.saveImportConfirm = function (): void {\n    const saveEl = getElement(\"importareaid\", \"textarea\");\n    const savefile = saveEl.value; // really should check for an empty value here\n    localStorage.setItem(location.pathname, savefile);\n    location.reload();\n};\n\nwindow.experimentalToggle = function () {\n    playerSettings.useExperimental = !playerSettings.useExperimental;\n\n    if (playerSettings.useExperimental) {\n        getElement(\"tabopengamma\").style.display = \"inline\";\n        getElement(\"tabopendelta\").style.display = \"inline\";\n        getElement(\"tabopenomegaomega\").style.display = \"inline\";\n        getElement(\"tabopenachievements\").style.display = \"inline\";\n    } else {\n        getElement(\"tabopengamma\").style.display = \"none\";\n        getElement(\"tabopendelta\").style.display = \"none\";\n        getElement(\"tabopenomegaomega\").style.display = \"none\";\n        getElement(\"tabopenachievements\").style.display = \"none\";\n    }\n    getElement(\"experimentoggle\").textContent =\n        playerSettings.useExperimental.toString();\n    saveSettings();\n};\n\nwindow.devToggle = function () {\n    playerSettings.devToggled = !playerSettings.devToggled;\n\n    if (playerSettings.devToggled) {\n        getElement(\"tabopendev\").style.display = \"inline\";\n    } else {\n        getElement(\"tabopendev\").style.display = \"none\";\n    }\n    getElement(\"devtoggle\").textContent = playerSettings.devToggled.toString();\n    saveSettings();\n};\n\ncreateAchievementHTML();\n\nlet machineProd = 10;\nlet clickerParticleMult = player.clickerParticles\n    .div(100)\n    .plus(Decimal.dOne)\n    .times(machineProd);\n\nconst reactor = {\n    isActive: false,\n    fuelTime: new Decimal(300),\n    boost: Decimal.dOne,\n    fuelMult: Decimal.dOne\n};\n//did a bunch of work here\nlet NAPfactor = Decimal.dOne;\nlet BPfactor = Decimal.dOne;\nlet MBfactor = Decimal.dOne;\nlet GBfactor = Decimal.dOne;\n\nlet totalBoostFromNP = nuclearParticles.times(reactor.boost);\nlet totalBoostFromNAP = nuclearAlphaParticles.times(NAPfactor);\nlet totalMBBoost = MBfactor.times(\n    Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\"))\n);\n\nfunction reactorHandler() {\n    reactor.fuelTime = onBought([\n        new Decimal(300),\n        \"*\",\n        [new Decimal(1.25), \"^\", \"reactoruptime\"],\n        \"/\",\n        [Decimal.dTwo, \"^\", \"reactorupmult\"]\n    ]);\n\n    if (player.hyperfuel.lte(Decimal.dZero)) {\n        player.hyperfuel = Decimal.dZero;\n\n        if (player.superfuel.lte(Decimal.dZero)) {\n            player.superfuel = Decimal.dZero;\n\n            if (player.fuel.lte(Decimal.dZero)) {\n                player.fuel = Decimal.dZero;\n\n                reactor.isActive = false;\n            } else {\n                reactor.fuelMult = Decimal.dOne;\n                reactor.isActive = true;\n                player.fuel = player.fuel.minus(\n                    Decimal.dOne.div(reactor.fuelTime)\n                );\n            }\n        } else {\n            reactor.fuelMult = new Decimal(3);\n            reactor.isActive = true;\n            player.superfuel = player.superfuel.minus(\n                Decimal.dOne.div(reactor.fuelTime)\n            );\n        }\n    } else {\n        reactor.fuelMult = new Decimal(6561);\n        reactor.isActive = true;\n        player.hyperfuel = player.hyperfuel.minus(\n            Decimal.dOne.div(reactor.fuelTime)\n        );\n    }\n\n    if (reactor.isActive) {\n        reactor.boost = onBoughtInc([\n            [new Decimal(1.25), \"^\", \"reactorupmult\"],\n            \"*\",\n            reactor.fuelMult\n        ]);\n        getElement(\n            \"divreactorstatus\"\n        ).textContent = `Reactor status: Running (${formatDecimal(\n            player.fuel,\n            2\n        )} Fuel)`;\n    } else {\n        reactor.boost = Decimal.dOne;\n        getElement(\"divreactorstatus\").textContent =\n            \"Reactor status: Out of fuel\";\n    }\n    getElement(\n        \"divreactorfuelusage\"\n    ).textContent = `When active, your reactor is using up 1 fuel every ${formatBig(\n        reactor.fuelTime.div(Decimal.dTen)\n    )} seconds`;\n\n    let NAPtoggle = false;\n    let BPtoggle = false;\n    let MBtoggle = false;\n    let GBtoggle = false;\n\n    if (getUpgradeTimesBought(\"reactorUnlockNAP\").eq(Decimal.dOne)) {\n        NAPtoggle = true;\n        getElement(\"divreactorunlockNAPcost\").textContent = \"Unlocked\";\n        getElement(\"divreactornap\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"reactorUnlockBP\").eq(Decimal.dOne)) {\n        BPtoggle = true;\n        getElement(\"divreactorunlockBPcost\").textContent = \"Unlocked\";\n        getElement(\"divreactorbp\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"reactorUnlockMB\").eq(Decimal.dOne)) {\n        MBtoggle = true;\n        getElement(\"divreactorunlockMBcost\").textContent = \"Unlocked\";\n        getElement(\"divreactormb\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"reactorUnlockGB\").eq(Decimal.dOne)) {\n        GBtoggle = true;\n        getElement(\"divreactorunlockGBcost\").textContent = \"Unlocked\";\n        getElement(\"divreactorgb\").style.display = \"block\";\n    }\n\n    NAPfactor = NAPtoggle\n        ? reactor.boost.plus(Decimal.dOne).div(Decimal.dTwo)\n        : Decimal.dOne;\n    BPfactor = BPtoggle ? reactor.boost.plus(3).div(4) : Decimal.dOne;\n    MBfactor = MBtoggle ? reactor.boost.pow(Decimal.dTwo) : Decimal.dOne;\n    GBfactor = GBtoggle\n        ? reactor.boost.plus(Decimal.dTwo).div(3)\n        : Decimal.dOne;\n\n    if (!reactor.isActive) {\n        //just to make sure boosts are definitely inactive when reactor is out of fuel\n        NAPfactor = Decimal.dOne;\n        BPfactor = Decimal.dOne;\n        GBfactor = Decimal.dOne;\n        MBfactor = Decimal.dOne;\n        totalMBBoost = Decimal.dOne;\n    } else {\n        totalMBBoost = MBfactor.times(\n            Decimal.dTwo.pow(getUpgradeTimesBought(\"reactorupMB\"))\n        );\n    }\n\n    totalBoostFromNP = nuclearParticles.times(reactor.boost);\n    totalBoostFromNAP = nuclearAlphaParticles.times(NAPfactor);\n\n    getElement(\"divreactormain\").textContent = `Current Reactor effects:`;\n    getElement(\n        \"divreactornp\"\n    ).textContent = `Nuclear Particles ${formatBigSpecific(\n        reactor.boost\n    )}x as strong`;\n    getElement(\"divreactormb\").textContent = `Manual Boost ${formatBigSpecific(\n        totalMBBoost\n    )}x as strong`;\n    getElement(\n        \"divreactornap\"\n    ).textContent = `Nuclear Alpha Particles ${formatBigSpecific(\n        NAPfactor\n    )}x as strong`;\n    getElement(\n        \"divreactorgb\"\n    ).textContent = `Generator Boost ${formatBigSpecific(GBfactor)}x as strong`;\n    getElement(\n        \"divreactorbp\"\n    ).textContent = `Booster Particle gain increase by ${formatBigSpecific(\n        BPfactor\n    )}x`;\n}\n\nwindow.mbman = function (): void {\n    const gain = onBoughtInc(\n        \"mbup\",\n        \"*\",\n        \"mbmult\",\n        \"*\",\n        clickerParticleMult,\n        \"*\",\n        totalBoostFromNP.plus(Decimal.dOne),\n        \"*\",\n        totalMBBoost\n    );\n\n    player.num = player.num.plus(gain);\n    getElement(\"counter\").textContent = formatBig(player.num) + \" particles\";\n};\n\nwindow.gbboost = function (): void {\n    player.genBoostTimeLeft = player.genBoostTimeLeftCon;\n};\n\nfunction makechunk(): void {\n    if (player.num.gte(1e9)) {\n        player.num = player.num.minus(1e9);\n        player.pChunks = player.pChunks.plus(Decimal.dOne);\n        getElement(\"chunkamount\").textContent =\n            \"Particle Chunks: \" + formatBig(player.pChunks);\n    }\n}\nwindow.makechunk = makechunk;\n\nfunction bang(): void {\n    if (player.pChunks.gte(Decimal.dTwo)) {\n        if (\n            getUpgradeTimesBought(\"alphaacc\").gt(Decimal.dZero) &&\n            !(\n                player.bangTimeLeft >= 0 &&\n                player.bangTimeLeft <= player.bangTime\n            )\n        ) {\n            player.pChunks = player.pChunks.minus(Decimal.dTwo);\n            player.bangTimeLeft = player.bangTime;\n            getElement(\"chunkamount\").textContent =\n                \"Particle Chunks: \" + formatBig(player.pChunks);\n            getElement(\"boostersmaintext\").style.display = \"block\";\n        }\n    }\n}\nwindow.bang = bang;\n\nwindow.togglepca = function (): void {\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\n        player.pcaToggle = !player.pcaToggle;\n        getElement(\"divtogglepca\").style.display = \"inline-block\";\n\n        getElement(\"divtogglepca\").textContent = player.pcaToggle\n            ? \"On\"\n            : \"Off\";\n    }\n};\n\nwindow.toggleaga = function (): void {\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\n        player.agaToggle = !player.agaToggle;\n        getElement(\"divtoggleaga\").style.display = \"inline-block\";\n\n        getElement(\"divtoggleaga\").textContent = player.agaToggle\n            ? \"On\"\n            : \"Off\";\n    }\n};\n\nwindow.buyomegabase = function (): void {\n    if (player.num.gte(player.omegaBaseCost)) {\n        player.num = player.num.minus(player.omegaBaseCost);\n        player.omegaBase = player.omegaBase.plus(Decimal.dOne);\n        player.omegaBaseCost = player.omegaBaseCost.times(Decimal.dTen);\n        getElement(\"omegabasecost\").textContent =\n            \"Cost: \" + formatBig(player.omegaBaseCost);\n        getElement(\"divobase\").textContent =\n            \"You have \" + formatBig(player.omegaBase);\n    }\n};\n\nwindow.buyomegaalpha = function (): void {\n    if (player.alphaNum.gte(player.omegaAlphaCost)) {\n        player.alphaNum = player.alphaNum.minus(player.omegaAlphaCost);\n        player.omegaAlpha = player.omegaAlpha.plus(Decimal.dOne);\n        player.omegaAlphaCost = player.omegaAlphaCost.times(100);\n        getElement(\"omegaalphacost\").textContent =\n            \"Cost: \" + formatBig(player.omegaAlphaCost);\n        getElement(\"divoalpha\").textContent =\n            \"You have \" + formatBigSpecific(player.omegaAlpha);\n    }\n};\n\nwindow.buyomegabeta = function (): void {\n    /* TODO: implement this */\n};\nwindow.buyomegagamma = function (): void {\n    /* TODO: implement this */\n};\nwindow.buyomegadelta = function (): void {\n    /* TODO: implement this */\n};\n\nwindow.toggleba = function (): void {\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\n        player.bangAutobuyerToggle = !player.bangAutobuyerToggle;\n        getElement(\"divtoggleba\").style.display = \"inline-block\";\n\n        if (player.bangAutobuyerToggle) {\n            getElement(\"divtoggleba\").textContent = \"On\";\n        } else {\n            getElement(\"divtoggleba\").textContent = \"Off\";\n        }\n    }\n};\n\nwindow.togglema = function (): void {\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\n        player.mergeAutobuyerToggle = !player.mergeAutobuyerToggle;\n        getElement(\"divtogglema\").style.display = \"inline-block\";\n\n        if (player.mergeAutobuyerToggle) {\n            getElement(\"divtogglema\").textContent = \"On\";\n        } else {\n            getElement(\"divtogglema\").textContent = \"Off\";\n        }\n    }\n};\n\nfunction makegroup(): void {\n    if (player.alphaNum.gte(1e9)) {\n        player.alphaNum = player.alphaNum.minus(1e9);\n        player.aGroups = player.aGroups.plus(Decimal.dOne);\n        getElement(\"groupamount\").textContent =\n            \"Alpha Groups: \" + formatBig(player.aGroups);\n    }\n}\nwindow.makegroup = makegroup;\n\nfunction merge(): void {\n    if (player.aGroups.gte(Decimal.dTwo)) {\n        if (\n            getUpgradeTimesBought(\"betaacc\").gt(Decimal.dZero) &&\n            !(\n                player.mergeTimeLeft >= 0 &&\n                player.mergeTimeLeft <= player.mergeTime\n            )\n        ) {\n            player.aGroups = player.aGroups.minus(Decimal.dTwo);\n            player.mergeTimeLeft = player.mergeTime;\n            getElement(\"groupamount\").textContent =\n                \"Alpha Groups: \" + formatBig(player.aGroups);\n        }\n    }\n}\nwindow.merge = merge;\n\nwindow.instantAutobuyerToggle = function (\n    autobuyerVar: InstantAutobuyerName,\n    autobuyerDiv: string\n): void {\n    player.instantAutobuyers[autobuyerVar] =\n        !player.instantAutobuyers[autobuyerVar];\n    getElement(autobuyerDiv).textContent = player.instantAutobuyers[\n        autobuyerVar\n    ]\n        ? \"On\"\n        : \"Off\";\n};\n\ntype Fuels = \"player.fuel\" | \"player.superfuel\" | \"player.hyperfuel\";\n\nwindow.buyFuel = function (fuelType: Fuels) {\n    if (fuelType === \"player.fuel\") {\n        if (\n            player.num.gte(1e42) &&\n            player.alphaNum.gte(1e14) &&\n            player.betaNum.gte(50)\n        ) {\n            player.num = player.num.minus(1e42);\n            player.alphaNum = player.alphaNum.minus(1e14);\n            player.betaNum = player.betaNum.minus(50);\n            player.fuel = player.fuel.plus(Decimal.dOne);\n        }\n    } else {\n        //do this later TODO:\n    }\n};\n\nlet alphaFromReturn = Decimal.dZero;\n\nfunction returnParticleHandler(): void {\n    if (getUpgradeTimesBought(\"buyreturngenerator\").gt(Decimal.dZero)) {\n        const gain = onBought([\n            new Decimal(10),\n            \"*\",\n            \"buyreturngenerator\",\n            \"*\",\n            player.betaNum,\n            \"*\",\n            [\"rpup\", \"+\", Decimal.dOne]\n        ]);\n        player.returnParticles = player.returnParticles.plus(gain);\n\n        alphaFromReturn = onBought([\n            new Decimal(\"1e9 \"),\n            \"*\",\n            [Decimal.dTwo, \"^\", \"rpmult\"],\n            [totalBoostFromNAP, \"+\", Decimal.dOne],\n            [Decimal.dTwo, \"^\", \"alphamachinedouble\"]\n        ]);\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        getElement(\"returnboosttext\").textContent = `Your ${formatBig(\n            player.returnParticles\n        )} Return particles (+${formatBig(\n            gain.div(10)\n        )}/s) are returning ${formatBig(\n            alphaFromReturn.div(10)\n        )} Alpha particles per second`;\n    }\n}\n//<div id=\"returnboosttext\">Your 0 Return particles (+0/s) are returning 0 Alpha particles per second\nfunction fgbTestConst(): void {\n    if (getUpgradeTimesBought(\"gen\").gt(Decimal.dZero)) {\n        getElement(\"boostsection\").style.display = \"flex\";\n        getElement(\"bigboosttext\").style.display = \"block\";\n        getElement(\"veryouterboost\").style.display = \"block\";\n\n        if (getUpgradeTimesBought(\"unlocknpboost\").eq(Decimal.dOne)) {\n            nuclearParticles = onBought([\n                \"nuclearbuy\",\n                \"*\",\n                [\n                    Decimal.dOne,\n                    \"+\",\n                    [\"upgradenpboost\", \"+\", Decimal.dOne, \"/\", new Decimal(10)]\n                ]\n            ]);\n            getElement(\"npboostshow\").style.display = \"block\";\n            getElement(\"npboostunlockbutton\").style.display = \"none\";\n            getElement(\"divnpboostcost\").style.display = \"none\";\n        } else {\n            nuclearParticles = getUpgradeTimesBought(\"nuclearbuy\");\n            getElement(\"npboostshow\").style.display = \"none\";\n        }\n        if (getUpgradeTimesBought(\"unlocknapboost\").eq(Decimal.dOne)) {\n            nuclearAlphaParticles = onBought([\n                \"nuclearalphabuy\",\n                \"*\",\n                [\n                    Decimal.dOne,\n                    \"+\",\n                    [\"upgradenapboost\", \"+\", Decimal.dOne, \"/\", new Decimal(10)]\n                ]\n            ]);\n            getElement(\"napboostshow\").style.display = \"block\";\n            getElement(\"napboostunlockbutton\").style.display = \"none\";\n            getElement(\"divnapboostcost\").style.display = \"none\";\n        } else {\n            nuclearAlphaParticles = getUpgradeTimesBought(\"nuclearalphabuy\");\n            getElement(\"napboostshow\").style.display = \"none\";\n        }\n\n        if (getUpgradeTimesBought(\"gen\").eq(Decimal.dZero)) {\n            getElement(\"divgencost\").textContent = \"Cost: Free\";\n        } else {\n            UpdateCostDisplay(\"divgencost\", getUpgradeCost(\"gen\"));\n        }\n\n        reactorHandler();\n        returnParticleHandler();\n\n        getElement(\n            \"nptext\"\n        ).textContent = `Nuclear particles add a +${formatDecimal(\n            reactor.boost,\n            2\n        )}x multiplier to generators, generator boost, and manual boost`;\n        getElement(\n            \"naptext\"\n        ).textContent = `Nuclear particles add a +${formatDecimal(\n            reactor.boost,\n            2\n        )}x multiplier to alpha gain`;\n\n        const boostsacmult = new Decimal(1.5).pow(\n            getUpgradeTimesBought(\"boostsacrifice\")\n        );\n\n        getElement(\n            \"boostsactext\"\n        ).textContent = `Reset your Booster Particles, but increase Booster Particle and Alpha Particle gain. Currently ${formatDecimal(\n            boostsacmult,\n            1\n        )}x.`;\n\n        if (player.genBoostTimeLeft.greaterThan(Decimal.dZero)) {\n            player.genBoostMult = getUpgradeTimesBought(\"genboostupmult\")\n                .times(1.5)\n                .plus(Decimal.dTwo)\n                .times(GBfactor);\n        } else {\n            player.genBoostMult = Decimal.dOne;\n        }\n\n        if (getUpgradeTimesBought(\"unlockgenboost\").eq(Decimal.dOne)) {\n            getElement(\"gbshow\").style.display = \"block\";\n            getElement(\"divgenunlockcost\").style.display = \"none\";\n            getElement(\"gbunlockbutton\").style.display = \"none\";\n        }\n\n        if (getUpgradeTimesBought(\"unlockabgb\").eq(Decimal.dOne)) {\n            getElement(\"abgbshow\").style.display = \"block\";\n            getElement(\"divabgbcost\").style.display = \"none\";\n            getElement(\"abgbunlockbutton\").style.display = \"none\";\n        }\n\n        player.bangTime = Math.ceil(\n            300 / 2 ** getUpgradeTimesBought(\"bangspeed\").toNumber()\n        );\n\n        const alphaGain = onBought(\n            \"alphaacc\",\n            [\"perbang\", \"+\", Decimal.dOne],\n            [totalBoostFromNAP, \"+\", Decimal.dOne],\n            [Decimal.dTwo, \"^\", \"alphamachinedouble\"]\n        ).times(boostsacmult);\n\n        player.mergeTime = Math.ceil(\n            300 / 2 ** getUpgradeTimesBought(\"mergespeed\").toNumber()\n        );\n\n        const betaGain = onBought(\n            \"betaacc\",\n            [\"permerge\", \"+\", Decimal.dOne],\n            [Decimal.dTwo, \"^\", \"doublebeta\"]\n        );\n\n        if (player.bangTimeLeft === 0) {\n            player.alphaNum = player.alphaNum\n                .plus(alphaGain)\n                .plus(alphaFromReturn);\n            getElement(\"bangtimeleft\").textContent = \"\";\n        }\n\n        if (player.mergeTimeLeft === 0) {\n            player.betaNum = player.betaNum.plus(betaGain);\n            getElement(\"mergetimeleft\").textContent = \"\";\n        }\n\n        if (getUpgradeTimesBought(\"machine\").gte(Decimal.dOne)) {\n            machineProd = 9 / Math.log10(player.machineWear) + 1;\n            player.machineWear += 1;\n        }\n\n        clickerParticleMult = player.clickerParticles\n            .div(50)\n            .plus(Decimal.dOne);\n\n        let abgbBoost = Decimal.dOne;\n\n        if (getUpgradeTimesBought(\"unlockabgb\").gt(Decimal.dZero)) {\n            abgbBoost = onBoughtInc(\n                player.alphaNum.cbrt(),\n                \"/\",\n                new Decimal(100),\n                \"*\",\n                \"abgbefficiency\",\n                \"+\",\n                Decimal.dOne\n            );\n        }\n\n        getElement(\n            \"abgbtext\"\n        ).textContent = `Your alpha-based generator boost is multiplying your generators by ${formatBig(\n            abgbBoost\n        )}x (cbrt(alpha)/100*${formatBig(\n            getUpgradeTimesBought(\"abgbefficiency\").plus(Decimal.dOne)\n        )})`;\n\n        const gain: Decimal = onBought(\n            [\"biggerbatches\", \"+\", Decimal.dOne],\n            \"*\",\n            \"gen\",\n            \"*\",\n            [\"speed\", \"/\", Decimal.dTen, \"+\", new Decimal(0.1)],\n            \"*\",\n            player.genBoostMult,\n            \"*\",\n            [[totalBoostFromNP, \"+\", Decimal.dOne], \"^\", Decimal.dTwo],\n            \"*\",\n            [new Decimal(3), \"^\", \"threeboost\"],\n            \"*\",\n            [\n                Decimal.dOne,\n                \"+\",\n                [\n                    [player.boosterParticles, \"+\", Decimal.dOne],\n                    \"/\",\n                    new Decimal(100),\n                    \"*\",\n                    [\n                        [\"boosteruppercent\", \"+\", Decimal.dOne],\n                        \"/\",\n                        new Decimal(100)\n                    ]\n                ]\n            ],\n            \"*\",\n            abgbBoost,\n            \"*\",\n            GBfactor\n        );\n\n        getElement(\"particlesperclick\").textContent =\n            \"You are getting \" +\n            formatBig(\n                onBought(\n                    [\"mbup\", \"+\", Decimal.dOne],\n                    \"*\",\n                    [\"mbmult\", \"+\", Decimal.dOne],\n                    \"*\",\n                    [totalBoostFromNP, \"+\", Decimal.dOne]\n                )\n                    .times(clickerParticleMult)\n                    .times(totalMBBoost)\n            ) +\n            \" particles per click\";\n\n        getElement(\"alphapb\").textContent =\n            \"You are getting \" + formatBig(alphaGain) + \" Alpha/bang\";\n        getElement(\"bangtimeconst\").textContent =\n            \"Currently, bangs take \" +\n            format(player.bangTime / 10) +\n            \" seconds.\";\n        player.bangTimeLeft -= 1;\n\n        if (\n            player.bangTimeLeft >= 0 &&\n            player.bangTimeLeft <= player.bangTime\n        ) {\n            getElement(\"bangtimeleft\").textContent =\n                \"Bang time left: \" + format(player.bangTimeLeft / 10);\n            getElement(\"bangbutton\").style.display = \"none\";\n        } else {\n            getElement(\"bangbutton\").style.display = \"block\";\n        }\n\n        getElement(\"betapb\").textContent =\n            \"You are getting \" + formatBig(betaGain) + \" Beta/merge\";\n        getElement(\"mergetimeconst\").textContent =\n            \"Currently, merges take \" +\n            format(player.mergeTime / 10) +\n            \" seconds.\";\n        player.mergeTimeLeft -= 1;\n\n        if (\n            player.mergeTimeLeft >= 0 &&\n            player.mergeTimeLeft <= player.mergeTime\n        ) {\n            getElement(\"mergetimeleft\").textContent =\n                \"Merge time left: \" + format(player.mergeTimeLeft / 10);\n            getElement(\"mergebutton\").style.display = \"none\";\n        } else {\n            getElement(\"mergebutton\").style.display = \"block\";\n        }\n\n        if (player.genBoostTimeLeft.gt(Decimal.dZero)) {\n            player.genBoostTimeLeft = player.genBoostTimeLeft.minus(\n                Decimal.dOne\n            );\n        }\n        getElement(\"divgbtl\").textContent =\n            \"Boost Time Left: \" +\n            formatBig(player.genBoostTimeLeft.div(Decimal.dTen));\n\n        const bpGain = player.alphaNum\n            .times(getUpgradeTimesBought(\"boosterup\").plus(Decimal.dOne))\n            .times(Decimal.dTwo)\n            .div(Decimal.dTen)\n            .times(BPfactor);\n\n        player.boosterParticles = player.boosterParticles.plus(bpGain);\n\n        const percentBoostDisplay = player.boosterParticles.times(\n            getUpgradeTimesBought(\"boosteruppercent\")\n                .plus(Decimal.dOne)\n                .div(100)\n        );\n\n        if (player.boosterParticles.eq(Decimal.dZero)) {\n            getElement(\n                \"boostersmaintext\"\n            ).textContent = `You are currently getting 0 booster particles per alpha particle per second,\n               resulting in a +0% boost to base particle production`; //just added this special case\n            // trying to fix - usavictor\n        } else if (percentBoostDisplay.lt(100)) {\n            getElement(\n                \"boostersmaintext\"\n            ).textContent = `You are currently getting ${formatBig(\n                bpGain\n                    .times(Decimal.dTen)\n                    .div(player.alphaNum.max(Decimal.dOne))\n            )} booster particles per alpha particle per second,\n               resulting in a +${formatBigSpecific(\n                   percentBoostDisplay\n               )}% boost to base particle production`;\n        } else {\n            getElement(\n                \"boostersmaintext\"\n            ).textContent = `You are currently getting ${formatBig(\n                bpGain.times(Decimal.dTen).div(player.alphaNum)\n            )} booster particles per alpha particle per second,\n               resulting in a ${formatBigSpecific(\n                   percentBoostDisplay.div(100).plus(Decimal.dOne)\n               )}x boost to base particle production`;\n        }\n\n        getElement(\"bpamount\").textContent =\n            \"You have \" +\n            formatBig(player.boosterParticles) +\n            \" booster particles\";\n\n        const clickerParticleGain = onBought([\n            [\"machine\", \"*\", [new Decimal(1.5), \"^\", \"speedparticle\"]],\n            \"/\",\n            Decimal.dTen\n        ]).times(machineProd);\n        player.clickerParticles =\n            player.clickerParticles.plus(clickerParticleGain);\n\n        nextFeatureHandler();\n\n        getElement(\"omegabasecost\").textContent =\n            \"Cost: \" + formatBig(player.omegaBaseCost);\n        getElement(\"divobase\").textContent =\n            \"You have \" + formatDecimal(player.omegaBase, 1);\n        getElement(\"omegaalphacost\").textContent =\n            \"Cost: \" + formatBig(player.omegaAlphaCost);\n        getElement(\"divoalpha\").textContent =\n            \"You have \" + formatDecimal(player.omegaAlpha, 2);\n\n        player.num = player.num.plus(gain);\n\n        getElement(\"particlespersecond\").innerHTML =\n            \"You are getting <span style='color: #ed6464;'>\" +\n            formatBig(gain.times(10)) +\n            \"</span> particles/s\";\n\n        if (player.num.gte(1e8) || nuclearParticles.gt(Decimal.dZero)) {\n            getElement(\"nuclearreach\").style.display = \"none\";\n            getElement(\"nuclearshow\").style.display = \"block\";\n        }\n\n        if (\n            player.alphaNum.gte(1e6) ||\n            nuclearAlphaParticles.gt(Decimal.dZero)\n        ) {\n            getElement(\"nuclearalphareach\").style.display = \"none\";\n            getElement(\"nuclearalphashow\").style.display = \"block\";\n        }\n\n        if (player.num.gte(1e9) || player.pChunks.gt(Decimal.dZero)) {\n            getElement(\"bangshow\").style.display = \"block\";\n        }\n\n        if (player.alphaNum.gte(1e9) || player.aGroups.gt(Decimal.dZero)) {\n            getElement(\"mergeshow\").style.display = \"block\";\n\n            getElement(\"oAlphauupre\").style.display = \"none\";\n            getElement(\"oAlphauupost\").style.display = \"block\";\n        }\n\n        if (\n            player.boosterParticles.gte(1e5) ||\n            getUpgradeTimesBought(\"boostsacrifice\").gt(Decimal.dZero)\n        ) {\n            getElement(\"bpsacshow\").style.display = \"block\";\n        }\n\n        if (\n            player.betaNum.gte(1e5) ||\n            getUpgradeTimesBought(\"buyreturngenerator\").gt(Decimal.dZero)\n        ) {\n            getElement(\"returnbox\").style.display = \"block\";\n        }\n\n        const freeNuclearParticles = nuclearParticles.minus(\n            getUpgradeTimesBought(\"nuclearbuy\")\n        );\n        getElement(\n            \"npboosttext\"\n        ).textContent = `Your Nuclear Particles Boost is giving you \n          ${formatDecimal(freeNuclearParticles, 1)} \n          free Nuclear Particles`;\n        const freeNuclearAlphaParticles = nuclearAlphaParticles.minus(\n            getUpgradeTimesBought(\"nuclearalphabuy\")\n        );\n        getElement(\n            \"napboosttext\"\n        ).textContent = `Your Nuclear Alpha Particles Boost is giving you \n          ${formatDecimal(freeNuclearAlphaParticles, 1)} \n          free Nuclear Alpha Particles`;\n\n        getElement(\"counter\").innerHTML = `<span style=\"color: #64ed93\">\n          ${formatBig(player.num)}\n          </span> particles`;\n        getElement(\"clickercounter\").textContent = `You have \n          ${formatBig(player.clickerParticles)} \n          Clicker Particles \n          (${formatBig(clickerParticleGain.times(Decimal.dTen))}\n          /s), which are making Manual Boost \n          ${formatBigSpecific(clickerParticleMult)}\n          x stronger.`;\n        getElement(\"alphacounter\").textContent =\n            formatBig(player.alphaNum) + \" Alpha particles\";\n        getElement(\"betacounter\").textContent =\n            formatBig(player.betaNum) + \" Beta particles\";\n\n        if (getUpgradeTimesBought(\"alphaacc\").eq(Decimal.dZero)) {\n            getElement(\"bangwarn\").style.display = \"block\";\n        } else {\n            getElement(\"bangwarn\").style.display = \"none\";\n        }\n    }\n}\n\nfunction pcaTestConst(): void {\n    if (getUpgradeTimesBought(\"unlockpca\").eq(Decimal.dOne)) {\n        getElement(\"pcashow\").style.display = \"block\";\n        getElement(\"divunlockpca\").style.display = \"none\";\n        getElement(\"divunlockpcabutton\").style.display = \"none\";\n\n        if (player.pcaToggle === true) {\n            if (player.chunkAutobuyerTimeLeft === 0) {\n                player.chunkAutobuyerTimeLeft = player.pcaTime;\n                makechunk();\n            }\n\n            player.chunkAutobuyerTimeLeft--;\n            getElement(\"untilpca\").textContent =\n                format(player.chunkAutobuyerTimeLeft / 10) +\n                \" left until next autobuy\";\n        }\n    }\n}\n\nfunction agaTestConst(): void {\n    if (getUpgradeTimesBought(\"unlockaga\").eq(Decimal.dOne)) {\n        getElement(\"agashow\").style.display = \"block\";\n        getElement(\"divunlockaga\").style.display = \"none\";\n        getElement(\"divunlockagabutton\").style.display = \"none\";\n\n        if (player.agaToggle === true) {\n            if (player.groupAutobuyerTimeLeft === 0) {\n                player.groupAutobuyerTimeLeft = player.agaTime;\n                makegroup();\n            }\n\n            player.groupAutobuyerTimeLeft--;\n            getElement(\"untilaga\").textContent =\n                format(player.groupAutobuyerTimeLeft / 10) +\n                \" left until next autobuy\";\n        }\n    }\n}\n\nfunction baTestConst(): void {\n    if (getUpgradeTimesBought(\"bangautobuyerunlock\").eq(Decimal.dOne)) {\n        getElement(\"bashow\").style.display = \"block\";\n        getElement(\"divbau\").style.display = \"none\";\n        getElement(\"divbauextra\").style.display = \"none\";\n        getElement(\"baunlockbutton\").style.display = \"none\";\n\n        if (player.bangAutobuyerToggle === true) {\n            if (player.bangAutobuyerTimeLeft === 0) {\n                player.bangAutobuyerTimeLeft = player.bangAutobuyerTime;\n                bang();\n            }\n\n            player.bangAutobuyerTimeLeft--;\n            getElement(\"untilba\").textContent =\n                format(player.bangAutobuyerTimeLeft) +\n                \" left until next autobuy\";\n        }\n    }\n}\n\nfunction maTestConst(): void {\n    if (getUpgradeTimesBought(\"mergeautobuyerunlock\").eq(Decimal.dOne)) {\n        getElement(\"mashow\").style.display = \"block\";\n        getElement(\"divmau\").style.display = \"none\";\n        getElement(\"divmauextra\").style.display = \"none\";\n        getElement(\"maunlockbutton\").style.display = \"none\";\n\n        if (player.mergeAutobuyerToggle === true) {\n            if (player.mergeAutobuyerTimeLeft === 0) {\n                player.mergeAutobuyerTimeLeft = player.mergeAutobuyerTime;\n                merge();\n            }\n\n            player.mergeAutobuyerTimeLeft--;\n            getElement(\"untilma\").textContent =\n                format(player.mergeAutobuyerTimeLeft) +\n                \" left until next autobuy\";\n        }\n    }\n}\n\nfunction instantAutobuyers() {\n    //TODO: make this function not look like absolute garbage\n    if (getUpgradeTimesBought(\"GnBBAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.genAutobuyerToggle) {\n            buyUpgrade(\"gen\");\n        }\n        if (player.instantAutobuyers.bbAutobuyerToggle) {\n            buyUpgrade(\"biggerbatches\");\n        }\n        getElement(\"divGnBBA\").style.display = \"none\";\n        getElement(\"divGnBBAhide\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"GBUAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.genBoostTimeAutobuyerToggle) {\n            buyUpgrade(\"genboostuptime\");\n        }\n        if (player.instantAutobuyers.genBoostMultAutobuyerToggle) {\n            buyUpgrade(\"genboostupmult\");\n        }\n        getElement(\"divGBUA\").style.display = \"none\";\n        getElement(\"divGBUAhide\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"MBUAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.manBoost1perClickAutobuyerToggle) {\n            buyUpgrade(\"mbup\");\n        }\n        if (player.instantAutobuyers.manBoost1xperClickAutobuyerToggle) {\n            buyUpgrade(\"mbmult\");\n        }\n        getElement(\"divMBUA\").style.display = \"none\";\n        getElement(\"divMBUAhide\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"NPAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.nuclearParticlesAutobuyerToggle) {\n            buyUpgrade(\"nuclearbuy\");\n        }\n        if (player.instantAutobuyers.nuclearAlphaParticlesAutobuyerToggle) {\n            buyUpgrade(\"nuclearalphabuy\");\n        }\n        getElement(\"divNPA\").style.display = \"none\";\n        getElement(\"divNPAhide\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"AAccAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.AlphaAccAutobuyerToggle) {\n            buyUpgrade(\"alphaacc\");\n        }\n        getElement(\"divAAccA\").style.display = \"none\";\n        getElement(\"divAAccAhide\").style.display = \"block\";\n    }\n    if (getUpgradeTimesBought(\"SAunlock\").eq(Decimal.dOne)) {\n        if (player.instantAutobuyers.SpeedAutobuyerToggle) {\n            buyUpgrade(\"speed\");\n        }\n        getElement(\"divSA\").style.display = \"none\";\n        getElement(\"divSAhide\").style.display = \"block\";\n    }\n}\n\nfunction savinginloop(): void {\n    playerSettings.autoSaveDelay--;\n\n    if (playerSettings.autoSaveDelay === 0) {\n        playerSettings.autoSaveDelay = playerSettings.autoSaveSet;\n        save();\n    }\n}\n\n//game loop\nsetInterval(() => {\n    passiveUnlockDisplay();\n    pcaTestConst();\n    agaTestConst();\n    baTestConst();\n    maTestConst();\n    fgbTestConst();\n    instantAutobuyers();\n    getElement(\"stat\").textContent = JSON.stringify(player)\n        .replace(/\",\"/g, '\",\\n\"')\n        .replace(/},\"/g, '\",\\n\"');\n    savinginloop();\n}, 100);\n\nfunction saveReplace(_key: string, value: unknown): unknown {\n    if (value instanceof Decimal) return \"D#\" + value.toString();\n    return value;\n}\n\nfunction saveSettings(): void {\n    const settingfile = JSON.stringify(playerSettings);\n    localStorage.setItem(location.pathname + \"settings\", settingfile);\n}\n\nwindow.saveSettings = saveSettings;\n\nfunction save(): string {\n    const savefile = btoa(JSON.stringify(player, saveReplace));\n    localStorage.setItem(location.pathname, savefile);\n    saveSettings();\n    return savefile;\n}\n\nwindow.save = save;\n\nwindow.reset = function (): void {\n    saveSettings();\n    localStorage.removeItem(location.pathname);\n\n    //make backup save\n    const savefile = JSON.stringify(player, saveReplace);\n    localStorage.setItem(location.pathname + \"backupsave\", savefile);\n    location.reload();\n};\n"],"names":["_classCallCheck","instance","Constructor","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","value","writable","defineProperty","key","_createClass","protoProps","staticProps","LRUCache","maxSize","map","first","last","get","size","node","prev","next","has","ListNode","set","delete","MAX_SIGNIFICANT_DIGITS","EXP_LIMIT","LAYER_DOWN","log10","FIRST_NEG_LAYER","NUMBER_EXP_MAX","NUMBER_EXP_MIN","MAX_ES_IN_A_ROW","DEFAULT_FROM_STRING_CACHE_SIZE","powerOf10","powersOf10","push","indexOf0InPowersOf10","power","critical_headers","E","critical_tetr_values","critical_slog_values","D","Decimal","fromValue_noAlloc","FC","sign","layer","mag","fromComponents","FC_NN","fromComponents_noNormalize","decimalPlaces","places","len","numDigits","ceil","abs","rounded","round","pow","toFixed","max","f_maglog10","n","f_gamma","trunc","NEGATIVE_INFINITY","scal1","l","log","n2","np","exp","OMEGA","f_lambertw","z","tol","w","wn","isFinite","concat","toString","d_lambertw","ew","wewz","eq","dZero","dOne","fromNumber","ln","neg","sub","mul","div","add","lt","fromDecimal","fromString","floor","man","residue","fromMantissaExponent","e","exponent","POSITIVE_INFINITY","absmag","signmag","normalize","mantissa","originalValue","cached","fromStringCache","replace","pentationparts","split","_base","_height","heightparts","payload","result","pentate","tetrationparts","_base2","_height2","_heightparts","_payload","_result","tetrate","powparts","_base3","_exponent","_result2","trim","toLowerCase","base","height","ptparts","_payload2","_result3","_payload3","_result4","parts","ecount","numberAttempt","_numberAttempt","newparts","charAt","layerstring","chrcode","charCodeAt","substr","me","_result5","NaN","repeat","toExponential","toStringWithDecimalPlaces","decimal","a","b","maxabs","cmpabs","layera","layerb","magdiff","_magdiff","_mantissa","_magdiff2","_mantissa2","newmag","_newmag","recip","dNaN","cmp","_isFinite2","apply","neq","gt","min","tolerance","eq_tolerance","cmp_tolerance","magA","magB","neq_tolerance","log2","absLog10","pow10","toNumber","gamma","lm","adj","l2","sqrt","this_num","negln","lambertw","iteratedlog","oldheight","fracheight","lte","old_payload","next_payload","tetrate_critical","minus","plus","layeradd10","layeradd","_i","times","fulltimes","fraction","layerloss","iterations","step_size","has_changed_directions_once","previously_rose","slog_internal","new_decimal","currently_rose","dNegOne","copy","slog_critical","diff","_layeradd","slogthis","slog","slogdest","lnx","sin","cos","tan","asin","acos","atan","negate","sinh","cosh","sqr","gte","ascensions","root","other","fromMantissaExponent_noNormalize","fromValue","reciprocate","_isNaN","isNaN","_x","_isFinite","_x2","notEquals","minabs","clamp","clampMin","clampMax","notEquals_tolerance","lt_tolerance","lte_tolerance","gt_tolerance","gte_tolerance","pLog10","logarithm","_other","factorial","lngamma","cube","cbrt","iteratedexp","ssqrt","resourcesAvailable","priceStart","priceRatio","currentOwned","affordGeometricSeries_core","numItems","sumGeometricSeries_core","priceAdd","affordArithmeticSeries_core","sumArithmeticSeries_core","cost","currentRpS","deltaRpS","efficiencyOfPurchase_core","maxLayers","random","randomsign","randomexp","randommag","actualStart","b2","critical_section","grid","lower","upper","basefrac","frac","dTwo","dTen","dInf","dNegInf","dNumberMax","MAX_VALUE","dNumberMin","MIN_VALUE","x","digitsCount","formatDecimal","d","ePlaces","m","format","formatBig","formatBigSpecific","assertElementType","element","type","tagName","toUpperCase","getElement","id","getElementById","operatorMap","+","*","/","^","isOperator","onDecimal","is","lookup","fn","start","terms","isArray","rest","splitArgs","forEach","token","operand","args","left","method","arr","head","shift","onBought","isUpgradeName","getUpgradeTimesBought","onBoughtInc","env","DEV","cheat","playerSettings","cheatMode","player","num","alphaNum","betaNum","changeCheatMode","textContent","style","display","clearls","clear","reload","upgrades","gen","timesBought","biggerbatches","speed","mbup","mbmult","unlockgenboost","genboostuptime","genboostupmult","nuclearbuy","speedparticle","machine","nuclearalphabuy","alphaacc","threeboost","perbang","bangspeed","unlockpca","upgradepca","boosterup","boosteruppercent","genboostdouble","alphamachinedouble","bangautobuyerunlock","upgradebangautobuyer","boostsacrifice","betaacc","unlockabgb","abgbefficiency","permerge","mergespeed","GnBBAunlock","GBUAunlock","MBUAunlock","NPAunlock","AAccAunlock","SAunlock","unlocknpboost","upgradenpboost","reactorupmult","reactoruptime","unlocknapboost","upgradenapboost","reactorUnlockNAP","reactorUnlockBP","reactorUnlockMB","reactorUnlockGB","reactorupMB","doublebeta","unlockaga","upgradeaga","mergeautobuyerunlock","upgrademergeautobuyer","buyreturngenerator","rpup","rpmult","omegabooster","gammaNum","deltaNum","omegaNum","genBoostTimeLeft","genBoostTimeLeftCon","genBoostMult","pChunks","bangTime","bangTimeLeft","pcaToggle","pcaTime","chunkAutobuyerTimeLeft","boosterParticles","untilBoost","omegaBase","omegaBaseCost","omegaAlpha","omegaAlphaCost","bangAutobuyerToggle","bangAutobuyerTime","bangAutobuyerTimeLeft","clickerParticles","machineWear","aGroups","mergeTime","mergeTimeLeft","fuel","superfuel","hyperfuel","instantAutobuyers","genAutobuyerToggle","bbAutobuyerToggle","genBoostTimeAutobuyerToggle","genBoostMultAutobuyerToggle","manBoost1perClickAutobuyerToggle","manBoost1xperClickAutobuyerToggle","nuclearParticlesAutobuyerToggle","nuclearAlphaParticlesAutobuyerToggle","AlphaAccAutobuyerToggle","SpeedAutobuyerToggle","mergeAutobuyerToggle","mergeAutobuyerTime","mergeAutobuyerTimeLeft","agaToggle","agaTime","groupAutobuyerTimeLeft","returnParticles","version","autoSaveDelay","autoSaveMode","autoSaveSet","themeNumber","useExperimental","devToggled","playMusic","updateGame","eSetting","loadSettings","settings","getItem","pathname","decodedSettings","startsWith","deepMerge","parse","toJSON","saveRevive","_key","slice","source","data","newSource","load","save","loadbackup","backup","setItem","isAutobuyerName","UpgradeNames","keys","getUpgradeCost","upgradeName","setUpgradeCost","newCost","music","musicState","startMusic","play","musicSwitch","pause","currencyName","UpdateCostDisplay","elementID","variable","currency","precision","costFunction","upgradeAmount","pow_base","scaleFunction","scaleGen","costDiv","scaleMultiplier","scaleSpeed","extra","GBTExtra","GBMExtra","NBExtra","MachineExtra","scaleBangSpeed","PCAExtra","NABExtra","GBDExtra","scaleBA","BAExtra","costRounding","BSExtra","scaleReactorUpMult","scaleReactorUpTime","scaleOmegaAlphaWeak","scaleOmegaAlpha","AGAExtra","MAExtra","OBExtra","multiplier","nuclearParticles","nuclearAlphaParticles","buyUpgrade","upgrade","oldCost","buyFiftySpeed","achievementContainer","createAchievementHTML","newDiv","createElement","appendChild","features","GB","displayName","unlocksAt","Factory","NP","Bang","BA","PCA","BS","NAP","Merge","Reactor","Return","goal","nextFeatureHandler","feature","featureCurrency","nextGoal","percentage","divEntireBody","whatTheme","tabOpenFactory","tabOpenAlpha","tabOpenBeta","tabOpenGamma","tabOpenDelta","tabOpenOmega","tabOpenOmegaOmega","tabOpenReactor","tabOpenStats","tabOpenAchievements","tabOpenDev","devToggle","autosaveElement","divTogglePcaElement","untilPcaElement","divToggleAgaElement","untilAgaElement","delayArray","themes","textColor","bgColor","buttonColor","borderColor","gradientColor","themeName","disableGradient","buttonGradientOverride","themeExec","theme","opacity","color","body","backgroundColor","className","getElementsByClassName","border","borderRadius","background","fontWeight","className2","className3","saveSettings","prePUD","passiveUnlockDisplay","devToolsVisibilityUpdate","delay","autosavesettings","pcaTestSingle","agaTestSingle","baTestSingle","maTestSingle","fgbTestSingle","instantAutobuyerState","autobuyerVar","autobuyerDiv","amountUpdate","autobuyerName","loadMisc","innerHTML","makeElementMap","names","fromEntries","tabElements","tabOmegaElements","hideElements","elements","name","openTab","tab","saveExport","clipboard","writeText","saveImport","saveImportConfirm","savefile","experimentalToggle","machineProd","clickerParticleMult","reactor","isActive","fuelTime","boost","fuelMult","NAPfactor","BPfactor","MBfactor","GBfactor","totalBoostFromNP","totalBoostFromNAP","totalMBBoost","reactorHandler","NAPtoggle","BPtoggle","MBtoggle","GBtoggle","mbman","gain","gbboost","makechunk","bang","togglepca","toggleaga","buyomegabase","buyomegaalpha","buyomegabeta","buyomegagamma","buyomegadelta","toggleba","togglema","makegroup","merge","instantAutobuyerToggle","buyFuel","fuelType","alphaFromReturn","returnParticleHandler","fgbTestConst","boostsacmult","greaterThan","alphaGain","betaGain","abgbBoost","bpGain","percentBoostDisplay","clickerParticleGain","freeNuclearParticles","freeNuclearAlphaParticles","pcaTestConst","agaTestConst","baTestConst","maTestConst","savinginloop","stringify","saveReplace","settingfile","reset","removeItem"],"mappings":"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","x_google_ignoreList":[0]}